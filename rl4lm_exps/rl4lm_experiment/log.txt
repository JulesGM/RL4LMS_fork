2023-01-03 13:13:44,651 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:44,801 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:13:44,807 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:44,902 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:13:44,917 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,015 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:13:45,021 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,117 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/spiece.model HTTP/1.1" 200 0
2023-01-03 13:13:45,123 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,219 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer.json HTTP/1.1" 200 0
2023-01-03 13:13:45,224 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,325 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/added_tokens.json HTTP/1.1" 404 0
2023-01-03 13:13:45,331 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,428 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/special_tokens_map.json HTTP/1.1" 404 0
2023-01-03 13:13:45,433 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,531 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:13:45,537 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:45,633 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:13:45,699 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:45,830 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:13:45,842 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:45,987 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:13:46,063 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:46,077 [DEBUG] https://raw.githubusercontent.com:443 "GET /huggingface/datasets/2.7.1/metrics/rouge/rouge.py HTTP/1.1" 200 2160
2023-01-03 13:13:46,222 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:46,331 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/meteor/meteor.py HTTP/1.1" 200 0
2023-01-03 13:13:46,347 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:46,496 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/meteor/meteor.py HTTP/1.1" 200 0
2023-01-03 13:13:46,504 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:46,536 [DEBUG] https://raw.githubusercontent.com:443 "GET /huggingface/datasets/2.7.1/metrics/meteor/meteor.py HTTP/1.1" 200 2199
2023-01-03 13:13:47,595 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:47,704 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:13:47,710 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:47,725 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:13:47,753 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:47,863 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/bleu/bleu.py HTTP/1.1" 200 0
2023-01-03 13:13:47,870 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,014 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/bleu/bleu.py HTTP/1.1" 200 0
2023-01-03 13:13:48,021 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,037 [DEBUG] https://raw.githubusercontent.com:443 "GET /huggingface/datasets/2.7.1/metrics/bleu/bleu.py HTTP/1.1" 200 2478
2023-01-03 13:13:48,057 [DEBUG] Starting new HTTPS connection (1): github.com:443
2023-01-03 13:13:48,167 [DEBUG] https://github.com:443 "HEAD /tensorflow/nmt/raw/master/nmt/scripts/bleu.py HTTP/1.1" 302 0
2023-01-03 13:13:48,170 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,319 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /tensorflow/nmt/master/nmt/scripts/bleu.py HTTP/1.1" 200 0
2023-01-03 13:13:48,329 [DEBUG] Starting new HTTPS connection (1): github.com:443
2023-01-03 13:13:48,389 [DEBUG] https://github.com:443 "GET /tensorflow/nmt/raw/master/nmt/scripts/bleu.py HTTP/1.1" 302 0
2023-01-03 13:13:48,393 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,408 [DEBUG] https://raw.githubusercontent.com:443 "GET /tensorflow/nmt/master/nmt/scripts/bleu.py HTTP/1.1" 200 1554
2023-01-03 13:13:48,477 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:48,599 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/bertscore/bertscore.py HTTP/1.1" 200 0
2023-01-03 13:13:48,605 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,777 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/bertscore/bertscore.py HTTP/1.1" 200 0
2023-01-03 13:13:48,785 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:13:48,800 [DEBUG] https://raw.githubusercontent.com:443 "GET /huggingface/datasets/2.7.1/metrics/bertscore/bertscore.py HTTP/1.1" 200 2923
2023-01-03 13:13:48,934 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,040 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:13:49,044 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:13:49,142 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:13:49,150 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,248 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:13:49,255 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,354 [DEBUG] https://huggingface.co:443 "GET /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 8326
2023-01-03 13:13:49,371 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,468 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:13:49,474 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,575 [DEBUG] https://huggingface.co:443 "GET /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 9881
2023-01-03 13:13:49,590 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,686 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:13:49,692 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:49,791 [DEBUG] https://huggingface.co:443 "GET /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 15079
2023-01-03 13:13:49,917 [DEBUG] Starting new HTTPS connection (1): storage.googleapis.com:443
2023-01-03 13:13:50,082 [DEBUG] https://storage.googleapis.com:443 "HEAD /huggingface-nlp/cache/datasets/cnn_dailymail/3.0.0/3.0.0/dataset_info.json HTTP/1.1" 404 0
2023-01-03 13:13:50,089 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:50,187 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/11343c3752184397d56efc19a8a7cceb68089318/data/cnn_stories.tgz HTTP/1.1" 302 0
2023-01-03 13:13:50,192 [DEBUG] Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2023-01-03 13:13:50,393 [DEBUG] https://cdn-lfs.huggingface.co:443 "HEAD /datasets/cnn_dailymail/e8fbc0027e54e0a916abd9c969eb35f708ed1467d7ef4e3b17a56739d65cb200?response-content-disposition=attachment%3B%20filename%3D%22cnn_stories.tgz%22&Expires=1673028830&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZG4tbGZzLmh1Z2dpbmdmYWNlLmNvL2RhdGFzZXRzL2Nubl9kYWlseW1haWwvZThmYmMwMDI3ZTU0ZTBhOTE2YWJkOWM5NjllYjM1ZjcwOGVkMTQ2N2Q3ZWY0ZTNiMTdhNTY3MzlkNjVjYjIwMD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPWF0dGFjaG1lbnQlM0IlMjBmaWxlbmFtZSUzRCUyMmNubl9zdG9yaWVzLnRneiUyMiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTY3MzAyODgzMH19fV19&Signature=l40K-9wvT6kVD0o7GClylfz0HOj~fTn0iM681-o0ry3q2s-Yke0qtqInU9UxWXwbj-Eb9wHwM0JXkUvPZMfBOqIFiOHxLhaMaVEqqn6lb898wZwgMXgMMnR-8~RuW1E4IenCVxCW5vkLu8xKRItOwkkHQHu7BxxeknZXvepjJkAp91CTmmp-ohq11CBvINHLQG7UuyQsCWE6C11kAFcLFUJUdTtHAFUWduFqKhRFikxY7EAfbYi8kM5y-DelWk9xdGuRNlTYXcIgUA0GZMe5Pp~7UAipsmVu7vtTfMdDRMLcU1LtPgRRlBZi4M5wAnxxwXAaxOgraHsUmbKC6Fan1A__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 0
2023-01-03 13:13:50,402 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:50,502 [DEBUG] https://huggingface.co:443 "GET /datasets/cnn_dailymail/resolve/11343c3752184397d56efc19a8a7cceb68089318/data/cnn_stories.tgz HTTP/1.1" 302 1006
2023-01-03 13:13:50,507 [DEBUG] Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2023-01-03 13:13:50,655 [DEBUG] https://cdn-lfs.huggingface.co:443 "GET /datasets/cnn_dailymail/e8fbc0027e54e0a916abd9c969eb35f708ed1467d7ef4e3b17a56739d65cb200?response-content-disposition=attachment%3B%20filename%3D%22cnn_stories.tgz%22&Expires=1673021389&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZG4tbGZzLmh1Z2dpbmdmYWNlLmNvL2RhdGFzZXRzL2Nubl9kYWlseW1haWwvZThmYmMwMDI3ZTU0ZTBhOTE2YWJkOWM5NjllYjM1ZjcwOGVkMTQ2N2Q3ZWY0ZTNiMTdhNTY3MzlkNjVjYjIwMD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPWF0dGFjaG1lbnQlM0IlMjBmaWxlbmFtZSUzRCUyMmNubl9zdG9yaWVzLnRneiUyMiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTY3MzAyMTM4OX19fV19&Signature=tMSJ7CfsNHlqE8RbRoYsgPOAbj7SMxe3n0fF8aXJiUUjXuqlYsnVIkd-bg8efixye34kameeJWAQnKdlZPj~32R1lkaTVROPq4AmC9sRRF8dwZvOSttrlbaYKGYDNhr6FSSLuTbkE6HgaFscJqW3pVhOEbER5kvlgIvLxfPcI5OTxqoG3WByTWAM1aZbft58PgyalpM16sOEv4W5oLb5AhwRXrQjk5UyDjcpQDkAFKBFGoUxO843o2Ajl5FABZVRc593nvFiqz19e0GGJGRs7O1Sf8c4-dmo7rFiQALwtwcgxBoVV-RqUl~gegtFkn0AF7Fb~rISj7CowX1y3pDuuQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 158577824
2023-01-03 13:13:53,442 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:53,543 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/11343c3752184397d56efc19a8a7cceb68089318/data/dailymail_stories.tgz HTTP/1.1" 302 0
2023-01-03 13:13:53,548 [DEBUG] Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2023-01-03 13:13:53,663 [DEBUG] https://cdn-lfs.huggingface.co:443 "HEAD /datasets/cnn_dailymail/ad69010002210b7c406718248ee66e65868b9f6820f163aa966369878d14147e?response-content-disposition=attachment%3B%20filename%3D%22dailymail_stories.tgz%22&Expires=1673028834&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZG4tbGZzLmh1Z2dpbmdmYWNlLmNvL2RhdGFzZXRzL2Nubl9kYWlseW1haWwvYWQ2OTAxMDAwMjIxMGI3YzQwNjcxODI0OGVlNjZlNjU4NjhiOWY2ODIwZjE2M2FhOTY2MzY5ODc4ZDE0MTQ3ZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPWF0dGFjaG1lbnQlM0IlMjBmaWxlbmFtZSUzRCUyMmRhaWx5bWFpbF9zdG9yaWVzLnRneiUyMiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTY3MzAyODgzNH19fV19&Signature=rcUH71LZG3PN8StCKKrM9XnblVu-2soH~-3T4wifY1iCaHyhXZbY0fzNd3ZBAX3I5FsF4TvUb7WACBsnG2pjZtO2xmhNkaP4p~SMF5UvAZ9mBzo6hGyzkpOyEUy1XkwDvdpv~tRqWJfayvUgRwfz259MgvXoxRpjkNWw974PhnF6f3I5oVCU12bH-ZF~mxDJeDPgzDPVvLhoZrtAebfFVx2FniOH8NgrbdOxtuAwE94DdRFBhtIoL5wYuDhY5OyTQzp0sw7etseRMOWXb5FqEAl9qzMtWhyoAXIJUIMQa9N5oETC~ktKAyAubQggCnD22zxUEQtT~lneHkBeMlyppQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 0
2023-01-03 13:13:53,672 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:13:53,769 [DEBUG] https://huggingface.co:443 "GET /datasets/cnn_dailymail/resolve/11343c3752184397d56efc19a8a7cceb68089318/data/dailymail_stories.tgz HTTP/1.1" 302 1020
2023-01-03 13:13:53,773 [DEBUG] Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2023-01-03 13:13:53,898 [DEBUG] https://cdn-lfs.huggingface.co:443 "GET /datasets/cnn_dailymail/ad69010002210b7c406718248ee66e65868b9f6820f163aa966369878d14147e?response-content-disposition=attachment%3B%20filename%3D%22dailymail_stories.tgz%22&Expires=1673021392&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZG4tbGZzLmh1Z2dpbmdmYWNlLmNvL2RhdGFzZXRzL2Nubl9kYWlseW1haWwvYWQ2OTAxMDAwMjIxMGI3YzQwNjcxODI0OGVlNjZlNjU4NjhiOWY2ODIwZjE2M2FhOTY2MzY5ODc4ZDE0MTQ3ZT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPWF0dGFjaG1lbnQlM0IlMjBmaWxlbmFtZSUzRCUyMmRhaWx5bWFpbF9zdG9yaWVzLnRneiUyMiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTY3MzAyMTM5Mn19fV19&Signature=g0nk~jlLwXY8wiCcwmxNhsr6kCJPQjvYJmtdoG4t3wKLkvfNHL0B476W~xN5P6G-LbODea78MuP1GA3y7a6qY1MPtpn4RS7XUx12TNDIb8QEx8NLov6OcQ8ldn8xEZ~qYZKtlZewUOHMSBUPV-I8fcLVHVMuNtxIowcGzx6fT2W214pwzIruuLPhfcqgqlpeYFMWghxZRMm3lm8CbexF5qb9jC2VbRthak9WbwKpFzESNJmMvEs0SbyO1vznOBvw~dPGYUHC-KgdBa8mktp5yV-vM8EO302LHEXDSNj8MyaRzzXBTGaFlppAaFkKUBdJEG4rqT5MNQtULQ~Bj9RFOw__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 375893739
2023-01-03 13:13:58,197 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:00,474 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /abisee/cnn-dailymail/master/url_lists/all_train.txt HTTP/1.1" 200 0
2023-01-03 13:14:00,484 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:00,511 [DEBUG] https://raw.githubusercontent.com:443 "GET /abisee/cnn-dailymail/master/url_lists/all_train.txt HTTP/1.1" 200 12259516
2023-01-03 13:14:00,864 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:01,209 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /abisee/cnn-dailymail/master/url_lists/all_val.txt HTTP/1.1" 200 0
2023-01-03 13:14:01,216 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:01,242 [DEBUG] https://raw.githubusercontent.com:443 "GET /abisee/cnn-dailymail/master/url_lists/all_val.txt HTTP/1.1" 200 660943
2023-01-03 13:14:01,276 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:01,488 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /abisee/cnn-dailymail/master/url_lists/all_test.txt HTTP/1.1" 200 0
2023-01-03 13:14:01,495 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:14:01,511 [DEBUG] https://raw.githubusercontent.com:443 "GET /abisee/cnn-dailymail/master/url_lists/all_test.txt HTTP/1.1" 200 572061
2023-01-03 13:16:29,913 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:30,027 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:16:30,035 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:16:30,171 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:16:30,179 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:30,278 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:16:30,292 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:30,393 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:16:30,410 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:30,511 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:16:30,562 [WARNING] Found cached dataset cnn_dailymail (/home/mila/g/gagnonju/.cache/huggingface/datasets/cnn_dailymail/3.0.0/3.0.0/1b3c71476f6d152c31c1730e83ccb08bcf23e348233f4fcc11e182248e6bf7de)
2023-01-03 13:16:31,874 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:31,987 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:16:31,994 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:16:32,106 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:16:32,114 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:32,214 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:16:32,227 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:32,324 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:16:32,337 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:32,436 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:16:32,487 [WARNING] Found cached dataset cnn_dailymail (/home/mila/g/gagnonju/.cache/huggingface/datasets/cnn_dailymail/3.0.0/3.0.0/1b3c71476f6d152c31c1730e83ccb08bcf23e348233f4fcc11e182248e6bf7de)
2023-01-03 13:16:34,805 [INFO] [bold blue]_build_model_heads: [white bold]Entry
2023-01-03 13:16:34,860 [INFO] [bold blue]_build_model_heads: [white bold]Loading policy model
2023-01-03 13:16:34,867 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:34,967 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:16:35,022 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:35,125 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2023-01-03 13:16:37,779 [INFO] [bold blue]_build_model_heads: [white bold]Loading value model
2023-01-03 13:16:37,785 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:37,890 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:16:37,901 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:16:38,000 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2023-01-03 13:16:40,477 [INFO] [bold blue]_build_model_heads: [white bold]Copying policy model to ref model
2023-01-03 13:16:43,123 [INFO] [bold blue]_build_model_heads: [white bold]Done copying policy model to ref model
2023-01-03 13:16:43,126 [INFO] [bold blue]_build_model_heads: [white bold]Applying model parallel
2023-01-03 13:16:43,127 [INFO] [bold blue]_build_model_heads: [white bold]self._policy_model.parallelize()
2023-01-03 13:16:52,621 [INFO] [bold blue]_build_model_heads: [white bold]self._ref_model.parallelize()
2023-01-03 13:16:53,020 [INFO] [bold blue]_build_model_heads: [white bold]self._value_model.parallelize()
2023-01-03 13:16:53,301 [INFO] [bold blue]_build_model_heads: [white bold]self._value_head.to(self.device)
2023-01-03 13:16:53,303 [INFO] [bold blue]_build_model_heads: [white bold]Done.
2023-01-03 13:16:53,563 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:16:59,013 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:16:59,133 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:02,386 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:02,479 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:05,642 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:05,738 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:08,907 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:09,002 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:12,237 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:12,332 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:15,503 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:15,603 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:18,765 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:18,862 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:22,094 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:22,187 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:25,359 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:25,449 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:28,495 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:28,585 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:31,793 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:31,882 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:35,038 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:35,128 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:38,276 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:38,362 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:41,526 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:41,622 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:44,844 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:44,928 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:48,108 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:48,192 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:51,350 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:51,442 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:54,590 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:54,677 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:17:57,901 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:17:57,986 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:01,191 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:01,278 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:04,442 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:04,534 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:07,692 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:07,779 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:11,010 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:11,092 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:14,269 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:14,356 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:17,557 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:17,655 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:20,881 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:20,966 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:24,142 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:24,226 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:27,388 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:27,478 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:30,683 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:30,767 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:33,983 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:34,068 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:37,235 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:37,321 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:40,479 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:40,565 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:43,787 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:43,883 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:47,074 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:47,160 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:50,319 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:50,406 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:53,562 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:53,648 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:18:56,872 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:18:56,957 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:00,152 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:00,236 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:03,396 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:03,480 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:06,637 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:06,722 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:09,889 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:09,977 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:13,199 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:13,288 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:16,461 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:16,550 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:19,712 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:19,801 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:22,965 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:23,051 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:26,271 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:26,359 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:29,548 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:29,633 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:32,838 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:32,924 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:36,148 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:36,235 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:39,416 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:39,501 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:42,660 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:42,747 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:45,926 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:46,020 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:49,256 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:49,345 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:52,510 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:52,599 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:55,770 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:55,861 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:19:59,083 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:19:59,175 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:02,361 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:02,463 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:05,636 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:05,730 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:08,973 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:09,115 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:12,314 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:12,412 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:15,628 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:15,721 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:18,886 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:18,979 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:22,187 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:22,281 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:25,482 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:25,576 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:28,742 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:28,834 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:32,019 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:32,110 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:35,333 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:35,439 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:38,608 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:38,704 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:41,914 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:42,008 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:45,263 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:45,367 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:48,587 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:48,683 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:51,873 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:51,969 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:55,155 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:55,252 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:20:58,467 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:20:58,563 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:01,761 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:01,865 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:05,069 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:05,164 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:08,366 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:08,463 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:11,636 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:11,730 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:14,940 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:15,035 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:18,233 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:18,325 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:21,540 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:21,635 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:24,845 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:24,937 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:28,125 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:28,227 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:31,448 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:31,545 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:34,737 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:34,831 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:38,000 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:38,095 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:41,316 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:41,411 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:44,608 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:44,699 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:47,866 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:47,957 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:51,170 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:51,261 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:54,465 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:54,561 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:21:57,779 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:21:57,879 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:01,104 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:01,210 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:04,392 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:04,485 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:07,706 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:07,802 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:11,002 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:11,108 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:14,313 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:14,408 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:17,611 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:17,707 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:20,886 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:20,983 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:24,197 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:24,293 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:27,487 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:27,589 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:30,773 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:30,869 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:34,090 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:34,220 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:37,409 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:37,504 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:40,724 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:40,820 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:44,010 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:44,104 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:47,301 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:47,395 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:50,603 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:50,695 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:53,879 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:53,982 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:22:57,197 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:22:57,296 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:00,487 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:00,579 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:03,768 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:03,862 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:07,083 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:07,178 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:10,365 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:10,456 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:13,711 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:13,803 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:17,001 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:17,093 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:20,275 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:20,368 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:23,592 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:23,687 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:26,873 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:26,964 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:30,139 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:30,232 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:33,456 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:33,549 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:36,736 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:36,828 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:40,003 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:40,096 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:43,322 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:43,425 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:46,611 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:46,706 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:49,922 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:50,020 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:53,214 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:53,311 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:56,487 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:56,582 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:23:59,811 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:23:59,904 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:24:03,097 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:24:03,190 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:24:06,364 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:24:06,458 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:24:09,690 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:24:09,796 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:24:12,979 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:24:13,063 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([68, 512])
	- attention_mask.shape                  = torch.Size([68, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:24:15,296 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:52:41,208 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,355 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:52:41,361 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,457 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:52:41,467 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,568 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:52:41,573 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,672 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/spiece.model HTTP/1.1" 200 0
2023-01-03 13:52:41,678 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,774 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer.json HTTP/1.1" 200 0
2023-01-03 13:52:41,783 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,882 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/added_tokens.json HTTP/1.1" 404 0
2023-01-03 13:52:41,888 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:41,986 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/special_tokens_map.json HTTP/1.1" 404 0
2023-01-03 13:52:41,992 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:42,090 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 13:52:42,097 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:42,194 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:52:42,255 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:42,390 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:52:42,398 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:42,581 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:52:42,654 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:42,755 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/meteor/meteor.py HTTP/1.1" 200 0
2023-01-03 13:52:42,760 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:42,861 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/meteor/meteor.py HTTP/1.1" 200 0
2023-01-03 13:52:43,090 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:43,201 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:52:43,207 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:43,222 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/rouge/rouge.py HTTP/1.1" 200 0
2023-01-03 13:52:43,252 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:43,362 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/bleu/bleu.py HTTP/1.1" 200 0
2023-01-03 13:52:43,368 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:43,529 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/bleu/bleu.py HTTP/1.1" 200 0
2023-01-03 13:52:43,547 [DEBUG] Starting new HTTPS connection (1): github.com:443
2023-01-03 13:52:43,677 [DEBUG] https://github.com:443 "HEAD /tensorflow/nmt/raw/master/nmt/scripts/bleu.py HTTP/1.1" 302 0
2023-01-03 13:52:43,681 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:43,785 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /tensorflow/nmt/master/nmt/scripts/bleu.py HTTP/1.1" 200 0
2023-01-03 13:52:43,823 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:43,959 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/metrics/bertscore/bertscore.py HTTP/1.1" 200 0
2023-01-03 13:52:43,965 [DEBUG] Starting new HTTPS connection (1): raw.githubusercontent.com:443
2023-01-03 13:52:44,079 [DEBUG] https://raw.githubusercontent.com:443 "HEAD /huggingface/datasets/2.7.1/metrics/bertscore/bertscore.py HTTP/1.1" 200 0
2023-01-03 13:52:44,181 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:44,285 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:52:44,290 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:52:44,402 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:52:44,410 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:44,508 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:52:44,521 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:44,619 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:52:44,631 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:52:44,729 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:52:44,802 [WARNING] Found cached dataset cnn_dailymail (/home/mila/g/gagnonju/.cache/huggingface/datasets/cnn_dailymail/3.0.0/3.0.0/1b3c71476f6d152c31c1730e83ccb08bcf23e348233f4fcc11e182248e6bf7de)
2023-01-03 13:53:10,483 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:10,591 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:53:10,609 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:53:10,749 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:53:10,762 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:10,864 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:53:10,878 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:10,978 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:53:10,995 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:11,095 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:53:11,144 [WARNING] Found cached dataset cnn_dailymail (/home/mila/g/gagnonju/.cache/huggingface/datasets/cnn_dailymail/3.0.0/3.0.0/1b3c71476f6d152c31c1730e83ccb08bcf23e348233f4fcc11e182248e6bf7de)
2023-01-03 13:53:12,487 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:12,599 [DEBUG] https://huggingface.co:443 "GET /api/datasets/cnn_dailymail HTTP/1.1" 200 3728
2023-01-03 13:53:12,606 [DEBUG] Starting new HTTPS connection (1): s3.amazonaws.com:443
2023-01-03 13:53:12,722 [DEBUG] https://s3.amazonaws.com:443 "HEAD /datasets.huggingface.co/datasets/datasets/cnn_dailymail/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:53:12,732 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:12,832 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/cnn_dailymail.py HTTP/1.1" 200 0
2023-01-03 13:53:12,845 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:12,948 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/dataset_infos.json HTTP/1.1" 200 0
2023-01-03 13:53:12,960 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:13,063 [DEBUG] https://huggingface.co:443 "HEAD /datasets/cnn_dailymail/resolve/main/README.md HTTP/1.1" 200 0
2023-01-03 13:53:13,114 [WARNING] Found cached dataset cnn_dailymail (/home/mila/g/gagnonju/.cache/huggingface/datasets/cnn_dailymail/3.0.0/3.0.0/1b3c71476f6d152c31c1730e83ccb08bcf23e348233f4fcc11e182248e6bf7de)
2023-01-03 13:53:15,588 [INFO] [bold blue]_build_model_heads: [white bold]Entry
2023-01-03 13:53:15,645 [INFO] [bold blue]_build_model_heads: [white bold]Loading policy model
2023-01-03 13:53:15,651 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:15,760 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:53:15,814 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:16,001 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2023-01-03 13:53:18,649 [INFO] [bold blue]_build_model_heads: [white bold]Loading value model
2023-01-03 13:53:18,656 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:18,761 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 13:53:18,771 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 13:53:18,871 [DEBUG] https://huggingface.co:443 "HEAD /t5-base/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2023-01-03 13:53:21,372 [INFO] [bold blue]_build_model_heads: [white bold]Copying policy model to ref model
2023-01-03 13:53:24,131 [INFO] [bold blue]_build_model_heads: [white bold]Done copying policy model to ref model
2023-01-03 13:53:24,137 [INFO] [bold blue]_build_model_heads: [white bold]Applying model parallel
2023-01-03 13:53:24,138 [INFO] [bold blue]_build_model_heads: [white bold]self._policy_model.parallelize()
2023-01-03 13:53:34,068 [INFO] [bold blue]_build_model_heads: [white bold]self._ref_model.parallelize()
2023-01-03 13:53:34,424 [INFO] [bold blue]_build_model_heads: [white bold]self._value_model.parallelize()
2023-01-03 13:53:34,735 [INFO] [bold blue]_build_model_heads: [white bold]self._value_head.to(self.device)
2023-01-03 13:53:34,737 [INFO] [bold blue]_build_model_heads: [white bold]Done.
2023-01-03 13:53:35,004 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:40,263 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:40,375 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:43,603 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:43,706 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:46,879 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:46,975 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:50,197 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:50,294 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:53,488 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:53,584 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:53:56,773 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:53:56,876 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:00,092 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:00,189 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:03,365 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:03,459 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:06,668 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:06,759 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:09,730 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:09,819 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:13,073 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:13,170 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:16,402 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:16,501 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:19,661 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:19,754 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:22,918 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:23,004 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:26,227 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:26,313 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:29,508 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:29,593 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:32,750 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:32,835 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:35,990 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:36,077 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:39,277 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:39,362 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:42,579 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:42,667 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:45,831 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:45,914 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:49,136 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:49,219 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:52,440 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:52,522 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:55,689 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:55,775 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:54:58,919 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:54:59,003 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:02,153 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:02,236 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:05,393 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:05,483 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:08,697 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:08,780 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:11,978 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:12,063 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:15,224 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:15,312 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:18,463 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:18,548 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:21,723 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:21,811 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:25,092 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:25,185 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:28,359 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:28,446 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:31,673 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:31,757 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:34,941 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:35,028 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:38,178 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:38,263 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:41,407 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:41,492 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:44,638 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:44,723 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:47,885 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:47,973 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:51,195 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:51,284 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:54,472 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:54,563 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:55:57,717 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:55:57,809 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:01,048 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:01,137 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:04,336 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:04,430 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:07,586 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:07,688 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:10,899 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:10,988 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:14,197 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:14,287 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:17,446 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:17,547 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:20,732 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:20,821 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:24,036 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:24,127 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:27,287 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:27,388 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:30,571 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:30,671 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:33,891 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:33,985 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:37,140 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:37,235 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:40,401 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:40,496 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:43,678 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:43,774 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:46,988 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:47,110 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:50,297 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:50,409 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:53,622 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:53,723 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:56:56,889 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:56:56,987 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:00,179 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:00,287 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:03,496 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:03,595 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:06,770 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:06,866 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:10,057 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:10,163 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:13,370 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:13,467 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:16,746 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:16,844 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:20,032 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:20,139 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:23,329 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:23,425 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:26,643 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:26,742 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:29,946 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:30,044 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:33,268 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:33,373 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:36,584 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:36,680 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:39,866 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:39,965 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:43,168 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:43,278 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:46,463 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:46,560 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:49,763 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:49,875 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:53,102 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:53,199 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:56,380 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:56,476 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:57:59,690 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:57:59,798 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:02,978 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:03,076 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:06,288 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:06,382 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:09,609 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:09,706 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:12,877 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:12,974 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:16,175 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:16,272 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:19,485 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:19,579 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:22,750 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:22,845 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:26,069 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:26,171 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:29,427 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:29,520 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:32,757 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:32,852 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:36,015 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:36,112 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:39,333 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:39,429 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:42,630 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:42,725 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:45,886 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:45,981 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:49,202 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:49,299 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:52,501 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:52,595 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:55,765 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:55,872 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:58:59,114 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:58:59,215 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:02,446 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:02,545 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:05,776 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:05,883 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:09,049 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:09,145 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:12,386 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:12,485 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:15,681 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:15,786 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:19,014 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:19,112 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:22,308 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:22,406 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:25,569 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:25,666 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:28,917 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:29,021 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:32,192 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:32,291 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:35,465 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:35,562 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:38,791 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:38,889 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:42,096 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:42,191 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:45,425 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:45,520 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:48,702 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:48,798 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:51,982 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:52,077 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:55,308 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:55,417 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 13:59:58,574 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 13:59:58,671 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:01,888 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:01,992 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:05,192 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:05,298 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:08,498 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:08,595 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:11,820 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:11,920 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:15,091 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:15,188 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:18,411 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:18,517 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:21,788 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:21,887 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:25,110 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:25,209 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:28,369 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:28,465 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:31,674 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:31,773 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:34,974 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:35,074 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:38,244 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:38,342 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:41,551 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:41,647 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:44,848 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:44,944 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:48,127 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:48,233 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:51,425 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:51,521 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:54,776 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:00:54,862 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([68, 512])
	- attention_mask.shape                  = torch.Size([68, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:00:57,087 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:02:40,543 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:40,687 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 14:02:40,692 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:40,790 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 14:02:40,793 [DEBUG] Attempting to acquire lock 140329492530992 on /home/mila/g/gagnonju/.cache/huggingface/transformers/dea67b44b38d504f2523f3ddb6acb601b23d67bee52c942da336fa1283100990.94cae8b3a8dbab1d59b9d4827f7ce79e73124efa6bb970412cd503383a95f373.lock
2023-01-03 14:02:40,796 [DEBUG] Lock 140329492530992 acquired on /home/mila/g/gagnonju/.cache/huggingface/transformers/dea67b44b38d504f2523f3ddb6acb601b23d67bee52c942da336fa1283100990.94cae8b3a8dbab1d59b9d4827f7ce79e73124efa6bb970412cd503383a95f373.lock
2023-01-03 14:02:40,801 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:40,899 [DEBUG] https://huggingface.co:443 "GET /roberta-large/resolve/main/config.json HTTP/1.1" 200 482
2023-01-03 14:02:40,906 [DEBUG] Attempting to release lock 140329492530992 on /home/mila/g/gagnonju/.cache/huggingface/transformers/dea67b44b38d504f2523f3ddb6acb601b23d67bee52c942da336fa1283100990.94cae8b3a8dbab1d59b9d4827f7ce79e73124efa6bb970412cd503383a95f373.lock
2023-01-03 14:02:40,908 [DEBUG] Lock 140329492530992 released on /home/mila/g/gagnonju/.cache/huggingface/transformers/dea67b44b38d504f2523f3ddb6acb601b23d67bee52c942da336fa1283100990.94cae8b3a8dbab1d59b9d4827f7ce79e73124efa6bb970412cd503383a95f373.lock
2023-01-03 14:02:40,916 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:41,014 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/vocab.json HTTP/1.1" 200 0
2023-01-03 14:02:41,017 [DEBUG] Attempting to acquire lock 140329492531088 on /home/mila/g/gagnonju/.cache/huggingface/transformers/7c1ba2435b05451bc3b4da073c8dec9630b22024a65f6c41053caccf2880eb8f.d67d6b367eb24ab43b08ad55e014cf254076934f71d832bbab9ad35644a375ab.lock
2023-01-03 14:02:41,019 [DEBUG] Lock 140329492531088 acquired on /home/mila/g/gagnonju/.cache/huggingface/transformers/7c1ba2435b05451bc3b4da073c8dec9630b22024a65f6c41053caccf2880eb8f.d67d6b367eb24ab43b08ad55e014cf254076934f71d832bbab9ad35644a375ab.lock
2023-01-03 14:02:41,025 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:41,162 [DEBUG] https://huggingface.co:443 "GET /roberta-large/resolve/main/vocab.json HTTP/1.1" 200 898823
2023-01-03 14:02:41,458 [DEBUG] Attempting to release lock 140329492531088 on /home/mila/g/gagnonju/.cache/huggingface/transformers/7c1ba2435b05451bc3b4da073c8dec9630b22024a65f6c41053caccf2880eb8f.d67d6b367eb24ab43b08ad55e014cf254076934f71d832bbab9ad35644a375ab.lock
2023-01-03 14:02:41,460 [DEBUG] Lock 140329492531088 released on /home/mila/g/gagnonju/.cache/huggingface/transformers/7c1ba2435b05451bc3b4da073c8dec9630b22024a65f6c41053caccf2880eb8f.d67d6b367eb24ab43b08ad55e014cf254076934f71d832bbab9ad35644a375ab.lock
2023-01-03 14:02:41,465 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:41,561 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/merges.txt HTTP/1.1" 200 0
2023-01-03 14:02:41,564 [DEBUG] Attempting to acquire lock 140330106072656 on /home/mila/g/gagnonju/.cache/huggingface/transformers/20b5a00a80e27ae9accbe25672aba42ad2d4d4cb2c4b9359b50ca8e34e107d6d.5d12962c5ee615a4c803841266e9c3be9a691a924f72d395d3a6c6c81157788b.lock
2023-01-03 14:02:41,567 [DEBUG] Lock 140330106072656 acquired on /home/mila/g/gagnonju/.cache/huggingface/transformers/20b5a00a80e27ae9accbe25672aba42ad2d4d4cb2c4b9359b50ca8e34e107d6d.5d12962c5ee615a4c803841266e9c3be9a691a924f72d395d3a6c6c81157788b.lock
2023-01-03 14:02:41,572 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:41,680 [DEBUG] https://huggingface.co:443 "GET /roberta-large/resolve/main/merges.txt HTTP/1.1" 200 456318
2023-01-03 14:02:41,871 [DEBUG] Attempting to release lock 140330106072656 on /home/mila/g/gagnonju/.cache/huggingface/transformers/20b5a00a80e27ae9accbe25672aba42ad2d4d4cb2c4b9359b50ca8e34e107d6d.5d12962c5ee615a4c803841266e9c3be9a691a924f72d395d3a6c6c81157788b.lock
2023-01-03 14:02:41,873 [DEBUG] Lock 140330106072656 released on /home/mila/g/gagnonju/.cache/huggingface/transformers/20b5a00a80e27ae9accbe25672aba42ad2d4d4cb2c4b9359b50ca8e34e107d6d.5d12962c5ee615a4c803841266e9c3be9a691a924f72d395d3a6c6c81157788b.lock
2023-01-03 14:02:41,878 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:41,979 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/added_tokens.json HTTP/1.1" 404 0
2023-01-03 14:02:41,985 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:42,085 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/special_tokens_map.json HTTP/1.1" 404 0
2023-01-03 14:02:42,092 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:42,190 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/tokenizer_config.json HTTP/1.1" 404 0
2023-01-03 14:02:42,196 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:42,292 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 14:02:42,355 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:42,453 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/config.json HTTP/1.1" 200 0
2023-01-03 14:02:42,564 [DEBUG] Starting new HTTPS connection (1): huggingface.co:443
2023-01-03 14:02:42,663 [DEBUG] https://huggingface.co:443 "HEAD /roberta-large/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2023-01-03 14:02:42,668 [DEBUG] Attempting to acquire lock 140329487577040 on /home/mila/g/gagnonju/.cache/huggingface/transformers/8e36ec2f5052bec1e79e139b84c2c3089cb647694ba0f4f634fec7b8258f7c89.c43841d8c5cd23c435408295164cda9525270aa42cd0cc9200911570c0342352.lock
2023-01-03 14:02:42,670 [DEBUG] Lock 140329487577040 acquired on /home/mila/g/gagnonju/.cache/huggingface/transformers/8e36ec2f5052bec1e79e139b84c2c3089cb647694ba0f4f634fec7b8258f7c89.c43841d8c5cd23c435408295164cda9525270aa42cd0cc9200911570c0342352.lock
2023-01-03 14:02:42,676 [DEBUG] Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2023-01-03 14:02:42,798 [DEBUG] https://cdn-lfs.huggingface.co:443 "GET /roberta-large/36a10a8b694fadf9bf4f9049d14e257e88be45313ae02d882af9e60f39b8b2e8?response-content-disposition=attachment%3B%20filename%3D%22pytorch_model.bin%22&Expires=1673018039&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9jZG4tbGZzLmh1Z2dpbmdmYWNlLmNvL3JvYmVydGEtbGFyZ2UvMzZhMTBhOGI2OTRmYWRmOWJmNGY5MDQ5ZDE0ZTI1N2U4OGJlNDUzMTNhZTAyZDg4MmFmOWU2MGYzOWI4YjJlOD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPWF0dGFjaG1lbnQlM0IlMjBmaWxlbmFtZSUzRCUyMnB5dG9yY2hfbW9kZWwuYmluJTIyIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNjczMDE4MDM5fX19XX0_&Signature=CmmEDft282OKJMDIUYTaVMuWDSV5H~KZ8fYYzmnbvHaC8jvkPJ6HR3SPBzT9lbTVJZsw98Rt59z9tfthz1IDpNNtVx0fFRUtMguQaE-gNyKJScvV2Yr-~x8wGNvkL-MsQraV1JVSqOYhb-HSvtugyMx-LKQL4hNZSuqKSMUTLQBVmq71o2RinNCwlMa6WjhCkEOERNr19UjdqPiWDoiW6haacQzvX~yJmVtZ12P1~zQV1vKuxxjmBHQouSrO~eTyrwkSZYDDftJswkJ0lNG9zxZyDTlkrhNy69RbBjyf9JYsvRkb~KEgv4xE0zS~yRkRSHx5Xg6H-Jaf1GPZBRsEdQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 1425941629
2023-01-03 14:03:30,674 [DEBUG] Attempting to release lock 140329487577040 on /home/mila/g/gagnonju/.cache/huggingface/transformers/8e36ec2f5052bec1e79e139b84c2c3089cb647694ba0f4f634fec7b8258f7c89.c43841d8c5cd23c435408295164cda9525270aa42cd0cc9200911570c0342352.lock
2023-01-03 14:03:30,677 [DEBUG] Lock 140329487577040 released on /home/mila/g/gagnonju/.cache/huggingface/transformers/8e36ec2f5052bec1e79e139b84c2c3089cb647694ba0f4f634fec7b8258f7c89.c43841d8c5cd23c435408295164cda9525270aa42cd0cc9200911570c0342352.lock
2023-01-03 14:05:20,267 [INFO] Split val predictions
2023-01-03 14:05:20,270 [INFO] {'split_name': 'val', 'sample_id': 'val_9048', 'prompt_text': "Summarize: A  killer newt the size of a small car which roamed lakes and rivers in the time of the dinosaurs has been discovered in Portugal. Described as 'like something out of a bad monster movie', the Metoposaurus algarvensis once\xa0took the place of crocodiles as one of the Earth's top predators when they lived more than 200 million years ago. A distant relative to today's salamander, the fossilised remains were found during a dig at an ancient lake in southern Portugual which may have been home to hundreds of the creatures. Scroll down for video . Scientists have discovered a giant newt which would have terrorised lakes and rivers during the rise of the dinosaurs . Dr Steve Brusatte, from the University of Edinburgh's School of GeoSciences, who led a study of Metoposaurus published in the Journal of Vertebrate Paleontology, said: 'This new amphibian looks like something out of a bad monster movie. 'It was as long as a small car and had hundreds of sharp teeth in its big flat head, which kind of looks like a toilet seat when the jaws snap shut. It was the type of fierce predator that the very first dinosaurs had to put up with if they strayed too close to the water, long before the glory days of T. rex and Brachiosaurus.' The family of giant salamander-like amphibians to which Metoposaurus belonged included other species found in parts of modern-day Africa, Europe, India and North America. All were wiped out during a mass extinction 201 million years ago, long before the death of the dinosaurs. A distant relative to today's salamander or newt (pictured) the fossilised remains were found during a dig at an ancient lake in southern Portugual which may have been home to hundreds of the creatures . Described as 'like something out of a bad monster movie', the Metoposaurus algarvensis were the same size as a small car, such as this Fiat 500 . This event marked the end of the Triassic Period, when the super landmass of Pangaea, which included all the world's present-day continents, began to break apart. The extinction killed off many groups of vertebrates, including giant amphibians, and paved the way for dinosaurs to take over the Earth. Members of the Portuguese Metoposaurus colony are thought to have died when the lake they inhabited dried up. Only a four square metre fraction of the site has been excavated so far, and work is continuing in the hope of unearthing more fossils. Co-author Dr Richard Butler, from the University of Birmingham, said: 'Most modern amphibians are pretty tiny and harmless. But back in the Triassic these giant predators would have made lakes and rivers pretty scary places to be.'", 'generated_text': "fossilised remains were found during a dig at an ancient lake in southern portugual. metoposaurus algarvensis once took the place of crocodiles as one of the Earth's top predators when they lived more than 200 million years ago. it was the same size as a small car and had hundreds of sharp teeth. creatures were wiped out during a mass extinction 201 million years ago.", 'ref_text': '<START-1>Fossilised remains of a giant newt has been found in a lake in Portugual .\nMetoposaurus algarvensis lived in lakes and rivers 200 million years ago .\nKiller amphibians- a relative to salamanders- were as big as a small car .\nScientists\xa0described the newt as like something from a bad monster movie .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8840100765228271, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,278 [INFO] {'split_name': 'val', 'sample_id': 'val_1505', 'prompt_text': "Summarize: Roy Hodgson would have left Loftus Road with a warm-tingly feeling yesterday. It had nothing to do with the mid-March sunshine, however. It was because of Tottenham striker Harry Kane. This clash was billed as a straight shoot-out between England strike hopefuls Kane and Queens Park Rangers frontman Charlie Austin. Harry Kane celebrates as he takes his tally to 26 in all competitions so far this term . Kane heads past Robert Green to give Tottenham the lead over QPR at Loftus Road . England manager Roy Hodgson was at the game to cast his eye of England's next generation of strkers . Charlie Austin reacts after missing an opportunity during the London derby on Saturday . Games \xa0 \xa0 \xa0 \xa0 \xa0 \xa0Goals . Harry Kane \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 24 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 16 . Charlie Austin\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 25 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 15 . Saido Berahino \xa0 \xa0 \xa0 \xa0 \xa0 \xa028 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 12 . Wayne Rooney \xa0 \xa0 \xa0 \xa0 \xa0 \xa024 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 10 . The Spurs striker won the battle at a canter. That's not a slight on Austin, who also would have impressed Hodgson. But when the England manager names his squad for the games against Lithuania and Italy on Thursday, in Kane he has a striker who has every hallmark of an international footballer. For Austin, the jury is still out. Kane was, essentially, the difference between the two teams at QPR. It wouldn't have come as surprise to Rangers boss Chris Ramsey, who played an influential role in nurturing the striker in the White Hart Lane academy. Spurs striker Kane celebrates as his goals keep Tottenham in the hunt for a top four finish . Rangers star Austin is denied from adding to his impressive goals tally by a save from Hugo Lloris . QPR striker Austin watches as his shot beats Lloris only to crash off the crossbar . 'He has polished himself, I was fortunate to have worked with him,' said Ramsey. 'Would I pick him for England? Yes, I would - but the way I'm going...' Two goals against QPR took his tally for the season to 26. That's a record you simply cannot ignore. Hodgson certainly won't. The only question for the England manager now is if he utilises the striker in the Euro 2016 qualifier against Lithuania or ease him in during the friendly against Italy. His first goal against Rangers showed great bravery, risking a hefty blow to the head to glance home Andros Townsend's free kick. His second showed great composure, skipping round Rob Green before finishing into an empty net. He ticks every box. But his goals only tell part of the story. Kane's heat map (right) in the opposition half showed he posed a greater threat than Austin (left) Twice he showed excellent vision to set up marauding right-back Kyle Walker with goal scoring opportunities, executing both passes with unerring accuracy. Had it not been for Green's heroics in Rangers' goal, Kane could easily have had four by the time Craig Pawson blew the final whistle. After yesterday, Hodgson will be chomping at the bit to get his hands on Kane later this month. Kane doubled Tottenham's lead in the second half after rounding the keeper to slot into an empty net . CLICK HERE for all the stats from the game, including Harry Kane's second goal (below) Austin has the good grace for congratulate Tottenham keeper Lloris for his saves . The England boss, perhaps, won't be as eager to draft Austin into his plans. This was by no means a poor display from the Rangers striker, who himself could easily have had four goals himself yesterday. Likewise, his goal line clearance to deny Christian Eriksen spoke volumes for his desire and work rate. But Kane won this battle of the future England strikers. He won it hands down. Austin's time may come. But the time, for Kane, has arrived. Kane heads back to the centre circle after handing Spurs the lead in Saturday's only Premier League clash . The QPR striker was involved in a bust up with Tottenham defender Kyle Walker .", 'generated_text': 'england striker Harry Kane scores a brace to put Spurs ahead. the 26-year-old takes his tally to 26 in all competitions so far this season. the match was billed as a straight shoot-out between Kane and Charlie Austin at loftus road.', 'ref_text': "<START-1>Tottenham defeated QPR 2-1 in their Premier League clash at Loftus Road .\nHarry Kane opened the scoring with a header for his 15th league goal .\nThe Spurs sensation netted a second to take his season's tally to 26 .\nRangers' Charlie Austin was denied a goal by Hugo Lloris and the crossbar .\nRoy Hodgson was in the stands watching  England's possible future stars .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8535394072532654, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,288 [INFO] {'split_name': 'val', 'sample_id': 'val_12916', 'prompt_text': "Summarize: Australian actress Rachel Griffiths says she was ‘quite elated’ when she heard a heritage-listed Catholic church in Melbourne, where horrific child abuse once took place, had been destroyed by fire. The Six Feet Under star revealed that like many of the church’s former parishioners she found it hard to even ‘drive past’ St James church in Brighton, in Melbourne’s south-east. Firefighters desperately tried to battle a fierce blaze that took hold of the 124-year-old building at around 6.30am on Monday morning but it has been left gutted. Ms Griffiths told 774 ABC Melbourne the church was plagued by ‘tragedy and complicated feelings’ and described it as being known locally as ‘the haunted house on the hill’. ‘We've all attended many funerals of boys that we now know were abused by [Father Ronald] Pickering ... and other perpetrators in the parish - at the actual church that it occurred in,’ she said. 'It's been hard for priests to really cleanse this parish, it's been very difficult to rebuild a community and we pretty much all scattered after the revelations came out and found other parishes.' Ms Griffiths revealed she and other local Catholics had avoided being married in the church because of the sick crimes that historically took place inside it. Scroll down for video . Australian actress Rachel Griffiths is happy that her former Melbourne church has burned down because of its past links to a paedophile priest . Her mother stopped taking her to the church after her father left them because Pickering wouldn't have a 'divorced woman in the church'. 'I think that's probably one thing that saved our family that so many of my friends' brothers got involved with,' she said. Ronald Pickering abused boys between 1960 and 1980 while working as a priest in Melbourne . 'We stopped going because he stopped my mother at the door.' At least five people killed themselves after being sexually abused by paedophile priest Ronald Pickering between 1960 and 1980, according to research carried out in 2012. The former priest was named by the Catholic Church in 2013 as being guilty of sexually abusing children. However, after emigrating to Britain in the 1990s he was never brought to justice before he died. One victim, Raymond D’Brass, told a 2013 Victorian government inquiry that Pickering groomed him with cigarettes, money and alcohol. He was abused between the age of 9 and 13 while acting as a choir and altar boy at the church. In his statement at the parliamentary inquiry on March 4, 2013, Mr D’Brass said: ‘Over this four-year period I am aware that two other boys were also sexually abused by Father Ronald Pickering. ‘I was regularly fondled and petted by Pickering, as were other boys. This occurred within the change rooms of the church and within the presbytery. I began smoking cigarettes and drinking alcohol with Pickering from the age of nine and on many occasions passed out from consuming the alcohol, which left me vulnerable to such abuse.’ 80 firefighters attended the scene to battle the blaze at St James church in Brighton, in Melbourne's south-east . Ms Griffiths revealed she and other local Catholics had avoided being married in the church . Photos taken by eyewitnesses show the roof collapsed and plumes of smoke billowing into the sky . He recalled: ‘I now have several vivid memories of the sexual abuses, as well as some vague flashes due to the state of intoxication. In 1983, I stopped going to the presbytery after Pickering verbally abused me in front of the other boys for choosing not to attend the upcoming Sunday service and instead going to the cricket with my father. ‘He told me that I was not welcome back and that I would burn in hell. Between 1983 and 1987, the two other boys who I know were abused continued to visit the presbytery and receive money, alcohol and cigarettes from Pickering, but I chose not to because I was terrified of him. I have no doubt that they were continuing to be abused by Pickering. ‘One night after one of the boys paid a visit to Pickering, he attempted suicide. He was unsuccessful on this attempt, but he would go on to successfully commit suicide a short time later.’ Many of the church’s former parishioners found it hard to even 'drive past' St James church in Brighton after revelations of child abuse came out . The church is described as a 'a fine complex of Roman Catholic church' on its heritage-listed page . The cause of the fire has not yet been established. ‘MFB will determine the cause of the fire and then if it's suspicious it will be passed on to police,’ a Victoria Police spokesperson said. More than 80 firefighters and 20 trucks were at the scene where the ancient bluestone church was fully alight on Monday morning. A caller to radio show 3AW, named Andrew, said: ‘You can hear that in the background, the roof is actually collapsing now.’ 20 fire trucks were at the scene of the fire at the ancient bluestone church . Residents watching the fire were cleared from the area because of asbestos.\xa0And a 10 metre exclusion zone was put in place around the building over fears of structural collapse. MFB spokesperson David Jarwood told the ABC the smoke could be seen from 50 kilometres away. 'It's about 50 by 40 metres apparently the blaze is, the structure, so I'm not surprised people can see a plume from Mornington,' he said. Smoke from the St James Church fire could be seen across Melbourne, including the West Gate Bridge. An advice notice put out by the MFB said: ‘Emergency services are attending to building fire in North Rd Brighton. The area of North Rd and St James Brighton is currently closed and people are advised to avoid the area.’ Smoke from the St James Church fire can be seen across Melbourne, including the West Gate Bridge . The church was built in 1891 and the Parish of Saint James was established a year later. In 1990 a bell tower and bells were installed at a cost of $500,000. The Victorian Heritage Database website said the church 'stands on a site which has great importance in the early history of Catholicism in Victoria as the place where the mission to Brighton was established circa 1854'. It is described as 'a fine complex of Roman Catholic church, rectory and church close, mostly dating from the last century but with additions made in 1908 and in the 1920s'. It has an 'unusually elaborate 1934 decoration of the chancel with Roman mosaic flooring, opus sectile tiling and marble altars and rails. The pipe organ by Alfred Fuller of Kew, placed centrally in the rear gallery, is a rare example of his work'.", 'generated_text': "seven-times world champion actress reveals she has never been married in the church because of links to paedophile priest. 'these girls were abused from the moment they were babies,' she said. blaze at heritage-listed church in melbourne has sparked the outrage. the building was destroyed by fire at around 6.30am on monday morning.", 'ref_text': '<START-1>Rachel Griffiths and her family used to be members of the church .\nLike many locals they\xa0abandoned\xa0it when they learned of abuse history .\nAt least five people killed themselves after being sexually abused by paedophile priest Ronald Pickering between 1960 and 1980 .\n80 firefighters and 20 trucks were at the scene in south-east Melbourne .\nMFB crews were called to the scene of the blaze at 6.30am on Monday .\nThe\xa0St James Church was built in 1891 and is heritage-listed .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.857824981212616, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,301 [INFO] {'split_name': 'val', 'sample_id': 'val_8133', 'prompt_text': 'Summarize: A leading\xa0paediatrician\xa0has said he would rather his\xa0children used\xa0marijuana\xa0than alcohol,\xa0such\xa0is the\xa0devastation\xa0that drink can\xa0cause. Aaron E. Carroll, professor of paediatrics at Indiana University School of Medicine, said while he would prefer\xa0youngsters to use neither, if forced to make a choice, he would opt for pot. Writing for The New York Times, he said that as his children grow up, he is frequently asked - given his profession - which of the two substances he would prefer them to use. He said: \'The immediate answer, of course, is “neither". And\xa0after sifting through all the studies and all the data, I still say “neither". Usually, I say it more than once. \'But if I’m forced to make a choice, the answer is “marijuana".\' Aaron E. Carroll, professor of pediatrics at Indiana University School of Medicine, said while he would prefer youngsters used neither alcohol or marijuana, if forced to make a choice, he would opt for pot . His decision is based on research into a number of factors - essentially the harm caused by both drugs. But in the course of his debate, he\xa0explains\xa0that while marijuana is easy to demonise because it\'s illegal, the evidence shows that in terms of harm and death, alcohol causes\xa0significantly\xa0more damage. He goes on to argue that while research has linked marijuana to changes in the brain and psychosis, as well as changes in lung function and cancer risk, \'these are all associations, not known causal pathways\'. Instead, he explains, there may be other factors that explain these links - perhaps people with mental health problems are more likely to use the drug, he suggests. However he warns what many of us - especially parents - do is overlook the huge dangers of alcohol. He cites statistics from the\xa0National Council on Alcoholism and Drug Dependence, which state that alcohol use is a factor in 40 per cent of all violent crimes in the United States, including 37 per cent of rapes and 27 per cent of aggravated assaults. What many of us - especially parents - do is overlook the huge dangers of alcohol, he warns . No such association has been found among marijuana users. \'People who are high are not committing violence,\' he explains. He goes on to add that nearly 20 per cent of male delinquents and 10 per cent of female delinquents have an alcohol problem. Meanwhile binge drinking was responsible for around half of the 80,000 alcohol-related deaths in the United States in 2010, whereas cannabis kills virtually no one. He also factors in statistics for drink driving and domestic violence - and once again, alcohol fares worse. As it does in terms of long-term dependency. Professor Carroll states that while nine per cent of pot users eventually become dependent, more than 20 per cent of alcohol users do. From first-hand experience as a paediatrician, he says he has also seen more damage - some almost fatal - \xa0caused by alcohol poisoning. Then there is the link with unprotected sex, drunken fights and accidents - all of which are significantly more likely when alcohol is thrown into the mix. Despite being marginally in favour of marijuana over alcohol, Professor Carroll denies his arguments are \'pro pot\' - nor is he burying the negative effects of the drug. Indeed, he goes on to acknowledge marijuana does have risks and\xa0negative\xa0consequences - and they are \'certainly greater than zero\'.', 'generated_text': 'leading paediatrician says he would rather children used neither. but he says if forced to make a choice, he would opt for pot. he claims there may be other factors that explain the harm caused by the drugs.', 'ref_text': "<START-1>Aaron E. Carroll is professor of paediatrics at Indiana University .\nSays he is often asked if he would prefer his children to use alcohol or pot .\nWhile the answer is\xa0obviously\xa0neither, he says if pushed, he'd opt for pot .\nResearch shows it has a better safety profile than alcohol, he says .\nWarns that many people - especially parents - underestimate risk of booze .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8751867413520813, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,311 [INFO] {'split_name': 'val', 'sample_id': 'val_12360', 'prompt_text': "Summarize: A Household Cavalry lance corporal, who escorted Prince William and Kate Middleton during the Royal wedding, tried to smother his girlfriend after a row about cold toast. Tank commander Daniel Ridge, 31, pinned Johanna Cade, his girlfriend of two years, to their bed and vowed to leave the nurse and part-time model in a pool of blood, a court heard. Ridge, of Combermere Barracks, Windsor,\xa0then squirted shower gel over the 27-year-old's clothes and put a £300 pair of her boots in a pan of boiling water. He was convicted at Wimbledon Magistrates Court of assaulting Miss Cade at her flat in south west London, on October 5, last year, and causing criminal damage to her clothing. Tank commander Daniel Ridge (pictured left) tried to smotherJohanna Cade (right) after a row about toast . Magistrates sentenced him to 12 months' probation, including 100 hours community service work yesterday. He was also ordered to pay Miss Cade £300 in compensation for the assault, £370 for damage, £620 in court costs and an £80 victim surcharge. Ridge, who has served in Bosnia, Iraq and Afghanistan, and his mount Vengeful escorted the newly-wed Duke and Duchess of Cambridge, as well as the Queen, from Westminster Abbey to Buckingham Palace after their wedding on April 29 in 2011. Speaking before the wedding, he had said: 'My mum has set the video and she and my grandparents will be able to follow it all on telly and hopefully recognise me.' But yesterday, the court heard how he threw eggs and glass tumblers at her after becoming angry when she had remarked that the toast he had made was cold. Nurse and part-time model Miss Cade (pictured) said the attack left her feeling 'petrified' and 'vulnerable' Miss Cade told the court:\xa0'I went to the kitchen and he was making breakfast. I said: 'The toast is cold' and his response was: 'Fine, don't have it. I'll make my own, not yours. 'He picked an egg up and threw it at me. I dodged that one and he threw another one at me and I dodged that one. He was quite angry and intense and I was disgusted and frightened. 'He raised a glass tumbler up in the air and threw that at me. I moved and it hit the floor behind me then he raised up a second one and threw it at me and again I moved.' She added that he then smeared avocado on her coat before wrapping her in the duvet, leaving her unable to breathe as he throttled her neck. The defendant told the court that he had playfully 'lobbed' two eggs towards Miss Cade to lighten the mood and she deliberately placed the two glasses on the floor before the police arrived. He added that Miss Cade had attacked him, leaving scratches on his neck as well as a cut and he wrapped her in the duvet to restrict her 'flailing' arms. 'She grabbed me and pulled me around the kitchen a bit and started hitting me on the back of the head in a pawing cat-like motion,' he said. 'I got punched in the face and wanted to stop getting hurt and grabbed the duvet to use as a barrier between me and her.' Ridge, who has served in Bosnia, Iraq and Afghanistan, claimed he playfully 'lobbed' eggs at Miss Cade . Ridge and his mount Vengeful escorted the newly-wed Duke and Duchess of Cambridge from Westminster Abbey to Buckingham Palace after their wedding day (pictured) on April 29 in 2011 . He also claimed that Miss Cade had used one of his trainers to wipe the smashed egg off the floor and told police that in a moment of 'childish retaliation' he decided to damage her clothes. But Miss Cade insisted she was 'petrified' as Ridge launched the attack. 'I was petrified, stunned, frozen and started to cry and he went into my bedroom, got the duvet that was on my bed, and threw it over my head and body,' she said. 'I said: 'Get off, I can't breathe.' He had hold of me by the arms and then I was dragged into the bedroom with the duvet over me and pinned to the bed, with hands I think it was, around my neck. 'I couldn't see anything and at first I was very frightened and tried moving, wriggling out and became quite panicked and I managed to get my arm out. 'I reached up and I think I grabbed his ear. I hit the side of his face and made a scratch. I was frightened, I knew I had to get out from being suffocated and held by the throat.' Miss Cade added: 'I remember feeling the blood drain from my body. I could feel myself shutting off and not being able to breathe at all. I felt very, very dizzy.' Ridge eventually left when she threatened to call the police, and Miss Cade added: 'I was sweating, so, so frightened. I've never felt so vulnerable and fearful for my life.' She later photographed herself, revealing a bruise to her right elbow, a red mark on her left arm, a red mark to her lower back and a red mark to the right side of her chest. And she was forced to throw out much of the stained clothing, including a £70 coat and said added she had a £550 quote to re-decorate her bedroom. The court also heard her recall previous incidents when Ridge had lost his temper, including smashing her phone in a fit of anger. 'He once locked me out of his house in Devon at 3am while in my underwear and in the rain and has repeatedly dumped me on roadsides and driven off,' she said. 'Last August, I was very ill with what turned out to be meningitis and Daniel refused to take me to hospital. I begged him to take me to hospital.' She disagreed with a defence claim that Ridge was a 'gentleman' throughout their relationship and recalled how he had let her down during follow-up treatment. 'He drove off and shouted out the window of his car: 'Get the bus to hospital.' He was sentenced to 12 months' probation and 100 hours of community service at Wimbledon Magistrates' Court (pictured) Ridge told the court: 'It was a childish matter that shouldn't really have happened. My clothes were ruined as well, but I didn't think it was right to press charges. 'At no point did I throw any glasses. I did not use any aggression and I did not raise my hands to her.' His lawyer, Mr. David Allman told the court yesterday: 'He's been a professional member of the armed services since the age of eighteen and he's currently intending to continue that career for at least nine years. 'He is seeking promotion and that would have happened fairly soon had this court case not occurred. His promotion is now on hold. 'I am asking you to take into account the background of his service career, his duty for his country.' Magistrate Fiona Abbott, making an indefinite restraining order prohibiting Ridge from contacting Miss Cade, said he had subjected her to 'gratuitous degradation' and 'mental anguish'. Ms Abbot said: 'It happened in the victim's home and there was gratuitous degradation in the way you spoke to the victim, . 'The compensation is for the bruising and mental anguish caused by this assault.' She added: 'You denied your actions and minimised your part in them and the effect on your victim.'", 'generated_text': "tank commander Daniel Ridge, 31, pinned girlfriend to bed and vowed to leave her in pool of blood, court hears. he squirted shower gel over her clothes and put £300 pair of boots in pan of boiling water. he was convicted at Wimbledon Magistrates court of assaulting miss Cade. miss Cade said attack left her feeling 'petrified' and 'vulnerable'", 'ref_text': "<START-1>Tank commander Daniel Ridge, 31, pinned Johanna Cade, 27, to their bed .\nSquirted shower gel over her clothes and put £300 boots in boiling water .\nWas convincted of assaulting Miss Cade at her flat in south west London .\nMagistrates sentenced him to 12 months' probation, 100 hours of community service and ordered him to pay compensation to Miss Cade .\nRidge escorted newly-wed Duke and Duchess of Cambridge from Westminster Abbey to Buckingham Palace after their wedding in 2011 .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8793862462043762, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,325 [INFO] {'split_name': 'val', 'sample_id': 'val_1725', 'prompt_text': "Summarize: A blunder from Norwich keeper John Ruddy ensured that the Sky Bet Championship promotion clash against Derby at Carrow Road finished in a 1-1 draw. Cameron Jerome's 18th goal of the season gave the Canaries a deserved lead at the break and the hosts were controlling the game when disaster struck in the 66th minute. Ruddy had had little to do all afternoon but when required to catch an in swinging corner from debutant Jamie Hanson he somehow fumbled the ball into his own net to gift the defensive-minded Rams a point. Norwich City's goalkeeper John Ruddy reacts after fumbling the ball to concede an equalising goal . Norwich City players stand dejected as Derby County's players celebrate their fortunate equalising goal . The clash between second-placed Derby and fifth-placed Norwich got off to a cagey start, with Bradley Johnson's off-target shot from long range for the home side the only effort of note in the opening stages. Norwich were very much on the front foot though and Alex Tettey and Jonny Howson also tried their luck from distance with no success against a Derby side who looked as though they had come for a point. On-loan midfielder Graeme Dorrans then had a clear sight of goal, only for a poor first touch to allow Johnny Russell to clear for a corner, before Cameron Jerome steered the ball just wide after being put in by Wes Hoolahan. Norwich City's Cameron Jerome scores his sides first goal of the game at Carrow Road on Saturday . Without their main men up front - Darren Bent and Chris Martin - the Rams barely posed a threat at the other end and it was no surprise when Jerome opened the scoring for the hosts on 31 minutes. A slick one-touch move instigated by Tettey ended with Martin Olsson crossing low for Norwich's top scorer to slot home from close range. Derby's appeals for offside were waved away and Norwich continued to dominate, although Russell's quick dart into the box did provide a rare moment of alarm for the home side. Norwich maintained their grip on the game in the early part of the second period, with Jerome heading over from a corner before Lee Grant's parry from a Steven Whittaker snap-shot prompted a scramble in the visitors' box. Norwich City's Gary Hooper (right) and Derby County's Craig Bryson compete for the ball during the draw . Jamie Hanson and  Wesley Hoolahan compete for the ball as both side look for the winner at Carrow Road . Derby's lack of a specialist front man was painfully obvious although Tom Ince's low shot on the hour mark did draw a save out of Ruddy. But the Norwich keeper then made a horrible mistake to hand the Rams an equaliser they scarcely deserved. Hanson's 66th-minute corner from the right should have been a routine gather for the former England keeper but he took his eye off the ball and somehow fumbled it into the back of the net. City responded well to the shock and it required a brilliant one-handed save from Grant to keep out Sebastien Bassong's header from an in swinging Hoolahan free-kick. Grant then denied substitute Gary Hooper as Norwich looked for a grandstand finish before Jerome wastefully headed a Whittaker cross just over and Johnson then followed suit with his left foot.", 'generated_text': 'keeper fumbles ball into his own net to give Norwich a 1-1 draw against Derby. despite difficult start, the home side dominated in the second half. a poor move by graeme dorrans saw a goal saved by Graeme Dorrans.', 'ref_text': "<START-1>Cameron Jerome's 18th goal of the season gave the Canaries the lead .\nA blunder from Norwich keeper John Ruddy meant they were pegged back .\nIn the end both sides had to settle for a share of the spoils at Carrow Road .\nJust one point\xa0separates\xa0both sides in the\xa0Championship after the draw .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8296633362770081, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,332 [INFO] {'split_name': 'val', 'sample_id': 'val_5100', 'prompt_text': "Summarize: Steve Coppell is sipping afternoon tea in the lounge of a hotel just off the M25 when the conversation turns to football’s ‘f-off mentality’, as he calls it. ‘A lot of young players have an “f-off mentality” these days, but I honestly didn’t mind it because I was the one picking the team,’ he admitted. ‘The dressing room is a heated environment at half-time and full-time, and if a player said that to me and could justify their argument then no problem. If not, they were down the road.’ Steve Coppell has been out of work since leaving his role as director of football  at Portsmouth a year ago . Coppell played as a winger for Manchester United for eight years between 1975 and 1983 . Coppell leads his Crystal Palace side onto the Wembley pitch in the first 1990 FA Cup final against United . Coppell knows all about the sport’s ‘f-off mentality’, on the receiving end after leaving an unpaid role as director of football at Portsmouth last March. It seems incredible that this man, with more than 1,000 games in the dug-out and who has twice been named League Managers’ Association manager of the year (2006 and 2007), is out of work. No-one really knows why. It just doesn’t feel right to see Coppell, a man of integrity and honour, on the fringes of football. Something, somewhere, has gone wrong when Coppell is working on his golf handicap every day. ‘I won the LMA award two years on the bounce with Reading and looking back, yes, massive,’ he admitted. ‘They talk about comedians being on the road for 20 years and suddenly they become an overnight sensation — I had done that time. ‘All John Madejski ever asked of me was to come up to the boardroom after a game and have a pint with him — no interference, nothing. Sometimes we wouldn’t even talk about the result.’ At 59 Coppell is a statesman of the game, one of the shrewdest operators in the sport. After a playing career on the wing with Manchester United he spent nearly 30 years in the dug-out. Coppell issues his side with instructions after drawing 3-3 with United in the final before extra-time . Coppell poses with his Manager of the Month award in 2006 during his spell in charge of Reading . ‘I just wanted to be known as a good manager, I never wanted to be famous,’ he admitted when he was reluctantly coaxed to the Runnymede-on-Thames Hotel. It is clear, after a couple of hours in Coppell’s illuminating company, that he has the itch to work again, but it will only be on his terms. ‘There are 70 clubs you don’t want to manage because you have no chance. ‘Steve Heighway always talks about Bob Paisley at Liverpool: create an environment for your players to win matches. That is the art of management. I can get you promotion within two years if you back me, the Championship is my division, I know what it’s about. If you want a five-year plan, fannying around, building from the bottom up, I’m not your man. I have done that.’ He did it at Palace, taking over at the age of 28 and leading them into the top flight when he put together the team that included Ian Wright, Mark Bright, Geoff Thomas, Andy Gray and John Salako. ‘You could never do that now because the game wouldn’t give you five years to get promoted and because Bosman changed everything in favour of the players,’ he said. ‘Pre-Bosman Ian Wright could have been on £100 a week, his contract could be coming to an end and we could offer him £101 and he would have no choice but to stay. ‘In modern terms, Ian Wright would have disappeared from Palace after a year.’ Coppell celebrates with then Crystal Palace chairman Ron Noades after winning the 1997 play-off final . Coppell, pictured at the Spain 1982 World Cup finals, won 42 international caps for England . To recap, Coppell won two promotions with Palace, took them to their only FA Cup final, won promotion with Reading to the Barclays Premier League and finished eighth in their first season in the top flight. There has been the occasional blip, such as the aborted spells at Manchester City and Bristol City, but after three decades in management, it is no more than a footnote to his career. ‘If I got really busy around football clubs then I could work again but I choose not to be, in the footballing sense,’ he admitted. ‘I don’t go looking for it. I have an agent but he doesn’t go looking for it, either. ‘I still go to games and I enjoy the core things that football gives me, which is working out how people win matches and influence players.’ Coppell is a student of the game, a manager who travelled all over the country to watch players at every level and build up an encyclopaedic knowledge of teams and tactics. He would rather sit in the stands than head for the directors’ box, convinced that speaking to the supporters who watch the players week in, week out will give him a far better education. ‘It is a simple game and the fans aren’t fools, they know what they’re watching. They will give you a far better idea of who is consistent and who is a fanny merchant than listening to anyone in the boardroom or allowing your mind to be affected by another scout or coach.’ Palace players doused Coppell with champagne after winning the Division Two play-off final in 1989 . Coppell admits being a manager consumes every part of your life and he found it difficult to switch off . Coppell's last job in management was with Bristol City in 2010 . Coppell is a fascinating man to listen to as he talks through his management career. ‘Managing clubs is unhealthy because you are time deprived. It is all-consuming, certainly the way I did it. You can be at the cinema and all you can think about is: how can we beat Arsenal on Saturday? It gets you like that. ‘The game has changed. The Premier League is a handicap system, with the big clubs putting 25 or 30 players out on loan — football should be provocative and change it. Have a squad of 25 by all means, chop and change them in January, but you don’t need 70 players. ‘If you know someone at a big club it’s all so sycophantic — “we will guarantee him a game, he will play”. We are prostituting ourselves to get a few scraps from the big boys. ‘Greg Dyke is trying to improve things but the FA are a toothless tiger. The Premier League are 100 per cent successful in what they set out to do, which is to make as much money as possible. When I was a player, if Manchester United played Oldham in Division Two they had to share the gate receipts.’ When you sit down with Coppell, he is a million miles away from the monosyllabic character who would turn up at press conferences when he was in work. The 59-year-old won consecutive LMA Manager of the Year awards in 2006 and 2007 . ‘I look at Bill Belichick, the head coach of the New England Patriots, and he’s won four Super Bowls in 11 years. Watch his press conferences. One-word answers, but he delivers.’ So did Coppell, a popular figure in dressing rooms at his clubs. He knows how to knit together a winning team. This is a man who consciously spent a year out of the game when he left Reading after they failed to beat Burnley in the Championship play-off semi-final in 2009. ‘I used to go to Fulham to watch Roy Hodgson. A lot of people don’t share my opinion of Roy but to work across Europe consistently and mainly be successful — and to act with integrity — and do things the right way, is something I admire.’ Coppell is tempted to move abroad himself, to test himself in another country if England really has turned its back on him. ‘Football owes me nothing but I feel I have something to contribute to the game,’ he said. ‘I don’t expect people to bend over backwards. Ideally I would probably like to work abroad and I am at an age where if it doesn’t happen now it might never happen. Maybe football’s finished with me.’ With so much still to offer? You’ve got to be kidding.", 'generated_text': "winger played for a number of clubs in the premier league from 1975 to 1983. he was director of football at Portsmouth before leaving a year ago. he is a statesman of the game and one of the shrewdest operators in the game. 'I just didn’t mind it because i was the one picking the team,’ he said.", 'ref_text': '<START-1>Steve Coppell has been out of work since leaving Portsmouth last March .\nCoppell was working in unpaid role as director of football on south coast .\nFormer Reading manager was twice named LMA manager of the year .\nCoppell has racked up more than 1,000 games in managerial dugouts .\nCoppell says he can win promotion to the Premier League in two seasons .\nThe 59-year-old admits he would contemplate managing abroad .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8332822918891907, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,348 [INFO] {'split_name': 'val', 'sample_id': 'val_11364', 'prompt_text': "Summarize: The search for the 13-year-old Pennsylvania boy who went missing from his home on Wednesday evening after receiving an email from his school about overdue homework ended on Sunday after his body was found in a creek near his family's home. Cayman Naib left his home in Newtown Square at 6.45pm on Wednesday after getting the email from the\xa0Shipley School in Bryn Mawr and he hasn't been seen since. He was an eighth grader at the school. Scroll down for video . Cayman Naib, 13, hadn't been seen since he left his home in Newtown Square, Pennsylvania, on Wednesday . He left his home 30 minutes after getting an email from the Shipley School in Bryn Mawr about late homework . A police source said a K-9 team found Cayman Naib's body in Darby Creek Sunday at 1.30pm . The boy was discovered around 1.30pm by a K-9 search team in Darby Creek, a police source told\xa0The Inquirer. The body was only a few hundred yards from the 13-acre property where his family's home is located. The\xa0Delaware County district attorney's office could not say if Cayman's body 'exhibited signs of trauma due to snow', \xa0the Delaware County Daily Times reported. The Naibs created the Facebook group 'Find Cayman' to aid the search effort. They updated the page with a message confirming Cayman's death on Sunday afternoon. They wrote: 'It is with a heavy heart that we share news that the family has just learned through the search and rescue team and local law enforcement that Cayman has been found deceased. 'Please understand that the family is still processing and struggling with this most recent news but that they would like to thank all of the thousands of people over the last five days – friends, family, community, law enforcement, local, county, and federal, search and rescue, fire departments, the school communities, especially Shipley and Episcopal Academy, and even perfect strangers – who have come together to support the family to find Cayman.' The family has asked for privacy and will not update the Facebook page while the investigation is ongoing. They have a daughter as well. Police were investigating the matter as a runaway case, according to\xa0FOX 29. Before getting the heartbreaking news, Farid Naib, Cayman's father, called his son 'a great kid'. He said: 'He was upset over a homework assignment and went out into the storm Wednesday night.' The\xa0Facebook group 'Find Cayman was created to aid in the search effort for the missing team . The Shipley School (above) sent Cayman an email about overdue homework 30 minutes before he went missing . When Cayman went missing from his home on Harrison Drive (above) in Newtown Square, he left his wallet . Hundreds of people had been  handing out fliers and canvassing the area while others were spreading the word about Cayman's disappearance online with the hashtag #FINDCAYMAN. Hundreds of people had been handing out fliers and canvassing the area looking for Cayman . According to a post on the Facebook page, the search for Cayman on Saturday  included 15 dog teams with their handlers, a group of more than 250 volunteers and the\xa0Berwyn Fire Department. On Sunday morning, Becky and Farid Naib wrote: 'The search continues today. 'We have been overwhelmed by our friend's and our community's support. 'Close family friends have taken on enormous responsibility in helping us cope with our grief and worry and the needs of interacting with the various groups assisting us. 'Friends from thousand s of miles away have flown into help with search. 'We are stunned by the depth of assistance we are being provided. 'Law enforcement from our local police to the federal level are doing everything they can to help. 'All we need now is a happy ending, . 'Cayman please come home. We love you.' The civil air patrol was also deployed as part of the search effort on Sunday. A search on Saturday included 15 dog teams with their handlers and a group of more than 250 volunteers .", 'generated_text': "Cayman Naib, 13, left his home in newtown square, PA, on Wednesday evening. he was only an eighth grader at the school in bryn mawr, but he was an eighth grader. he was an e-mail from his school that said he had homework to do. his body was found in a creek near the family's home on sunday. authorities are investigating it as a", 'ref_text': "<START-1>Cayman Naib had been missing since 6:45pm on Wednesday, March 4 .\nPolice source says K-9 team found him in Darby Creek Sunday at 1.30pm .\nHe was in eighth grade at the Shipley School in Bryn Mawr, Pennslyvania .\nLeft house in Newtown Square after getting email about overdue homework .\nFacebook group 'Find Cayman' was created to aid the search effort .\nCommunity members and local and federal officers were looking for boy .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8541625738143921, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,358 [INFO] {'split_name': 'val', 'sample_id': 'val_6277', 'prompt_text': "Summarize: A local fisherman believes that trophy killings by tourists were behind the horrific mutilation and death of two large saltwater crocodiles at Dundee Beach in the Northern Territory on Wednesday. The NT Times reported that Darwin man Jake Hinton, 27, found the dead crocodiles while driving with his parents to go on a family fishing trip. Hinton's father found the first one on the ground in the run off from a little creek. It was missing a head and half-skinned, but did not appear to have any bullet holes. One crocodile had been there for a while. It was bloated and rotting . TOne of the crocodiles was missing a head and half-skinned on the ground . The second crocodile was found by Hinton about 200m from the mouth of the Finniss River. 'I could smell this one before we saw it, it had been there for a while and was bloated,' he told the NT Times. 'This one had nothing removed from it and there was an obvious bullet wound in its skull, which is probably why they didn’t take it. The second crocodile was found about 200m from the mouth of the Finniss River . 'I think it’s just senseless joy killing by idiot tourists looking for a trophy.' A spokeswoman for the Parks and Wildlife Commission said the department was investigating the incidents. The authority had 10 reports of crocodiles being slaughtered illegally in the NT over the past year. The headless crocodile was found in the run off from a little creek .", 'generated_text': 'two large saltwater crocodiles were killed in the northern territory on Wednesday. one crocodile was missing a head and half-skinned on the ground. the second crocodile was found about 200m from the mouth of the Finniss river. the parks and wildlife commission is investigating the deaths.', 'ref_text': '<START-1>Darwin man Jake Hinton, 27, found the dead crocodiles while out driving .\nOne crocodile was missing a head and half-skinned .\nThe other was bloated and about 200m from the mouth of the Finniss River .\nParks and Wildlife Commission was investigating the incidents .\n10 crocodiles were slaughtered illegally in the NT over the past year .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.9094972014427185, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,365 [INFO] {'split_name': 'val', 'sample_id': 'val_9130', 'prompt_text': "Summarize: An attack of the giggles can sometimes appear at the strangest moments. Whether it's during a speech or in a meeting, helpless laughter is one of our most insightful behaviours, according to neuroscientist Sophie Scott. In a recent Ted Talk in Vancouver, Professor Scott revealed that laughter often isn't to do with comedy value, but with our relationships with others. Laughter is often used as a tool for social bonding rather than in reaction to something that has comedy value, according to UCL Professor Sophie Scott. \xa0Pictured are\xa0Prime Minister David Cameron and US President Barack Obama during a basketball game . According to David Robson at BBC Future, Scott's study of people in Nambia revealed that laughter is a key cultural mechanism that helps social bonding. When Scott asked indigenous Namibians and English people to listen to recordings of each other and describe the emotions, laughter was the most recognisable. 'People genuinely think they are mostly laughing at other people's jokes, but within a conversation, the person who laughs most at any one time is the person who is talking,' she told the BBC. The University College London professor's current research aims to distinguish the difference between fake laughs used during conversation, and involuntary giggles. She has carried out brain scans on volunteers listening to expressions of disgust, a real belly laugh and a realistic fake one. Laughter activates the brain's mirror regions that mimic other's actions, and she says this is the reason behind why laughing can be so contagious . So far, her research has found that volunteers were almost always able to identify a false laugh. She has also discovered that less authentic tones are more nasal, and belly laughs never come through the nose. Researchers from Indiana State University found that with laughter can boost the immune system by up to 40 per cent. The study tested 33 healthy women. Half of the women watched a comedy video together while the others watched a dull video on tourism. When the films were over, scientists took samples of the women's immune cells, known as natural killer cells, and mixed them with cancer cells to see how effectively they attacked the disease. They found that the women who had found the comedy funny enough to laugh out loud had significantly healthier immune systems afterwards than those who had watched the tourism film. Meanwhile, MRI scans revealed how hearing real and fake laughter activates two different areas of our brains. Fake laughter triggers more brain activity – in the medial prefrontal cortex, associated with problem-solving – as we try to work out why the person is doing it. Genuine laughter simply activates auditory areas in the temporal lobe – where we process all sound. But both activate the brain's mirror regions that mimic other's actions, and she says this is the reason behind why laughing can be so contagious. 'You are 30 times more likely to laugh if you're with someone else,' she claims. To further her work, Scott has recently set up an experiment at London's Science Museum, where she will be asking visitors to judge the authenticity of different clips of people laughing. And she believes far more research needs to be done on this cultural tic. 'If you search on the Web of Science database for papers on the emotion of fear, you'll get back 6,477 published papers,' Professor Scott writes on Ted. 'Search for papers on laughter and you'll get a paltry 175. Why the disparity? Well, one reason might be that laughter, like other positive emotions, feels less important than negative emotions. 'Sometimes people think that laughter is a ridiculous, trite, pointless topic to research…I think it's a fascinating social behaviour, it is essential to study.' In a separate study last year,\xa0psychologist Dr Carolyn McGettigan from the Royal Holloway University of London measured brain responses of volunteers as they listened to genuine laughter on YouTube clips. Each participant was asked to pick clips they found funny. This ranged from comedy shows, such as Flight Of The Conchords, and even the Eurovision Song Contest. The results were then compared to how their brains responded to fake laughter. The findings revealed participants, none of which were told the study was about laughter perception, could unconsciously tell when the chuckles were insincere. Dr McGettigan said: 'It's fascinating to consider the way our brain is able to detect genuine happiness in other people. 'Our brains are very sensitive to the social and emotional significance of laughter.", 'generated_text': "a shock. and involuntary giggles can appear at the strangest moments. Laughter is often used as a tool for social bonding rather than in response to something that has comedy value, according to professor Sophie Scott. Laughter activates the brain's mirror regions that mimic other's actions. the study tested 33 women, half of whom watched a comedy video together while the others watched a dull tourism video ", 'ref_text': "<START-1>Professor Sophie Scott says laughter often isn't to do with comedy value .\nIn a conversation, the person who laughs most is usually the one talking .\nPeople are 30 times more likely to laugh if they are with someone else .\nIt also triggers brain's mirror region which explains why it is contagious .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8603119850158691, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:05:20,386 [INFO] val metrics: {'epoch': 0, 'metrics': {'lexical/meteor': 0.25588681930640605, 'lexical/rouge_rouge1': 0.37736283915526714, 'lexical/rouge_rouge2': 0.1493685553814462, 'lexical/rouge_rougeL': 0.2515745555448843, 'lexical/rouge_rougeLsum': 0.3169665935376683, 'lexical/bleu': 0.07858976212229495, 'semantic/bert_score': 0.8642352016242516, 'diversity_metrics/msttr-100': 0.72488, 'diversity_metrics/msttr-100_nopunct': 0.76347, 'diversity_metrics/total_length': 739100, 'diversity_metrics/mean_pred_length': 55.28874925194494, 'diversity_metrics/std_pred_length': 13.17752535334397, 'diversity_metrics/median_pred_length': 54.0, 'diversity_metrics/min_pred_length': 1, 'diversity_metrics/max_pred_length': 92, 'diversity_metrics/distinct-1': 0.055913949397916385, 'diversity_metrics/vocab_size-1': 41326, 'diversity_metrics/unique-1': 20234, 'diversity_metrics/entropy-1': 10.285442698338525, 'diversity_metrics/distinct-2': 0.3980422525119466, 'diversity_metrics/vocab_size-2': 288872, 'diversity_metrics/unique-2': 215021, 'diversity_metrics/entropy-2': 16.258739078659524, 'diversity_metrics/cond_entropy-2': 5.8826092612851175, 'diversity_metrics/distinct-3': 0.7600457630568599, 'diversity_metrics/vocab_size-3': 541430, 'diversity_metrics/unique-3': 480552, 'diversity_metrics/entropy-3': 18.582267517425674, 'diversity_metrics/cond_entropy-3': 2.3175610814433223, 'diversity_metrics/total_length-nopunct': 665722, 'diversity_metrics/mean_pred_length-nopunct': 49.799670855774984, 'diversity_metrics/std_pred_length-nopunct': 11.991636069309875, 'diversity_metrics/median_pred_length-nopunct': 48.0, 'diversity_metrics/min_pred_length-nopunct': 1, 'diversity_metrics/max_pred_length-nopunct': 86, 'diversity_metrics/distinct-1-nopunct': 0.062048422614845236, 'diversity_metrics/vocab_size-1-nopunct': 41307, 'diversity_metrics/unique-1-nopunct': 20234, 'diversity_metrics/entropy-1-nopunct': 10.713888039881619, 'diversity_metrics/distinct-2-nopunct': 0.45356508889345354, 'diversity_metrics/vocab_size-2-nopunct': 295885, 'diversity_metrics/unique-2-nopunct': 228418, 'diversity_metrics/entropy-2-nopunct': 16.57633668669945, 'diversity_metrics/cond_entropy-2-nopunct': 5.912253450870308, 'diversity_metrics/distinct-3-nopunct': 0.8092152109510835, 'diversity_metrics/vocab_size-3-nopunct': 517078, 'diversity_metrics/unique-3-nopunct': 468381, 'diversity_metrics/entropy-3-nopunct': 18.658956173788784, 'diversity_metrics/cond_entropy-3-nopunct': 2.0917720792908248}}
2023-01-03 14:05:20,440 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:23,621 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:23,710 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:26,923 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:27,008 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:30,202 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:30,290 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:33,452 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:33,548 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:36,740 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:36,834 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:40,047 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:40,147 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:43,323 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:43,418 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:46,627 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:46,723 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:49,842 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:49,937 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:53,141 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:53,233 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:56,354 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:56,441 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:05:59,621 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:05:59,707 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:02,997 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:03,089 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:06,269 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:06,359 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:09,573 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:09,662 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:12,869 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:12,955 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:16,135 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:16,224 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:19,431 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:19,518 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:22,728 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:22,815 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:26,002 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:26,091 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:29,303 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:29,393 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:32,598 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:32,685 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:35,877 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:35,962 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:39,219 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:39,309 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:42,503 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:42,601 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:45,807 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:45,902 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:49,102 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:49,188 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:52,387 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:52,473 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:55,672 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:55,758 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:06:58,973 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:06:59,064 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:02,282 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:02,369 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:05,581 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:05,671 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:08,863 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:08,950 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:12,150 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:12,238 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:15,457 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:15,554 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:18,812 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:18,904 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:22,121 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:22,208 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:25,429 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:25,515 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:28,744 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:28,831 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:32,029 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:32,117 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:35,302 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:35,394 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:38,612 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:38,702 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:41,909 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:42,002 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:45,199 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:45,295 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:48,502 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:48,596 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:51,799 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:51,890 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:55,117 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:55,252 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:07:58,447 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:07:58,541 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:01,766 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:01,864 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:05,069 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:05,165 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:08,375 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:08,471 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:11,659 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:11,757 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:14,953 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:15,062 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:18,284 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:18,380 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:21,586 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:21,680 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:24,897 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:24,993 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:28,202 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:28,297 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:31,548 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:31,645 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:34,863 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:34,961 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:38,170 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:38,268 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:41,457 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:41,554 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:44,746 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:44,841 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:48,063 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:48,160 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:51,371 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:51,479 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:54,704 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:54,803 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:08:57,995 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:08:58,091 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:01,264 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:01,362 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:04,573 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:04,674 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:07,878 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:08,011 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:11,228 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:11,321 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:14,527 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:14,626 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:17,808 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:17,909 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:21,110 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:21,209 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:24,407 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:24,505 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:27,726 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:27,832 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:31,037 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:31,138 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:34,334 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:34,433 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:37,635 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:37,736 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:40,925 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:41,022 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:44,291 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:44,387 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:47,564 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:47,660 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:50,870 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:50,967 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:54,178 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:54,277 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:09:57,459 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:09:57,554 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:00,763 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:00,863 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:04,064 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:04,165 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:07,368 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:07,466 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:10,685 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:10,782 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:13,957 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:14,062 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:17,261 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:17,362 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:20,588 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:20,687 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:23,887 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:23,989 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:27,201 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:27,300 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:30,479 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:30,577 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:33,787 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:33,883 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:37,068 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:37,165 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:40,347 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:40,441 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:43,639 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:43,736 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:46,935 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:47,032 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:50,221 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:50,320 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:53,541 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:53,642 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:10:56,816 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:10:56,918 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:00,113 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:00,211 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:03,437 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:03,537 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:06,733 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:06,842 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:10,063 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:10,168 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:13,353 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:13,453 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:16,653 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:16,750 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:19,950 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:20,048 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:23,242 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:23,338 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:26,560 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:26,656 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:29,836 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:29,935 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:33,131 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:33,230 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([100, 512])
	- attention_mask.shape                  = torch.Size([100, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:36,455 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:11:36,550 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([90, 512])
	- attention_mask.shape                  = torch.Size([90, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:11:39,268 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:14:56,269 [INFO] Split test predictions
2023-01-03 14:14:56,272 [INFO] {'split_name': 'test', 'sample_id': 'test_1470', 'prompt_text': "Summarize: A teenager from Illinois is tackling her disability head-on and attempting to positively influence thousands of others by dancing. Dayna Dobias, 19, from Downers Grove was born with cerebral palsy, but she hopes to inspire others with her enthusiastic videos. 'I've gotten bullied because of it and I get people all the time, staring and so it's definitely made things difficult in my life,' Dayna told Daily Mail Online. Scroll down for video . Challenging: Dayna Dobias, 18, is hoping change the way people with disabilities are represented by the television, film and the fashion industry . Her hope is that the video not only entertains, but inspires others to think before judging. The teenager says her motivation for creating the video was to counteract stereotypes held by people over certain disabilities. 'People tend to think that because I have cerebral palsy I cannot do anything and that I am so different from everyone else, when in reality I am pretty much just the same as everyone else,' she added. 'I might do things a little bit differently than most people, but that doesn't mean that I should be treated differently.' This is one of several videos that Dayna has created. Last year the teenager produced another dancing clip with her strutting her stuff to Taylor Swift's Shake It Off. Inspirational: The Illinois teen who suffers from cerebal palsy has created a video in which she dances . Don't judge: People tend to think that because I have cerebral palsy I cannot do anything and that I am so different from everyone else, when in reality I am pretty much just the same as everyone else,' Dayna says . 'People like to define me based on disability. People just look at me and think, oh that's just the girl with cerebral palsy,' she said. 'I would like people to look past that and be like, oh she's just one of us.' Dayna says she wanted to turn any negativity that might be held over her disability into something positive and hopefully inspire others, or at the very least raise a smile. 'When I was first diagnosed with cerebral palsy, doctors warned my parents that I may never walk, but here I am dancing! I drive, I go to college, I do things like every other 19-year-old,' she says. The teen has now begun to do some motivational speaking at a couple of local schools. Confident: Dayna has now taken up motivational speaking and has visited several schools in the Chicago area .", 'generated_text': 'dayna Dobias, 19, is hoping to change the way people with disabilities are represented by the television, film and fashion industry. the teen from downers grove was born with cerebral palsy and says she has been bullied for it. she hopes to inspire others through her videos.', 'ref_text': '<START-1>Dayna Dobias, 19, has created a video in which she dances despite having a\xa0disability\xa0that makes it difficult for her to walk .\nShe loves TV, film and fashion, and says she’s not happy with how people with disabilities are represented .\nThe teen has created several videos during the past year aimed at changing stereotypes .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8930847644805908, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,281 [INFO] {'split_name': 'test', 'sample_id': 'test_7160', 'prompt_text': "Summarize: A father faces felony charges for bring home an injured eight-inch alligator for his son to nurse back to health. After finding the alligator being attacked by a bird, Kevin Gill, from Naples, Florida, told WBBH that he thought his 13-year-old son could care for the reptile while learning about gators. But when Collier County deputies were serving a search warrant on the family's home for an unrelated issue, they came across the baby gator - and told Gill it was illegal. Scroll down for video . Arrest: Kevin Gill, pictured in a mug shot, left, was arrested after deputies found he had a small alligator inside his Florida home. He had found the injured gator and given it to his son, right, to nurse back to health . 'I had no clue,' Gill, 45, told WBBH. 'It wasn't like I was out collecting alligators. I was trying to save an alligator and nurse it back to health and we were going to take it over to the conservancy... 'I didn't think it was a big deal since there's millions of them and they took them off the endangered species list.' But after the deputies found the gator, which the family kept in a tank, they took Gill to jail. The case is being handled by Florida's Fish and Wildlife Commission. It is a felony in Florida to keep an alligator without a license, regardless of its size. Illegal: To keep an alligator of any size in Florida, you need to apply for a license\xa0(stock picture) Home: The alligator was kept in this tank in the family's Naples home after they found it outside . Stunned: Gill said he never knew keeping an alligator - especially such a small one - was illegal . Anyone who wants to own an alligator must 'demonstrate 1 year and 1,000 hours of substantial practical experience in the handling, husbandry and care of alligators or other crocodilian species' before applying for a license, according to the Wildlife Commission. Gill said he was shocked to discover the laws. 'Everybody that I've talked to was amazed I was arrested for something like that,' he said. See below for video .", 'generated_text': "the gator had been attacked by a bird while being kept in the family's Naples, florida, home. father, 45-year-old Kevin Gill, had found it outside and gave it to his son, 13, to nurse back to health. but he never realized it was illegal - and a search warrant was served on the family when police arrived and found the gator outside. it is a felony in florida to keep an", 'ref_text': "<START-1>Kevin Gill, 45, found an injured gator and took it to his home in Naples, Florida for his son to nurse back to health .\nBut when officers were serving a search warrant on the family's home for an unrelated issue, they found the gator and arrested Gill .\nAnyone who wants to own an alligator in Florida must complete 1,000 hours of training - regardless of the reptile's size .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8912847638130188, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,287 [INFO] {'split_name': 'test', 'sample_id': 'test_8943', 'prompt_text': "Summarize: Matthew Kenney smoked Flakka and then ran naked . A Florida man who was high on a designer drug called Flakka stripped and ran naked through traffic in\xa0Fort Lauderdale to escape from imaginary killers who he believed stole his clothes and wanted to murder him. Matthew Kenney, 34, told police he smoked Flakka before he streaked though traffic early on Saturday evening while only wearing a pair of sneakers. Flakka, which can be injected, snorted, smoked, swallowed or taken with other substances, has been nicknamed '$5 insanity' for its mind-bending effects and cheap cost. After he was arrested, Kenney told police he would 'rather die than be caught by these unknown people', the Sun Sentinel reported. He added that 'if I got hit by a car they would stop chasing me'\xa0according to a Fort Lauderdale Police reported. Kenney has previous arrests for disorderly conduct, making a riot and possession of a controlled substance. He was hospitalized for a psychiatric evaluation. Flakka is usually made from the chemical alpha-PVP, a synthetic version of the stimulant cathinone. That is the same type of chemical that is used to make bath salts. Scroll down for video . Kenney, 34, ran though traffic early on Saturday evening while only wearing sneakers in Fort Lauderdale, Florida . The suspect said he was escaping imaginary killers who he believed stole his clothes and wanted to murder him . The use of flakka \xa0a designer drug that can be even stronger than crystal meth or bath salts, is up in Florida . Flakka resembles a mix of crack cocaine and meth and it has a a strong odor 'like a sweaty sock',\xa0WPBF 25 News\xa0reported. Once ingested, the drug causes a feeling of euphoria, hallucinations and sometimes psychosis or even superhuman strength. The high lasts for a couple hours and users are left with a strong desire to use again. There were more than 670 Flakka occurrences in Florida in 2014, up from\xa085 in 2012 and zero in 2010, according to the Drug Enforcement Administration.", 'generated_text': 'the suspect, 34, told police he smoked flakka before he streaked through traffic early on Saturday evening while only wearing sneakers. he said he was escaping imaginary killers who he believed stole his clothes and wanted to murder him. the high lasts for a couple of hours and the user is left with a strong desire to use again.', 'ref_text': '<START-1>Matthew Kenney, 34, said he smoked Flakka before he went streaking .\nWas arrested on Saturday after run through\xa0Fort Lauderdale, Florida .\nDrug is made from same version of stimulant used to produce bath salts .\nIt causes  euphoria, hallucinations, psychosis and superhuman strength .\nKenney has prior arrests and was hospitalized for a psychiatric evaluation .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8554158806800842, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,294 [INFO] {'split_name': 'test', 'sample_id': 'test_11024', 'prompt_text': "Summarize: The owners of two dogs that got loose and mauled a jogger to death in Michigan pleaded no contest on Friday to a reduced charge. Sebastiano Quagliata and his wife, Valbona Lucaj, pleaded no contest to owning a dangerous dog causing death in the fatal mauling last summer of Craig Sytsma of Livonia, The Flint Journal reported. 'I'm so sorry,' Lucaj told Sytsma's family. Sytsma, 46, was attacked by two cane corsos last July in Metamora Township, 45 miles northwest of Detroit. Sebastiano Quagliata (pictured) and his wife, Valbona Lucaj, pleaded no contest to owning a dangerous dog causing death in the fatal mauling of Craig Sytsma of Livonia, Michigan, and agreed to 15 years in jail . Lucaj (left), a native of Albania, and Quagliata, of Italy, could be deported after serving their sentences . Sytsma, 46, was attacked by two cane corsos last July in Metamora Township, 45 miles northwest of Detroit . The father-of-three was bitten some eight times by two hundred-pound cane corsos while jogging in Metamora Township in July, and was 'screaming and begging' for help in his final minutes. Lapeer County Prosecutor Tim Turkelson predicts a sentence of at least 19 months in prison when the two return to court on June 8. The two have been in custody for months and were facing a second-degree murder charge before making the plea deal. Lucaj, a native of Albania, and Quagliata, a native of Italy, could be deported after serving their sentences. They had 'no intention to do anything to hurt anyone,' defense attorney Jason Malkiewicz said. 'I think today was the first day my clients got to sit over there and accept responsibly for actions,' he said. 'I think the death of Mr Sytsma has sat in their heads for a year and it's been a nightmare to my clients, as well as everyone involved.' Attorney Glenn Saltsman said the Sytsma family is satisfied with the plea deal, although he believes laws covering dangerous dogs are 'archaic and weak'. There was evidence that the dogs had attacked other people on the road. 'These dogs should've never been alive after the first attack,' Saltsman said. The father-of-three was bitten some eight times by two hundred-pound cane corsos while jogging in July . Attorney Glenn Saltsman said the Sytsma family is satisfied with the plea deal. The sentencing will be in June . During the attack, one neighbor, a medic, used a belt as a tourniquet to stop Sytsma's bleeding. Helen Barwig had to pause the rescue efforts momentarily while the massive dogs came back. 'I'm bleeding out,' a desperate Sytsma told his rescuer, according to the Detroit Free Press. 'I'm dying.' He 'was losing a lot of blood and begged her to not let him die,' police wrote about incident. It took another neighbor, Barwig's boyfriend Edward Elmer, firing his .44-caliber Magnum at the dogs to end the attack. He struck one of the animals in the leg. Sytsma only had time to tell Barwig that his name was Craig before losing consciousness. He was rushed to a local hospital but soon died of his injuries. His dramatic final moments were revealed in response to a request by the Free Press under Michigan's Freedom of Information Act. The attack was the third since 2012 involving canines from Lucaj and Quagliata's property, officials said . The police records show the two dogs had run loose for months in the small rural community, attacking at least two neighbors months before they killed Sytsma. Some neighbors began to arm themselves, including the man whose shots eventually scared the cane corsos as Sytsma laid dying. The attack was the third since 2012 involving canines from Lucaj and Quagliata's property, officials said. 'Animal control should have done something,' said April Smith, who was bitten in May 2012 while walking her two dogs. Cane corsos are Italian dogs that are 'not to be trifled with', according to the American Kennel Club. The AKC report about the breed said: 'Topping out at nearly 28 inches at the shoulder and often weighing more than 100 pounds, with a large head, alert expression, and muscular frame, Cane Corsi are at a glance intimidating creatures.' 'Bred as guard dogs for centuries, their imposing appearance is their first line of defense against intruders.'", 'generated_text': "sergio qagliata and his wife, Valbona lucaj, pleaded no contest to owning a dangerous dog causing death in the fatal mauling of Craig sytsma. 'i'm so sorry,' Lucaj told his jogger's family. father-of-three was attacked by two cane corsos last summer. a judge predicts ", 'ref_text': "<START-1>Father-of-three Craig Sytsma was mauled to death in Michigan last year .\nDog owners Sebastiano Quagliata and wife Valbona Lucaj agreed to plea deal Friday to around 15 years in jail, though judge could add six months .\nSytsma was jogging in July 2014 when the two cane corsos attacked him .\nHe was bitten almost ten times and was 'screaming and begging' for help .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8759183883666992, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,303 [INFO] {'split_name': 'test', 'sample_id': 'test_8570', 'prompt_text': "Summarize: Two kayakers died, and another  remains hospitalized in serious condition, after a sudden Seattle storm with 35mph winds overturned their boats during a church-organized trip. Mandi L. Walkley, 39, and Jacob M. Austin, 52, were in the Dungeness Bay, where swells were as high as 3ft, for one to two hours before they could be rescued by the Coast Guard. Both passed away after they were transported to nearby hospitals. William D. Kelley, 50, who was also rescued by the Coast Guard, has improved from critical to serious condition. His pastor, Bill Bowers, said Kelley is 'not able to speak at the moment'. Mandi L. Walkley, 39, (left) and Jacob M. Austin, 52, (right) died after a sudden storm in Washington's Dungeness Bay hit their church kayaking trip . 'He's got a tube down his throat,' Bowers, who is with the Mountain View Church in Tumwater, told the Seattle Times. \xa0'But I've talked with his wife, and they're hopeful. He's squeezing their hands and blinking at them.' Fellow kayaker William D. Kelley, 50, remains hospitalized. His condition has improved from critical to serious . Walkley, Austin and Kelley were part of a group of seven people who set out on Saturday for an excursion along Washington's Dungeness Spit. According to Sgt. Lyman Moores of Clallam County Sheriff's Office, forecasts had predicted there would be stormy weather the day of the scheduled trip a week ago and that an advisory had been issued a day before. 'No one should've been out there in a kayak,' he said on Sunday. But, according to fellow kayaker Dennis Caines, the terrible weather 'came up all of a sudden' and took the group by surprise. 'We weren't ready for it,' he said. And a video the friends took during the trip shows that the weather was calm as they paddled to the New Dungeness Lighthouse for a lunch break, according to King 5\xa0News. Caines and the group left the lighthouse around 1.30pm. He told King 5 that within 10 minutes of the wind picking up, he and his wife Linda 'couldn't see anybody or another kayaker anywhere'. The couple, who were riding in a tandem kayak, and two other people with the group paddled safely back to shore. Walkley, Austin and Kelley were stranded in the water for one to two hours before they were rescused by the Coast Guard. They had been part of a group of seven that were kayaking along the Dungeness Spit (pictured) Dennis Caines, who was also on the trip, said the weather was calm as the group stopped at the\xa0New Dungeness Lighthouse (pictured) for lunch. But minutes after they got back in the water, the wind picked up . At around 2.30pm, Walkley, Austin and Kelley were spotted by a lighthouse attendant, who notified the Coast Guard. The Navy also provided a rescue chopper. Caines said that everyone in the group wore life jackets, and that both he and his wife were also wearing wetsuits. According to Moores, the lifejackets weren't enough to protect the kayakers from the Bay's cold water, which was measured at 49 degrees on the day of the accident. Moores said that kind of temperature could shut down the human body 'in a matter of minutes'. 'These people weren't prepared for the conditions,' he told the Seattle Times. 'They were just wearing cotton clothes.' But, according to Caines, the kayaks the group used were also well-outfitted. At 17-feet long, they had rudders, which help keep the boat straight during waves and winds, as well as rain skirts and pumps designed to keep water out. Pastor Bowers told the Seattle Times he was unaware if the trip's organizers had known about the storm forecast, but said 'no one on that trip would have done anything if they thought it would put them into danger'. Caines and his wife Linda, who were riding with the group in a tandem kayak, said that within 10 minutes of the wind picking up they couldn't see anyone else in their group . And Walkley's mother Janeen said her daughter 'always took precautions', even leaving her own kayaks at home to use the larger kayak designed for the sea. 'Knowing Mandi, if she knew the weather was going to be that nasty, I don't think she would've gone,' Janeen said. According to Caines, the group had known and liked Walkley and Austin, neither of whom were part of the Mountain View Church - which organized the trip for both members and nonmembers. 'We lost two good friends and one is struggling,' Caines, who called Walkey 'such a beautiful person', told King 5 News. 'It just feels unreal,' said Linda Caines. 'People we were friends with, that were there, and then they weren't.'", 'generated_text': "mandi L. Walkley, 39, and Jacob M. Austin, 52, died. they were in the Dungeness Bay, where swells were as high as 3ft, for one to two hours before they could be rescued. fellow kayaker William D. Kelley, 50, remains hospitalized. 'he's squeezing their hands and blinking at them,' said his pastor. a video recorded", 'ref_text': "<START-1>Mandi L. Walkley, 39, and Jacob M. Austin, 52, had been in the Dungeness Bay for one to two hours before the Coast Guard could rescue them .\nThey both passed away from their injuries after being hospitalized .\nWilliam D. Kelley, 50, was also rescued by the Coast Guard and has improved from critical to serious condition .\nWeather was predicted to be stormy on Saturday and an advisory had been issued on Friday, according to the sheriff's office .\nBut friend Dennis Caines, who was kayaking with the group, said the weather had been calm earlier that day .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8927835822105408, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,312 [INFO] {'split_name': 'test', 'sample_id': 'test_9878', 'prompt_text': "Summarize: Upmarket Bentleys and Porsches are more likely to break down than much cheaper cars, according to a survey. The two marques finished bottom of a 38-strong table of vehicle manufacturers judged on reliability. Scroll down for video . Reliability:\xa0Bentleys and Porsches are more likely to break down than cheaper cars according to a survey . The list price of Bentleys ranges from £136,250 to £224,700, yet the manufacturer and Porsche\xa0finished bottom of a 38-strong table judged on reliability . Thousands of cars aged three to eight years old were assessed on their failure rate, age, mileage and cost of repairs. The most reliable was Honda, with Suzuki second and Toyota in third place while Chevrolet and Mazda were joint fourth. Overall, the most reliable models were the Honda Jazz and Mitsubishi Lancer while the least reliable was the Audi RS6,\xa0which was also the most costly to fix, with an average repair bill of £1,003. Electrical faults were the most common across all cars, accounting for almost a quarter of visits to garages. Axle and suspension faults were also common, affecting 22% of cars. What Car? magazine compiled the table with the Warranty Direct website. What Car? editor Jim Holder said: 'Honda's success in the reliability index is chiefly down to low failure rates. But, when things do go wrong, the cars are also relatively cheap to fix. 'Reliability is always one of the key attributes buyers look for when considering a used car purchase, so manufacturers that consistently demonstrate durability will always do well with the consumer.' The list price of Bentleys ranges from £136,250 to £224,700.", 'generated_text': 'list price of Bentleys ranges from £136,250 to £224,700. but the manufacturer and Porsche finished bottom of a 38-strong table. Thousands of cars aged three to eight years old were assessed on failure rate. electrical faults were the most common across all cars.', 'ref_text': '<START-1>Bentleys and Porsches finished bottom of reliability table of manufacturers .\nCars were assessed on their failure rate, age, mileage and cost of repairs .\nMost reliable was Honda, with Suzuki second and Toyota in third place .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8661507368087769, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,319 [INFO] {'split_name': 'test', 'sample_id': 'test_2615', 'prompt_text': "Summarize: Chelsea are in early discussions over a possible partnership with Belgian club Royal Mouscron-Peruwelz. Mouscron, in Belgium's Pro League, had a partnership with Lille but the French side are now poised to link up with another Belgian club, Ostend, leaving room for a new deal and Chelsea are the preferred option. The Belgian club have been in the top flight for a season since winning promotion via the play-offs last summer. They are 13th in the table, two points above the relegation places. Chelsea are in early discussions over a possible partnership with Belgian club Royal Mouscron-Peruwelz . Mouscron had a partnership with Lille but that is now set to end meaning there is to be room for Chelsea . Mouscron are currently 13th in Belgium's Pro League, with players including\xa0Tristan Dingome (left) Chelsea already have an agreement with Vitesse Arnhem in Holland and have been looking at other link-ups across Europe to help develop their squad. Vitesse currently have Chelsea's Josh McEachran, Bertrand Traore and Wallace on their books as they look to seek Europa League qualification from the Dutch\xa0Eredivisie. Midfielder Nemanja Matic is the only current regular first-team player in Jose Mourinho's squad to have spent time on loan with the Dutch club. Bertrand Traore is one of three players currently on loan at Vitesse Arnhem from Chelsea this season . Blues midfielder Nemanja Matic spent time on loan at Vitesse before moving to Benfica and then back .", 'generated_text': 'Chelsea are in early discussions over a possible partnership with Royal Mouscron-Peruwelz. the Belgian club are currently 13th in the belgian Pro League. Mouscron had a partnership with Lille but it is set to end.', 'ref_text': "<START-1>Chelsea are in early discussions over a possible partnership in Belgium .\nThe Pro League's Royal Mouscron-Peruwelz are the prospective partners .\nChelsea already have an agreement with Vitesse Arnheim in Holland .\nCLICK HERE for all the latest Chelsea news .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8956815004348755, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,326 [INFO] {'split_name': 'test', 'sample_id': 'test_5103', 'prompt_text': "Summarize: Having a Waitrose within walking distance is not only convenient – it also means your house is worth more, according to a study. Homes with the upmarket store nearby cost 12 per cent more – or £38,831 – than those in surrounding areas that weren’t near a branch. But having a budget store such as an Aldi or Lidl on your doorstep means your house could be worth thousands of pounds less than others in your neighbourhood. Homes with a Waitrose nearby cost 12 per cent more – or £38,831 – than those in surrounding areas that weren’t near a branch. But having a budget shop nearby means your house could sell for less . In a study published today, Lloyds Bank investigated average house prices in postal districts that have chain supermarkets nearby, to see how they compared to the wider postal region. Houses in areas with a Waitrose cost an average of £354,378 – which was £38,831 (12 per cent) more than typical prices for their regions. Sainsbury’s also delivered a big boost to residents, as properties near the store were worth 10 per cent more (£24,506) than ones in the surrounding area that weren’t near a branch. The price of having a supermarket on your doorstep: Waitrose scores highest - and Aldi the lowest . Tesco came in next, with a price premium of 8 per cent (£17,125), followed by Marks & Spencer, on 7 per cent (£18,786). But the presence of an Aldi nearby was associated with house prices that were 3 per cent (£5,910) lower compared to the wider postal region. And houses close to a Lidl cost 2 per cent (£4,719) less. 'It was mainly the views that attracted us to the property' Meanwhile houses near several different stores enjoyed the highest price premiums. Researchers found that homes in Clifton, Bristol – which enjoy access to a Waitrose, a Sainsbury’s and a Co-op – cost £392,961 on average. This is 64 per cent (£153,488) more than in nearby areas. And homes in Didsbury, a suburb in Manchester that boasts an Aldi, a Co-op and a Tesco, typically cost £239,595, which is 61 per cent or £91,096 more than houses in the surrounding area. Waitrose has carefully cultivated its upmarket image, proving popular with middle and high income families. But the research raises the question of whether a neighbourhood already had more expensive homes – encouraging the store to build a branch near its target customers – or if it was the store’s presence that boosted the area. Similarly, Aldi and Lidl, who have become popular as budget rivals to the big chains, have managed to keep prices low by locating branches in areas that were already cheaper, such as on the edge of towns.", 'generated_text': 'homes with Waitrose nearby cost £38,831 more than those in nearby areas. but having budget store on doorstep means house could sell for less. homes in areas with a Waitrose cost £354,378 on average. this is £38,831 more than those in areas that weren’t near branch. but having an Aldi or Lidl nearby means house could sell for less.', 'ref_text': '<START-1>Homes with Waitrose nearby cost 12% more than those not near a branch .\nStudy found houses cost £38,831 more than homes without the shop .\nBut having budget store like Lidl nearby means house could be worth less .<END-1>', 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.9045585989952087, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,335 [INFO] {'split_name': 'test', 'sample_id': 'test_2766', 'prompt_text': "Summarize: Jockey Aidan Coleman is hoping he has received the call up for the ride that will finally help him banish his Crabbie's Grand National blues at Aintree on Saturday. The 26-year-old rides well-backed The Druids Nephew, stepping in for broken leg victim Barry Geraghty on the Neil Mulholland-trained gelding which won on the opening day of last month's Cheltenham Festival. The eight-year-old is a 12-1 shot for the £1million steeplechase but Coleman knows more than most how fickle fortune can be in the biggest steeplechase in the world. Jockey Aidan Coleman (left) exits the weighing room at Haydock racecourse back in April earlier this year . The Druids Nephew ridden by Barry Geraghty clears the last jump during Day One of Cheltenham 2015 . As a 20-year-old, Coleman chose to ride seventh fence faller Stan, a disappointment turned into a calamity at the time because he had decided against partnering successful Venetia Williams-trained stablemate Mon Mome who lifted the prize at 100-1 with stand-in rider Liam Treadwell basking in glory. It was the only time in three National runs for Mon Mome that Coleman had not ridden the gelding. Coleman's two latest rides in the race have seen him unseated from a hampered The Rainbow Hunter. Coleman said: 'The Mom Mome incident was quite a blow at the time because I had a choice (of mounts) and picked the wrong one. I rode him the year before and the year afterwards, I just wasn't on him on the right day but that is just the way it goes. 'Sometimes you are ahead and sometimes you are behind – that is life in general. 'At the time I was 20, very young in life as well as racing. It was probably the first negative thing to happen in my career. 'Up until then I had never been injured, I had ridden out my claim in 14 months and was champion conditional. Since then there have been lots of good days and lots of bad days, so you become more streetwise and thicker skinned. 'I didn't had the best of luck on The Rainbow Hunter. He jumped well both times but ran into traffic problems and was more of less brought down last year. 'There is an element of luck required in any race but that applies more with the National because of the nature of the fences and the distance.' Coleman, who has enjoyed success over the famous fences in other races, feels The Druids Nephew has the right credential given that slice of Aintree luck which has so far eluded him. The jockey who hopes to be a contender for champion jockey after AP McCoy retires, added: 'It is definitely one of the best rides to pick up. Phil Smith, the chief handicapper, says he is the best handicapped horse in the race. 'The race should suit this horse. He seems quite hardy. He handled the hustle and bustle of the Cheltenham Festival and came out a very nice winner. That should stand him in good stead as far as the Aintree experience goes.' Coleman in action at Haydock racecourse back in April earlier this year .", 'generated_text': "aidan Coleman is hoping to get the call up for The Druids Nephew. the eight-year-old is a 12-1 shot for the £1.5million steeplechase at Aintree. the 26-year-old rides well-backed the gelding which won on the opening day of last month's Cheltenham Festival.", 'ref_text': "<START-1>Jockey Aidan Coleman wants to right past wrongs at The Grand National .\nColeman prepares to ride the well-backed The Druids Nephew .\nThe eight-year-old is a 12-1 shot for the £1million steeplechase this year .\nColeman rode the seventh fence faller Stan six years ago .\nCLICK HERE for Sportsmail's 2015 Grand National sweepstake kit .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8795099258422852, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,344 [INFO] {'split_name': 'test', 'sample_id': 'test_9230', 'prompt_text': "Summarize: Probe: Dr Rory Lyons was suspended by the\xa0Medical Practitioners Tribunal Service and his surgery raided following four deaths 'of concern' The unexpected deaths of two members of a family are at the centre of a criminal probe into their GP. Detectives raided Dr Rory Lyons’ private health centre and medical officials have suspended the 62-year-old from treating patients. Cousins Karen and Colin Cosheril were patients of the Alderney family doctor when they died. Islanders claim the death from pneumonia of Karen, 52, in January prompted the investigation, which then uncovered three more deaths of concern – including that of retired stonemason Colin, 63, who died of heart failure in May. Mr Cosheril’s sister – ambulance technician Brenda Webb – said she complained to Guernsey’s health service after his sudden death. The mother-of-two, 61, said: ‘His death was very sudden. It was a shock. My brother was getting well one day and the next day he went downhill too quickly – the day after that he was dead.’ A family friend of divorcee Karen Cosheril, who used to work at the island’s Chinese takeaway, said: ‘Just before she died there didn’t seem to be anything wrong with her. Then she phoned me and said she was in hospital. 'The next day I got a call saying she had died from pneumonia and I thought, “That is sudden isn’t it?” It was strange because that usually takes time.’ A family member said of Miss Cosheril, who was also known by her married name of Tayleur, said: ‘Her death is one of those being investigated. We were in complete shock when we heard.’ More than 10 Guernsey police officers flew to the island to search Dr Lyons’ Eagle Medical Practice last Thursday. The surgery remained shut over the Easter weekend. A note referring patients to the other island practice was pinned to the door and signed by Dr Lyons, who also worked at the island’s care home. The father-of-two lives in Alderney with his wife. The blinds of their home were shut over the weekend but he was spotted at a flat close to the surgery in the town of St Anne’s. He has not responded to requests for comment. Medical records and other documents were seen being taken from his surgery during the five-hour police search. A search warrant was also executed at a private address. A spokesman for Guernsey’s Health and Social Services Department said the investigation was launched when concerns were raised about a death earlier in the year. The police were then informed after an internal investigation identified the three other potentially suspicious deaths. All four patients died in the past 18 months. Relatives:\xa0Cousins Karen and Colin Cosheril were patients of the Alderney family doctor when they died. Karen, 52, left, died in January of pneumonia and Colin, 63, right, died of heart failure in May last year . Family liaison officers have also been sent to the island to help relatives of the deceased. Guernsey Chief of Police Patrick Rice said: ‘This decisive early action was necessary to ensure the protection of the public. 'The community will be understandably concerned by news of this investigation. It will be complex and take time to establish the full facts.’ Dr Lyons was suspended by the Medical Practitioners Tribunal Service following a hearing on Thursday. Before moving to the island, he worked and lived in Stratford-upon-Avon, where he was a part-time GP. Alderney – which has fewer than 2,000 inhabitants and is just three miles long – has two medical practices, with four GPs, and a 20-bed hospital where GPs treat their own patients. All services are run privately outside the NHS.", 'generated_text': "detectives raided doctor's private health centre and his surgery called in. four deaths 'of concern' uncovered by islanders last month 'health services' investigation into two of the deaths launched. a friend of the divorcee said: 'we were in complete shock when we heard'. the father-of-two, 62, lives in alderney with his wife and their two children.", 'ref_text': "<START-1>Detectives raided Dr Rory Lyons’ private health centre in Alderney .\nDr Lyons is also suspended by the Medical Practitioners Tribunal Service .\nAction sparked by death of Karen Cosheril, 52, from pneumonia in January .\nProbe uncovered three more deaths of concern - including Karen's cousin .<END-1>", 'lexical/meteor': 'n/a', 'lexical/rouge_rouge1': 'n/a', 'lexical/rouge_rouge2': 'n/a', 'lexical/rouge_rougeL': 'n/a', 'lexical/rouge_rougeLsum': 'n/a', 'lexical/bleu': 'n/a', 'semantic/bert_score': 0.8562343716621399, 'diversity_metrics/msttr-100': 'n/a', 'diversity_metrics/msttr-100_nopunct': 'n/a', 'diversity_metrics/total_length': 'n/a', 'diversity_metrics/mean_pred_length': 'n/a', 'diversity_metrics/std_pred_length': 'n/a', 'diversity_metrics/median_pred_length': 'n/a', 'diversity_metrics/min_pred_length': 'n/a', 'diversity_metrics/max_pred_length': 'n/a', 'diversity_metrics/distinct-1': 'n/a', 'diversity_metrics/vocab_size-1': 'n/a', 'diversity_metrics/unique-1': 'n/a', 'diversity_metrics/entropy-1': 'n/a', 'diversity_metrics/distinct-2': 'n/a', 'diversity_metrics/vocab_size-2': 'n/a', 'diversity_metrics/unique-2': 'n/a', 'diversity_metrics/entropy-2': 'n/a', 'diversity_metrics/cond_entropy-2': 'n/a', 'diversity_metrics/distinct-3': 'n/a', 'diversity_metrics/vocab_size-3': 'n/a', 'diversity_metrics/unique-3': 'n/a', 'diversity_metrics/entropy-3': 'n/a', 'diversity_metrics/cond_entropy-3': 'n/a', 'diversity_metrics/total_length-nopunct': 'n/a', 'diversity_metrics/mean_pred_length-nopunct': 'n/a', 'diversity_metrics/std_pred_length-nopunct': 'n/a', 'diversity_metrics/median_pred_length-nopunct': 'n/a', 'diversity_metrics/min_pred_length-nopunct': 'n/a', 'diversity_metrics/max_pred_length-nopunct': 'n/a', 'diversity_metrics/distinct-1-nopunct': 'n/a', 'diversity_metrics/vocab_size-1-nopunct': 'n/a', 'diversity_metrics/unique-1-nopunct': 'n/a', 'diversity_metrics/entropy-1-nopunct': 'n/a', 'diversity_metrics/distinct-2-nopunct': 'n/a', 'diversity_metrics/vocab_size-2-nopunct': 'n/a', 'diversity_metrics/unique-2-nopunct': 'n/a', 'diversity_metrics/entropy-2-nopunct': 'n/a', 'diversity_metrics/cond_entropy-2-nopunct': 'n/a', 'diversity_metrics/distinct-3-nopunct': 'n/a', 'diversity_metrics/vocab_size-3-nopunct': 'n/a', 'diversity_metrics/unique-3-nopunct': 'n/a', 'diversity_metrics/entropy-3-nopunct': 'n/a', 'diversity_metrics/cond_entropy-3-nopunct': 'n/a'}
2023-01-03 14:14:56,364 [INFO] test metrics: {'epoch': 0, 'metrics': {'lexical/meteor': 0.25710057981212464, 'lexical/rouge_rouge1': 0.3738034492087554, 'lexical/rouge_rouge2': 0.14647366864635908, 'lexical/rouge_rougeL': 0.2480639639494719, 'lexical/rouge_rougeLsum': 0.3120232355433395, 'lexical/bleu': 0.07799965647319922, 'semantic/bert_score': 0.8643384648884141, 'diversity_metrics/msttr-100': 0.72319, 'diversity_metrics/msttr-100_nopunct': 0.76158, 'diversity_metrics/total_length': 634555, 'diversity_metrics/mean_pred_length': 55.226718885987815, 'diversity_metrics/std_pred_length': 13.195498603809305, 'diversity_metrics/median_pred_length': 53.0, 'diversity_metrics/min_pred_length': 18, 'diversity_metrics/max_pred_length': 93, 'diversity_metrics/distinct-1': 0.060733900134740094, 'diversity_metrics/vocab_size-1': 38539, 'diversity_metrics/unique-1': 19046, 'diversity_metrics/entropy-1': 10.276201475796784, 'diversity_metrics/distinct-2': 0.4130837071573592, 'diversity_metrics/vocab_size-2': 257378, 'diversity_metrics/unique-2': 192960, 'diversity_metrics/entropy-2': 16.1697968406817, 'diversity_metrics/cond_entropy-2': 5.80284144124036, 'diversity_metrics/distinct-3': 0.7718399215141234, 'diversity_metrics/vocab_size-3': 472038, 'diversity_metrics/unique-3': 420823, 'diversity_metrics/entropy-3': 18.420181834940543, 'diversity_metrics/cond_entropy-3': 2.245203877015575, 'diversity_metrics/total_length-nopunct': 571266, 'diversity_metrics/mean_pred_length-nopunct': 49.71853785900783, 'diversity_metrics/std_pred_length-nopunct': 12.058732653028581, 'diversity_metrics/median_pred_length-nopunct': 48.0, 'diversity_metrics/min_pred_length-nopunct': 14, 'diversity_metrics/max_pred_length-nopunct': 88, 'diversity_metrics/distinct-1-nopunct': 0.0674274331047183, 'diversity_metrics/vocab_size-1-nopunct': 38519, 'diversity_metrics/unique-1-nopunct': 19045, 'diversity_metrics/entropy-1-nopunct': 10.70616834491875, 'diversity_metrics/distinct-2-nopunct': 0.4691465872063111, 'diversity_metrics/vocab_size-2-nopunct': 262617, 'diversity_metrics/unique-2-nopunct': 204015, 'diversity_metrics/entropy-2-nopunct': 16.48083244632175, 'diversity_metrics/cond_entropy-2-nopunct': 5.824184458981692, 'diversity_metrics/distinct-3-nopunct': 0.819913329904466, 'diversity_metrics/vocab_size-3-nopunct': 449547, 'diversity_metrics/unique-3-nopunct': 408904, 'diversity_metrics/entropy-3-nopunct': 18.485255422936, 'diversity_metrics/cond_entropy-3-nopunct': 2.013773481512006}}
2023-01-03 14:14:56,379 [INFO] [bold blue]on_policy_algorithm.learn: [bold white]About to call self._setup_learn()
2023-01-03 14:14:59,982 [INFO] [bold blue]on_policy_algorithm.learn: [bold white]About to call callback.on_training_start
2023-01-03 14:14:59,984 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Entering collect_rollouts
2023-01-03 14:14:59,991 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Reset rollout buffer
2023-01-03 14:15:00,173 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:15:00,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:15:03,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:15:03,745 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:15:05,023 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:15:05,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:15:05,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:15:05,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:05,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:05,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:05,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:05,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:05,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:05,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:05,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:05,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:05,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:05,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:05,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:05,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:05,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:05,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:05,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:05,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:05,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:05,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:05,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:05,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:05,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:05,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:05,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:05,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:05,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:05,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:05,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:05,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:05,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:05,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:05,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:05,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:05,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:05,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:05,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:05,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:05,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:05,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:05,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:05,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:06,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:06,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:06,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:06,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:06,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:06,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:06,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:06,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:06,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:06,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:06,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:06,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:06,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:06,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:06,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:06,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:06,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:06,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:06,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:06,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:06,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:06,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:06,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:06,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:06,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:06,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:06,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:06,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:06,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:06,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:06,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:06,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:06,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:06,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:06,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:06,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:06,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:06,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:06,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:06,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:06,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:06,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:07,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:07,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:07,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:07,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:07,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:07,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:07,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:07,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:07,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:07,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:07,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:07,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:07,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:07,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:07,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:07,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:07,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:07,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:07,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:07,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:07,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:07,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:07,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:07,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:07,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:07,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:07,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:07,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:07,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:07,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:07,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:07,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:07,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:07,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:07,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:07,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:07,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:07,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:07,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:07,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:07,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:07,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:08,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:08,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:08,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:08,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:08,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:08,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:08,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:08,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:08,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:08,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:08,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:08,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:08,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:08,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:08,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:08,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:08,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:08,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:08,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:08,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:08,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:08,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:08,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:08,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:08,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:08,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:08,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:08,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:08,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:08,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:08,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:08,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:08,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:08,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:08,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:08,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:08,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:08,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:08,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:08,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:08,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:08,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:08,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:08,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:08,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:08,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:08,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:08,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:08,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:08,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:08,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:09,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:09,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:09,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:09,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:09,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:09,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:09,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:09,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:09,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:09,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:09,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:09,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:09,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:09,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:09,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:09,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:09,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:09,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:09,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:09,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:09,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:09,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:09,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:09,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:09,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:09,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:09,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:09,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:09,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:09,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:09,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:09,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:09,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:09,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:09,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:09,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:09,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:09,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:09,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:09,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:09,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:09,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:10,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:10,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:10,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:10,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:10,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:10,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:10,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:10,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:10,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:10,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:10,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:10,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:10,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:10,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:10,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:10,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:10,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:10,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:10,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:10,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:10,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:10,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:10,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:10,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:10,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:10,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:10,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:10,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:10,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:10,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:10,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:10,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:10,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:10,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:10,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:10,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:10,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:10,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:10,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:10,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:10,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:10,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:11,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:11,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:11,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:11,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:11,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:11,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:11,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:11,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:11,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:11,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:11,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:11,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:11,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:11,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:11,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:11,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:11,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:11,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:11,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:11,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:11,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:11,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:11,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:11,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:11,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:11,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:11,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:11,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:11,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:11,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:11,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:11,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:11,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:11,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:11,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:11,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:11,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:11,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:11,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:11,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:11,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:11,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:11,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:11,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:11,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:11,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:11,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:11,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:11,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:11,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:11,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:12,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:12,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:12,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:12,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:12,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:12,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:12,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:12,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:12,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:12,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:12,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:12,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:12,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:12,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:12,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:12,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:12,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:12,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:12,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:12,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:12,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:12,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:12,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:12,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:12,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:12,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:12,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:12,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:12,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:12,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:12,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:12,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:12,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:12,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:12,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:12,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:12,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:12,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:12,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:12,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:12,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:12,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:13,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:13,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:13,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:13,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:13,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:13,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:13,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:13,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:13,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:13,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:13,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:13,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:13,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:13,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:13,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:13,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:13,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:13,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:13,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:13,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:13,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:13,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:13,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:13,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:13,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:13,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:13,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:13,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:13,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:13,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:13,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:13,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:13,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:13,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:13,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:13,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:13,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:13,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:13,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:13,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:13,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:13,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:14,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:14,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:14,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:14,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:14,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:14,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:14,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:14,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:14,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:14,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:14,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:14,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:14,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:14,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:14,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:14,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:14,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:14,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:14,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:14,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:14,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:14,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:14,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:14,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:14,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:14,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:14,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:14,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:14,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:14,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:14,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:14,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:14,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:14,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:14,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:14,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:14,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:14,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:14,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:14,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:14,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:14,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:14,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:14,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:14,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:14,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:14,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:14,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:14,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:14,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:14,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:15,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:15,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:15,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:15,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:15,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:15,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:15,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:15,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:15,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:15,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:15,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:15,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:15,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:15,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:15,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:15,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:15,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:15,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:15,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:15,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:15,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:15,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:15,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:15,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:15,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:15,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:15,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:15,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:15,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:15,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:15,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:15,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:15,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:15,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:15,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:15,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:15,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:15,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:15,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:15,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:15,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:15,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:16,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:16,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:16,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:16,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:16,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:16,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:16,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:16,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:16,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:16,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:16,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:16,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:16,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:16,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:16,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:16,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:16,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:16,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:16,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:16,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:16,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:16,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:16,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:16,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:16,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:16,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:16,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:16,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:16,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:16,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:16,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:16,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:16,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:16,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:16,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:16,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:16,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:16,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:16,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:16,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:16,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:16,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:17,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:17,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:17,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:17,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:17,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:17,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:17,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:17,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:17,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:17,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:17,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:17,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:17,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:17,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:17,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:17,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:17,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:17,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:17,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:17,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:17,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:17,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:17,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:17,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:17,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:17,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:17,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:17,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:17,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:17,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:17,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:17,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:17,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:17,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:17,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:17,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:17,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:17,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:17,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:17,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:17,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:17,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:17,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:17,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:17,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:17,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:17,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:17,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:17,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:17,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:17,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:18,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:18,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:18,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:18,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:18,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:18,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:18,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:18,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:18,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:18,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:18,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:18,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:18,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:18,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:18,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:18,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:18,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:18,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:18,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:18,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:18,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:18,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:18,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:18,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:18,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:18,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:18,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:18,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:18,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:18,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:18,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:18,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:18,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:18,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:18,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:18,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:18,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:18,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:18,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:18,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:18,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:18,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:19,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:19,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:19,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:19,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:19,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:19,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:19,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:19,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:19,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:19,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:19,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:19,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:19,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:19,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:19,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:19,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:19,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:19,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:19,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:19,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:19,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:19,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:19,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:19,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:19,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:19,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:19,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:19,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:19,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:19,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:19,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:19,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:19,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:19,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:19,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:19,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:19,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:19,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:19,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:19,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:19,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:19,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:20,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:20,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:20,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:20,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:20,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:20,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:20,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:20,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:20,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:20,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:20,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:20,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:20,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:20,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:20,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:20,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:20,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:20,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:20,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:20,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:20,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:20,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:20,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:20,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:20,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:20,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:20,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:20,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:20,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:20,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:20,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:20,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:20,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:20,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:20,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:20,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:20,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:20,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:20,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:20,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:20,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:20,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:20,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:20,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:20,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:20,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:20,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:20,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:20,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:20,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:20,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:21,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:21,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:21,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:21,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:21,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:21,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:21,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:21,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:21,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:21,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:21,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:21,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:21,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:21,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:21,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:21,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:21,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:21,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:21,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:21,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:21,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:21,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:21,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:21,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:21,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:21,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:21,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:21,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:21,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:21,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:21,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:21,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:21,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:21,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:21,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:21,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:21,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:21,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:21,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:21,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:21,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:21,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:22,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:22,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:22,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:22,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:22,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:22,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:22,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:22,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:22,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:22,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:22,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:22,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:22,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:22,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:22,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:22,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:22,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:22,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:22,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:22,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:22,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:22,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:22,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:22,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:22,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:22,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:22,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:22,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:22,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:22,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:22,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:22,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:22,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:22,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:22,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:22,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:22,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:22,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:22,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:22,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:22,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:22,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:23,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:23,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:23,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:23,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:23,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:23,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:23,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:23,011 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:23,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:23,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:23,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:23,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:23,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:23,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:23,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:23,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:23,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:23,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:23,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:23,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:23,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:23,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:23,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:23,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:23,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:23,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:23,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:23,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:23,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:23,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:23,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:23,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:23,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:23,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:23,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:23,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:23,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:23,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:23,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:23,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:23,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:23,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:23,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:23,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:23,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:23,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:23,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:23,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:23,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:23,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:23,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:23,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:23,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:24,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:24,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:24,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:24,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:24,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:24,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:24,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:24,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:24,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:24,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:24,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:24,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:24,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:24,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:24,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:24,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:24,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:24,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:24,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:24,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:24,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:24,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:24,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:24,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:24,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:24,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:24,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:24,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:24,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:24,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:24,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:24,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:24,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:24,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:24,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:24,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:24,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:24,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:24,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:24,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:24,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:24,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:25,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:25,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:25,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:25,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:25,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:25,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:25,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:25,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:25,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:25,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:25,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:25,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:25,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:25,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:25,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:25,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:25,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:25,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:25,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:25,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:25,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:25,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:25,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:25,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:25,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:25,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:25,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:25,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:25,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:25,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:25,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:25,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:25,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:25,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:25,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:25,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,980 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:25,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:25,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:25,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:25,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:25,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:25,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:25,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:25,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:25,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:26,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:26,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:26,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:26,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:26,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:26,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:26,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:26,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:26,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:26,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:26,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:26,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:26,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:26,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:26,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:26,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:26,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:26,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:26,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:26,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:26,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:26,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:26,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:26,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:26,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:26,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:26,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:26,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:26,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:26,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:26,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:26,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:26,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:26,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:26,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:26,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:26,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:26,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:26,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:26,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:26,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:26,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:26,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:26,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:26,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:26,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:26,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:27,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:27,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:27,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:27,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:27,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:27,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:27,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:27,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:27,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:27,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:27,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:27,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:27,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:27,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:27,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:27,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:27,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:27,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:27,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:27,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:27,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:27,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:27,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:27,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:27,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:27,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:27,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:27,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:27,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:27,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:27,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:27,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:27,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:27,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:27,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:27,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:27,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:27,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:27,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:27,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:27,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:27,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:27,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:28,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:28,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:28,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:28,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:28,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:28,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:28,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:28,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:28,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:28,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:28,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:28,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:28,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:28,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:28,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:28,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:28,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:28,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:28,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:28,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:28,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:28,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:28,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:28,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:28,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:28,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:28,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:28,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:28,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:28,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:28,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:28,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:28,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:28,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:28,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:28,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:28,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:28,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:28,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:28,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:28,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:28,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:28,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:28,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:28,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:28,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:28,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:28,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:29,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:29,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:29,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:29,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:29,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:29,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:29,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:29,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:29,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:29,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:29,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:29,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:29,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:29,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:29,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:29,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:29,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:29,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:29,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:29,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:29,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:29,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:29,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:29,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:29,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:29,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:29,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:29,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:29,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:29,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:29,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:29,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:29,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:29,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:29,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:29,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:29,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:29,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:29,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:29,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:29,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:29,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:29,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:29,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:29,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:30,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:30,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:30,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:30,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:30,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:30,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:30,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:30,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:30,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:30,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:30,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:30,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:30,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:30,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:30,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:30,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:30,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:30,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:30,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:30,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:30,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:30,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:30,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:30,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:30,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:31,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:31,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:31,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:31,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:31,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:31,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:31,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:31,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:31,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:31,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:31,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:31,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:31,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:31,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:31,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:31,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:31,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:31,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:31,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:31,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:31,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:31,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:31,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:31,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:31,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:31,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:31,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:31,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:31,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:31,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:31,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:31,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:31,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:31,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:31,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:31,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:31,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:32,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:32,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:32,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:32,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:32,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:32,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:32,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:32,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:32,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:32,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:32,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:32,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:32,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:32,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:32,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:32,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:32,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:32,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:32,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:32,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:32,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:32,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:32,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:32,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:32,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:32,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:32,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:32,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:32,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:32,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:32,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:32,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:32,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:32,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:32,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:32,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:33,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:33,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:33,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:33,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:33,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:33,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:33,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:33,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:33,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:33,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:33,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:33,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:33,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:33,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:33,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:33,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:33,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:33,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:33,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:33,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:33,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:33,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:33,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:33,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:33,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:33,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:33,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:34,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:34,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:34,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:34,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:34,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:34,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:34,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:34,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:34,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:34,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:34,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:34,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:34,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:34,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:34,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:34,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:34,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:34,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:34,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:34,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:35,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:35,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:35,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:35,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:35,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:35,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:35,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:35,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:35,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:35,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:35,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:35,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:35,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:35,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:35,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:35,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:35,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:35,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:35,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:35,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:35,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:35,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:35,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:35,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:35,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:35,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:35,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:35,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:35,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:35,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:35,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:35,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:35,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:35,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:35,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:35,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:35,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:36,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:36,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:36,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:36,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:36,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:36,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:36,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:36,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:36,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:36,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:36,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:36,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:36,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:36,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:36,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:36,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:36,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:36,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:36,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:36,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:36,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:36,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:36,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:36,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:36,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:36,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:36,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:36,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:36,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:36,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:36,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:36,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:36,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:36,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:36,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:36,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:36,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:36,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:36,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:36,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:36,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:36,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:36,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:36,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:36,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:36,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:36,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:36,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:36,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:36,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:36,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:37,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:37,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:37,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:37,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:37,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:37,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:37,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:37,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:37,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:37,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:37,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:37,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:37,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:37,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:37,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:37,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:37,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:37,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:37,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:37,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:37,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:37,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:37,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:37,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:37,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:37,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:37,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:37,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:37,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:37,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:37,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:37,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:37,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:37,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:37,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:37,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:37,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:37,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:37,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:37,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:37,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:37,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:38,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:38,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:38,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:38,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:38,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:39,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:39,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:39,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:39,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:39,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:39,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:39,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:39,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:39,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:39,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:39,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:39,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:39,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:39,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:39,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:39,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:39,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:39,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:39,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:39,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:39,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:39,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:39,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:39,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:39,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:39,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:39,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:39,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:39,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:39,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:39,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:39,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:39,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:39,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:39,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:39,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:39,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:39,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:39,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:39,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:39,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:39,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:39,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:39,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:39,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:39,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:39,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:39,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:39,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:39,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:39,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:39,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:39,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:40,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:40,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:40,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:40,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:40,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:40,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:40,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:40,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:40,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:40,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:40,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:40,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:40,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:40,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:40,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:40,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:40,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:40,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:40,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:40,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:41,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:41,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:41,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:41,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:41,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:41,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:41,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:41,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:41,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:41,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:41,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:41,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:41,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:41,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:41,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:41,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:41,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:41,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:41,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:41,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:41,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:41,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:41,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:41,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:41,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:41,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:41,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:41,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:41,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:41,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:41,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:41,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:41,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:41,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:41,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:41,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:41,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:41,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:41,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:41,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:41,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:41,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:42,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:42,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:42,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:42,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:42,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:42,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:42,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:42,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:42,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:42,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:42,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:42,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:42,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:42,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:42,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:42,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:42,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:42,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:42,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:42,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:42,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:42,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:42,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:42,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:42,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:43,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:43,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:43,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:43,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:43,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:43,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:43,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:43,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:43,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:43,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:43,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:43,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:43,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:43,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:43,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:43,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:43,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:43,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:43,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:43,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:43,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:43,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:43,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:43,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:43,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:43,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:43,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:43,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:43,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:43,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:43,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:43,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:43,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:44,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:44,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:44,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:44,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:44,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:44,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:44,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:44,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:44,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:44,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:44,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:44,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:44,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:44,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:44,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:44,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:44,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:44,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:44,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:44,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:44,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:44,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:44,686 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:44,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:44,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:44,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:44,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:44,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:44,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:44,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:44,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:44,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:44,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:44,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:44,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:44,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:44,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:44,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:44,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:44,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:44,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:44,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:45,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:45,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:45,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:45,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:45,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:45,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:45,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:45,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:45,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:45,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:45,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:45,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:45,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:45,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:45,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:45,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:45,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:45,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:45,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:45,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:45,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:45,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:45,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:45,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:45,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:45,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:45,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:45,686 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:45,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:45,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:45,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:45,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:45,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:45,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:45,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:45,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:45,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:45,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:45,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:45,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:45,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:45,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:46,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:46,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:46,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:46,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:46,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:46,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:46,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:46,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:46,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:46,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:46,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:46,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:46,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:46,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:46,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:46,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:46,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:46,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:46,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:46,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:46,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:46,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:46,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:46,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:46,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:46,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:46,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:46,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:46,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:46,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:46,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:46,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:46,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:46,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:46,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:46,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:46,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:46,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:46,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:46,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:46,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:46,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:46,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:46,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:46,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:46,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:46,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:46,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:46,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:46,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:46,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:47,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:47,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:47,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:47,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:47,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:47,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:47,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:47,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:47,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:47,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:47,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:47,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:47,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:47,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:47,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:47,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:47,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:47,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:47,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:47,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:47,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:47,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:47,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:47,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:47,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:47,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:47,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:48,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:48,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:48,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:48,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:48,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:48,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:48,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:48,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:48,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:48,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:48,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:48,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:48,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:15:48,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:15:48,336 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:15:48,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:15:51,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:15:51,898 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:15:53,298 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:15:53,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:15:53,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:15:53,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:53,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:53,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:53,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:53,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:53,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:53,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:53,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:53,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:53,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:53,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:53,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:53,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:53,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:53,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:53,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:53,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:53,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:53,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:53,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:53,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:53,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:53,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:54,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:54,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:54,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:54,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:54,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:54,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:54,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:54,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:54,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:54,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:54,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:54,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:54,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:54,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:54,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:54,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:54,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:54,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:54,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:54,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:54,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:54,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:54,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:54,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:54,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:54,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:54,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:54,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:54,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:54,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:54,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:54,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:54,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:54,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:54,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:54,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:54,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:54,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:54,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:54,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:54,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:54,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:55,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:55,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:55,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:55,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:55,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:55,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:55,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:55,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:55,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:55,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:55,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:55,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:55,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:55,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:55,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:55,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:55,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:55,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:55,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:55,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:55,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:55,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:55,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:55,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:55,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:55,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:55,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:55,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:55,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:55,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:55,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:55,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:55,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:55,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:55,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:55,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:55,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:55,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:55,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:55,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:55,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:55,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:55,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:55,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:55,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:55,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:55,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:55,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:55,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:55,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:55,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:56,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:56,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:56,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:56,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:56,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:56,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:56,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:56,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:56,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:56,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:56,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:56,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:56,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:56,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:56,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:56,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:56,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:56,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:56,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:56,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:56,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:56,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:56,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:56,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:56,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:56,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:56,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:56,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:56,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:56,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:56,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:56,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:56,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:56,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:56,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:56,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:56,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:56,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:56,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:56,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:56,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:56,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:57,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:57,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:57,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:57,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:57,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:57,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:57,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:57,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:57,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:57,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:57,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:57,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:57,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:57,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:57,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:57,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:57,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:57,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:57,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:57,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:57,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:57,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:57,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:57,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:57,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:57,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:57,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:57,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:57,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:57,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:57,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:57,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:57,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:57,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:57,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:57,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:57,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:57,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:57,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:57,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:57,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:57,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:58,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:58,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:58,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:58,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:58,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:58,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:58,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:58,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:58,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:58,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:58,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:58,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:58,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:58,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:58,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:58,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:58,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:58,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:58,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:58,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:58,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:58,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:58,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:58,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:58,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:58,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:58,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:58,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:58,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:58,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:58,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:58,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:58,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:58,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:58,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:58,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:58,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:58,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:58,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:58,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:58,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:58,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:58,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:58,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:58,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:58,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:58,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:58,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:58,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:58,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:58,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:59,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:59,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:59,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:59,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:59,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:59,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:59,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:59,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:59,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:59,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:59,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:59,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:59,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:59,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:59,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:59,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:59,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:59,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:59,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:59,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:59,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:59,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:15:59,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:15:59,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:15:59,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:15:59,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:15:59,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:15:59,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:15:59,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:15:59,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:15:59,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:15:59,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:15:59,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:15:59,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:15:59,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:15:59,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:15:59,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:15:59,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:15:59,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:15:59,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:15:59,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:15:59,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:00,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:00,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:00,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:00,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:00,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:00,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:00,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:00,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:00,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:00,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:00,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:00,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:00,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:00,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:00,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:00,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:00,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:00,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:00,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:00,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:00,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:00,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:00,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:00,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:00,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:00,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:00,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:00,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:00,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:00,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:00,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:00,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:00,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:00,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:00,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:00,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:00,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:00,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:00,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:00,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:01,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:01,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:01,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:01,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:01,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:01,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:01,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:01,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:01,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:01,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:01,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:01,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:01,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:01,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:01,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:01,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:01,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:01,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:01,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:01,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:01,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:01,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:01,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:01,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:01,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:01,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:01,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:01,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:01,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:01,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:01,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:01,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:01,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:01,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:01,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:01,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:01,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:01,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:01,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:01,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:01,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:01,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:01,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:01,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:01,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:01,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:01,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:01,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:01,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:01,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:01,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:01,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:01,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:01,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:01,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:02,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:02,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:02,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:02,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:02,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:02,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:02,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:02,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:02,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:02,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:02,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:02,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:02,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:02,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:02,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:02,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:02,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:02,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:02,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:02,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:02,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:02,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:02,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:02,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:02,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:02,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:02,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:02,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:02,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:02,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:02,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:02,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:02,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:02,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:02,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:02,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:02,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:02,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:02,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:02,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:02,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:02,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:03,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:03,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:03,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:03,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:03,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:03,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:03,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:03,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:03,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:03,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:03,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:03,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:03,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:03,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:03,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:03,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:03,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:03,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:03,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:03,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:03,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:03,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:03,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:03,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:03,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:03,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:03,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:03,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:03,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:03,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:03,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:03,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:03,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:03,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:03,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:03,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:03,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:03,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:03,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:03,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:03,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:03,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:04,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:04,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:04,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:04,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:04,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:04,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:04,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:04,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:04,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:04,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:04,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:04,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:04,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:04,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:04,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:04,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:04,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:04,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:04,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:04,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:04,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:04,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:04,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:04,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:04,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:04,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:04,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:04,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:04,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:04,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:04,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:04,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:04,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:04,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:04,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:04,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:04,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:04,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:04,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:04,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:04,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:04,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:04,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:04,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:04,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:04,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:04,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:04,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:04,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:05,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:05,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:05,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:05,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:05,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:05,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:05,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:05,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:05,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:05,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:05,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:05,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:05,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:05,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:05,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:05,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:05,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:05,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:05,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:05,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:05,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:05,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:05,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:05,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:05,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:05,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:05,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:05,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:05,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:05,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:05,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:05,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:05,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:05,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:05,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:05,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:05,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:05,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:05,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:05,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:05,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:05,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:05,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:05,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:06,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:06,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:06,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:06,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:06,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:06,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:06,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:06,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:06,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:06,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:06,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:06,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:06,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:06,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:06,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:06,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:06,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:06,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:06,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:06,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:06,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:06,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:06,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:06,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:06,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:06,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:06,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:06,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:06,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:06,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:06,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:06,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:06,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:06,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:06,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:06,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:06,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:06,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:06,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:06,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:06,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:06,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:06,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:06,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:07,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:07,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:07,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:07,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:07,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:07,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:07,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:07,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:07,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:07,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:07,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:07,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:07,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:07,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:07,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:07,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:07,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:07,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:07,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:07,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:07,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:07,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:07,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:07,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:07,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:07,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:07,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:07,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:07,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:07,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:07,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:07,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:07,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:07,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:07,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:07,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:07,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:07,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:07,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:07,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:07,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:07,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:07,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:07,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:07,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:07,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:07,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:07,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:07,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:08,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:08,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:08,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:08,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:08,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:08,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:08,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:08,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:08,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:08,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:08,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:08,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:08,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:08,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:08,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:08,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:08,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:08,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:08,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:08,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:08,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:08,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:08,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:08,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:08,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:08,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:08,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:08,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:08,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:08,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:08,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:08,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:08,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:08,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:08,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:08,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:08,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:08,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:08,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:08,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:08,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:08,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:09,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:09,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:09,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:09,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:09,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:09,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:09,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:09,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:09,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:09,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:09,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:09,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:09,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:09,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:09,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:09,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:09,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:09,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:09,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:09,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:09,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:09,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:09,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:09,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:09,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:09,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:09,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:09,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:09,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:09,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:09,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:09,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:09,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:09,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:09,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:09,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:09,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:09,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:09,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:09,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:09,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:09,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:09,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:09,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:09,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:09,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:09,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:09,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:09,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:09,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:09,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:10,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:10,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:10,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:10,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:10,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:10,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:10,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:10,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:10,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:10,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:10,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:10,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:10,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:10,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:10,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:10,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:10,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:10,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:10,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:10,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:10,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:10,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:10,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:10,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:10,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:10,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:10,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:10,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:10,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:10,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:10,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:10,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:10,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:10,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:10,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:10,818 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:10,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:10,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:10,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:10,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:10,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:10,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:11,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:11,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:11,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:11,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:11,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:11,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:11,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:11,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:11,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:11,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:11,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:11,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:11,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:11,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:11,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:11,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:11,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:11,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:11,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:11,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:11,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:11,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:11,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:11,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:11,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:11,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:11,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:11,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:11,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:11,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:11,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:11,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:11,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:11,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:11,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:11,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:11,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:11,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:11,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:11,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:11,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:11,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:12,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:12,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:12,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:12,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:12,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:12,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:12,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:12,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:12,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:12,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:12,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:12,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:12,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:12,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:12,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:12,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:12,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:12,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:12,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:12,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:12,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:12,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:12,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:12,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:12,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:12,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:12,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:12,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:12,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:12,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:12,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:12,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:12,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:12,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:12,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:12,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:12,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:12,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:12,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:12,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:12,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:12,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:12,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:12,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:12,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:12,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:12,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:12,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:12,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:12,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:12,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:13,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:13,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:13,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:13,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:13,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:13,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:13,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:13,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:13,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:13,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:13,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:13,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:13,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:13,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:13,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:13,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:13,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:13,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:13,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:13,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:13,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:13,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:13,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:13,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:13,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:13,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:13,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:13,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:13,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:13,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:13,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:13,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:13,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:13,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:13,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:13,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:13,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:13,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:13,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:13,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:13,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:13,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:14,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:14,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:14,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:14,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:14,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:14,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:14,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:14,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:14,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:14,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:14,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:14,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:14,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:14,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:14,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:14,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:14,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:14,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:14,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:14,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:14,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:14,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:14,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:14,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:14,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:14,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:14,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:14,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:14,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:14,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:14,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:14,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:14,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:14,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:14,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:14,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:14,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:14,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:14,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:14,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:14,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:14,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:15,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:15,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:15,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:15,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:15,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:15,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:15,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:15,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:15,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:15,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:15,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:15,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:15,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:15,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:15,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:15,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:15,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:15,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:15,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:15,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:15,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:15,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:15,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:15,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:15,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:15,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:15,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:15,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:15,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:15,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:15,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:15,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:15,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:15,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:15,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:15,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:15,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:15,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:16,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:16,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:16,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:16,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:16,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:16,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:16,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:16,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:16,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:16,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:16,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:16,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:16,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:16,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:16,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:16,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:16,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:16,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:16,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:16,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:16,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:16,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:16,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:16,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:16,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:16,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:16,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:16,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:16,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:16,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:16,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:16,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:16,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:16,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:16,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:17,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:17,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:17,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:17,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:17,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:17,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:17,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:17,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:17,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:17,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:17,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:17,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:17,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:17,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:17,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:17,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:17,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:17,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:17,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:17,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:17,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:17,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:17,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:17,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:17,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:17,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:17,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:17,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:17,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:17,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:17,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:17,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:17,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:17,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:17,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:17,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:17,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:17,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:17,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:17,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:17,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:17,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:18,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:18,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:18,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:18,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:18,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:18,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:18,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:18,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:18,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:18,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:18,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:18,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:18,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:18,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:18,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:18,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:18,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:18,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:18,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:18,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:18,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:18,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:18,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:18,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:18,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:18,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:18,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:18,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:18,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:18,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:18,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:18,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:18,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:18,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:18,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:18,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:18,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:18,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:18,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:18,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:18,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:18,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:18,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:18,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:18,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:18,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:18,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:18,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:18,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:18,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:18,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:19,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:19,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:19,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:19,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:19,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:19,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:19,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:19,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:19,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:19,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:19,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:19,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:19,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:19,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:19,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:19,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:19,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:19,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:19,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:19,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:19,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:19,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:19,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:19,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:19,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:19,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:19,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:19,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:19,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:19,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:19,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:19,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:19,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:19,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:19,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:19,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:19,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:19,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:19,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:19,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:19,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:19,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:20,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:20,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:20,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:20,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:20,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:20,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:20,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:20,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:20,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:20,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:20,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:20,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:20,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:20,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:20,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:20,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:20,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:20,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:20,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:20,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:20,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:20,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:20,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:20,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:20,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:20,686 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:20,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:20,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:20,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:20,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:20,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:20,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:20,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:20,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:20,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:20,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:20,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:20,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:20,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:20,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:20,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:20,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:21,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:21,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:21,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:21,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:21,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:21,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:21,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:21,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:21,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:21,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:21,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:21,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:21,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:21,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:21,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:21,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:21,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:21,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:21,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:21,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:21,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:21,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:21,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:21,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:21,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:21,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:21,545 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:21,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:21,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:21,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:21,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:21,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:21,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:21,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:21,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:21,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:21,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:21,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:21,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:21,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:21,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:21,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:21,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:21,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:21,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:21,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:21,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:21,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:21,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:21,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:21,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:22,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:22,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:22,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:22,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:22,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:22,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:22,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:22,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:22,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:22,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:22,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:22,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:22,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:22,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:22,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:22,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:22,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:22,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:22,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:22,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:22,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:22,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:22,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:22,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:22,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:22,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:22,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:23,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:23,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:23,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:23,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:23,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:23,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:23,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:23,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:23,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:23,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:23,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:23,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:23,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:23,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:23,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:23,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:23,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:23,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:23,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:23,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:23,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:23,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:23,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:23,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:23,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:23,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:23,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:23,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:23,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:23,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:23,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:23,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:23,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:23,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:23,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:24,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:24,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:24,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:24,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:24,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:24,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:24,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:24,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:24,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:24,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:24,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:24,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:24,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:24,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:24,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:24,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:24,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:24,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:24,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:24,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:24,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:24,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:24,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:24,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:24,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:24,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:24,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:24,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:24,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:24,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:24,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:24,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:24,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:24,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:24,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:24,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:24,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:24,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:24,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:24,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:25,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:25,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:25,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:25,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:25,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:25,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:25,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:25,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:25,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:25,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:25,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:25,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:25,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:25,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:25,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:25,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:25,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:25,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:25,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:25,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:25,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:25,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:25,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:25,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:25,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:25,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:25,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:25,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:25,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:25,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:25,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:25,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:25,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:25,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:25,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:25,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:25,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:25,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:25,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:25,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:25,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:25,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:25,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:25,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:25,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:25,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:25,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:25,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:25,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:25,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:25,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:25,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:25,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:26,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:26,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:26,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:26,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:26,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:26,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:26,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:26,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:26,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:26,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:26,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:26,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:26,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:26,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:26,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:26,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:26,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:26,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:26,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:26,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:26,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:26,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:26,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:26,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:26,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:26,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:26,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:27,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:27,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:27,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:27,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:27,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:27,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:27,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:27,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:27,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:27,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:27,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:27,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:27,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:27,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:27,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:27,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:27,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:27,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:27,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:27,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:27,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:27,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:27,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:27,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:27,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:27,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:27,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:27,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:27,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:27,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:27,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:27,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:27,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:27,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:27,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:27,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:27,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:28,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:28,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:28,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:28,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:28,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:28,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:28,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:28,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:28,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:28,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:28,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:28,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:28,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:28,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:28,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:28,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:28,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:28,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:28,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:28,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:28,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:28,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:28,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:28,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:28,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:28,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:28,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:28,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:28,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:28,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:28,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:28,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:28,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:28,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:28,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:28,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:29,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:29,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:29,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:29,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:29,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:29,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:29,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:29,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:29,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:29,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:29,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:29,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:29,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:29,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:29,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:29,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:29,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:29,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:29,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:29,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:29,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:30,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:30,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:30,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:30,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:30,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:30,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:30,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:30,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:30,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:30,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:30,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:30,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:30,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:30,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:30,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:30,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:30,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:30,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:30,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:30,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:30,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:30,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:30,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:30,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:30,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:30,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:30,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:30,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:30,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:30,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:30,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:30,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:30,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:30,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:30,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:30,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:30,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:30,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:30,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:30,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:30,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:30,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:30,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:31,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:31,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:31,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:31,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:31,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:31,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:31,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:31,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:31,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:31,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:31,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:31,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:31,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:31,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:31,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:31,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:31,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:31,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:31,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:31,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:31,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:31,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:31,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:31,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:31,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:31,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:31,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:31,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:31,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:31,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:31,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:31,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:31,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:31,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:31,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:31,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:31,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:31,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:32,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:32,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:32,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:32,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:32,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:32,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:32,011 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:32,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:32,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:32,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:32,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:32,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:32,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:32,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:32,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:32,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:32,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:32,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:32,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:32,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:32,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:32,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:32,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:32,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:32,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:32,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:32,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:32,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:32,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:32,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:32,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:32,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:32,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:33,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:33,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:33,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:33,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:33,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:33,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:33,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:33,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:33,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:33,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:33,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:33,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:33,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:33,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:33,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:33,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:33,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:33,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:33,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:33,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:33,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:33,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:33,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:33,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:33,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:33,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:33,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:33,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:33,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:33,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:33,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:33,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:33,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:33,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:33,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:33,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:33,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:33,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:33,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:33,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:33,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:33,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:34,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:34,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:34,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:34,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:34,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:34,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:34,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:34,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:34,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:34,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:34,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:34,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:34,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:34,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:34,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:34,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:34,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:34,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:34,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:34,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:34,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:34,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:34,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:34,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:34,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:34,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:34,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:34,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:34,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:34,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:34,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:34,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:34,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:34,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:34,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:34,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:34,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:34,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:34,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:34,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:34,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:34,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:35,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:35,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:35,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:35,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:35,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:35,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:35,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:35,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:35,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:35,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:35,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:35,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:35,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:35,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:35,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:35,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:35,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:35,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:35,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:35,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:35,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:35,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:35,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:35,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:35,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:35,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:35,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:35,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:35,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:35,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:35,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:35,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:35,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:35,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:35,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:35,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:36,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:36,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:36,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:36,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:36,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:36,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:36,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:36,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:36,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:36,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:36,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:36,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:36,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:36,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:36,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:36,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:36,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:36,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:36,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:36,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:36,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:36,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:37,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:37,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:37,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:37,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:37,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:37,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:37,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:37,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:37,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:37,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:37,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:37,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:37,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:37,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:37,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:37,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:37,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:37,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:37,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:37,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:37,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:37,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:37,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:37,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:37,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:37,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:37,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:37,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:37,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:37,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:37,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:37,686 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:37,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:37,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:37,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:37,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:37,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:37,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:37,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:37,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:37,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:37,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:38,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:38,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:38,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:38,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:38,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:38,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:38,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:38,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:38,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:38,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:38,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:38,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:38,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:38,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:38,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:38,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:38,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:38,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:38,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:38,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:38,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:38,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:38,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:38,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:38,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:38,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:38,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:38,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:38,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:38,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:38,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:38,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:38,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:38,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:38,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:38,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:38,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:38,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:38,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:38,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:38,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:38,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:38,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:38,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:38,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:38,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:38,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:38,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:38,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:38,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:38,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:39,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:39,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:39,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:39,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:39,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:39,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:39,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:39,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:39,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:39,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:39,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:39,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:39,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:39,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:39,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:39,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:39,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:39,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:39,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:39,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:40,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:40,011 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:40,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:40,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:40,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:40,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:40,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:40,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:40,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:40,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:40,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:40,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:40,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:40,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:40,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:40,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:40,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:40,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:40,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:40,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:16:40,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:16:40,823 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:16:40,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:16:44,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:16:44,388 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:16:45,788 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:16:45,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:16:45,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:16:45,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:45,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:45,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:46,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:46,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:46,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:46,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:46,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:46,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:46,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:46,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:46,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:46,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:46,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:46,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:46,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:46,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:46,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:46,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:46,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:46,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:46,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:46,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:46,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:46,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:46,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:46,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:46,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:46,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:46,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:46,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:46,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:46,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:46,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:46,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:46,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:46,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:46,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:46,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:46,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:46,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:46,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:46,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:46,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:46,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:47,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:47,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:47,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:47,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:47,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:47,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:47,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:47,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:47,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:47,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:47,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:47,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:47,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:47,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:47,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:47,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:47,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:47,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:47,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:47,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:47,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:47,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:47,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:47,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:47,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:47,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:47,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:47,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:47,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:47,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:47,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:47,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:47,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:47,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:47,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:47,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:47,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:47,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:47,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:47,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:47,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:47,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:47,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:47,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:47,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:47,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:47,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:47,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:47,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:47,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:47,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:48,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:48,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:48,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:48,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:48,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:48,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:48,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:48,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:48,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:48,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:48,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:48,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:48,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:48,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:48,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:48,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:48,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:48,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:48,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:48,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:48,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:48,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:48,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:48,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:48,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:48,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:48,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:48,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:48,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:48,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:48,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:48,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:48,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:48,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:48,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:48,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:48,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:48,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:48,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:48,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:48,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:48,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:49,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:49,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:49,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:49,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:49,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:49,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:49,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:49,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:49,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:49,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:49,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:49,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:49,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:49,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:49,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:49,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:49,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:49,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:49,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:49,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:49,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:49,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:49,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:49,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:49,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:49,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:49,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:49,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:49,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:49,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:49,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:49,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:49,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:49,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:49,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:49,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:49,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:49,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:49,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:49,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:49,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:49,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:50,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:50,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:50,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:50,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:50,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:50,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:50,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:50,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:50,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:50,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:50,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:50,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:50,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:50,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:50,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:50,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:50,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:50,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:50,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:50,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:50,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:50,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:50,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:50,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:50,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:50,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:50,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:50,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:50,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:50,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:50,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:50,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:50,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:50,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:50,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:50,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:50,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:50,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:50,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:50,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:50,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:50,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:50,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:50,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:50,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:50,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:50,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:50,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:50,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:50,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:50,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:51,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:51,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:51,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:51,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:51,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:51,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:51,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:51,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:51,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:51,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:51,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:51,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:51,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:51,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:51,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:51,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:51,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:51,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:51,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:51,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:51,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:51,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:51,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:51,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:51,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:51,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:51,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:51,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:51,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:51,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:51,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:51,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:51,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:51,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:51,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:51,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:51,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:51,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:51,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:51,818 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:51,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:51,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:52,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:52,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:52,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:52,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:52,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:52,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:52,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:52,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:52,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:52,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:52,231 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:52,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:52,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:52,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:52,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:52,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:52,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:52,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:52,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:52,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:52,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:52,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:52,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:52,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:52,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:52,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:52,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:52,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:52,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:52,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:52,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:52,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:52,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:52,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:52,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:52,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:52,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:52,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:52,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:52,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:52,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:52,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:53,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:53,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:53,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:53,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:53,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:53,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:53,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:53,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:53,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:53,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:53,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:53,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:53,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:53,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:53,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:53,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:53,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:53,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:53,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:53,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:53,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:53,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:53,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:53,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:53,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:53,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:53,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:53,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:53,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:53,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:53,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:53,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:53,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:53,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:53,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:53,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:53,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:53,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:53,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:53,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:53,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:53,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:53,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:53,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:53,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:53,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:53,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:53,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:53,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:53,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:53,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:54,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:54,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:54,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:54,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:54,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:54,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:54,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:54,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:54,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:54,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:54,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:54,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:54,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:54,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:54,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:54,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:54,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:54,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:54,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:54,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:54,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:54,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:54,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:54,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:54,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:54,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:54,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:54,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:54,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:54,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:54,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:54,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:54,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:54,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:54,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:54,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:54,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:54,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:54,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:54,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:54,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:54,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:55,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:55,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:55,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:55,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:55,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:55,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:55,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:55,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:55,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:55,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:55,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:55,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:55,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:55,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:55,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:55,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:55,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:55,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:55,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:55,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:55,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:55,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:55,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:55,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:55,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:55,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:55,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:55,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:55,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:55,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:55,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:55,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:55,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:55,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:55,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:55,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:55,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:55,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:55,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:55,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:55,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:55,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:56,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:56,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:56,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:56,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:56,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:56,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:56,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:56,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:56,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:56,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:56,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:56,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:56,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:56,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:56,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:56,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:56,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:56,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:56,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:56,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:56,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:56,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:56,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:56,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:56,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:56,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:56,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:56,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:56,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:56,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:56,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:56,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:56,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:56,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:56,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:56,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:56,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:56,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:56,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:56,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:56,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:56,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:56,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:56,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:56,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:56,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:56,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:56,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:56,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:56,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:56,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:57,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:57,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:57,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:57,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:57,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:57,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:57,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:57,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:57,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:57,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:57,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:57,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:57,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:57,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:57,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:57,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:57,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:57,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:57,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:57,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:57,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:57,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:57,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:57,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:57,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:57,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:57,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:57,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:57,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:57,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:57,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:57,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:57,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:57,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:57,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:57,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:57,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:57,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:57,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:57,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:57,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:57,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:58,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:58,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:58,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:58,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:58,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:58,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:58,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:58,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:58,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:58,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:58,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:58,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:58,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:58,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:58,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:58,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:58,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:58,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:58,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:58,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:58,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:58,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:58,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:58,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:58,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:58,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:58,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:58,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:58,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:58,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:58,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:58,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:58,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:58,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:58,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:58,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:58,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:58,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:58,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:58,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:58,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:58,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:59,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:59,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:59,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:59,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:59,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:59,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:59,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:59,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:59,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:59,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:59,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:59,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:59,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:59,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:59,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:59,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:59,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:59,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:59,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:59,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:59,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:59,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:59,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:59,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:59,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:59,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:59,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:59,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:59,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:59,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:59,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:59,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:16:59,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:16:59,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:16:59,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:16:59,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:16:59,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:16:59,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:16:59,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:16:59,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:16:59,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:16:59,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:16:59,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:16:59,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:16:59,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:16:59,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:16:59,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:16:59,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:16:59,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:16:59,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:16:59,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:00,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:00,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:00,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:00,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:00,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:00,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:00,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:00,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:00,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:00,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:00,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:00,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:00,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:00,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:00,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:00,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:00,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:00,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:00,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:00,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:00,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:00,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:00,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:00,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:00,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:00,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:00,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:00,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:00,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:00,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:00,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:00,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:00,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:00,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:00,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:00,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:00,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:00,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:00,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:00,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:00,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:00,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:01,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:01,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:01,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:01,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:01,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:01,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:01,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:01,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:01,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:01,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:01,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:01,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:01,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:01,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:01,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:01,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:01,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:01,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:01,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:01,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:01,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:01,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:01,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:01,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:01,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:01,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:01,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:01,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:01,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:01,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:01,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:01,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:01,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:01,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:01,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:01,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:01,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:01,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:01,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:01,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:01,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:01,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:02,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:02,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:02,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:02,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:02,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:02,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:02,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:02,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:02,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:02,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:02,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:02,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:02,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:02,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:02,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:02,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:02,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:02,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:02,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:02,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:02,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:02,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:02,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:02,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:02,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:02,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:02,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:02,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:02,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:02,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:02,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:02,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:02,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:02,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:02,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:02,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:02,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:02,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:02,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:02,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:02,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:02,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:02,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:02,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:02,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:02,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:02,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:02,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:02,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:02,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:02,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:03,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:03,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:03,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:03,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:03,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:03,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:03,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:03,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:03,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:03,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:03,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:03,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:03,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:03,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:03,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:03,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:03,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:03,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:03,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:03,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:03,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:03,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:03,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:03,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:03,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:03,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:03,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:03,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:03,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:03,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:03,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:03,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:03,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:03,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:03,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:03,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:03,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:03,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:03,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:03,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:03,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:03,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:04,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:04,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:04,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:04,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:04,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:04,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:04,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:04,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:04,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:04,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:04,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:04,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:04,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:04,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:04,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:04,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:04,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:04,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:04,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:04,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:04,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:04,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:04,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:04,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:04,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:04,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:04,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:04,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:04,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:04,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:04,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:04,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:04,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:04,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:04,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:04,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:04,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:04,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:04,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:04,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:04,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:04,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:04,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:04,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:04,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:04,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:05,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:05,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:05,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:05,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:05,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:05,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:05,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:05,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:05,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:05,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:05,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:05,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:05,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:05,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:05,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:05,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:05,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:05,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:05,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:05,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:05,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:05,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:05,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:05,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:05,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:05,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:05,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:05,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:05,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:05,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:05,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:05,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:05,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:05,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:05,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:05,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:05,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:05,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:05,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:05,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:05,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:05,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:05,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:05,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:05,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:05,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:05,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:06,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:06,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:06,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:06,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:06,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:06,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:06,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:06,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:06,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:06,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:06,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:06,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:06,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:06,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:06,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:06,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:06,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:06,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:06,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:06,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:06,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:06,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:06,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:06,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:06,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:06,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:06,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:06,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:06,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:06,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:06,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:06,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:06,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:06,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:06,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:06,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:06,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:06,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:06,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:06,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:06,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:06,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:06,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:06,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:07,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:07,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:07,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:07,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:07,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:07,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:07,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:07,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:07,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:07,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:07,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:07,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:07,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:07,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:07,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:07,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:07,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:07,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:07,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:07,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:07,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:07,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:07,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:07,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:07,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:07,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:07,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:07,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:07,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:07,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:07,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:07,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:07,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:07,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:07,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:07,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:07,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:07,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:07,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:07,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:07,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:07,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:07,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:08,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:08,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:08,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:08,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:08,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:08,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:08,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:08,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:08,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:08,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:08,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:08,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:08,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:08,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:08,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:08,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:08,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:08,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:08,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:08,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:08,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:08,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:08,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:08,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:08,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:08,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:08,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:08,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:08,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:08,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:08,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:08,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:08,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:08,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:08,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:08,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:08,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:08,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:08,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:08,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:08,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:08,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:08,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:08,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:08,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:08,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:08,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:08,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:09,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:09,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:09,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:09,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:09,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:09,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:09,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:09,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:09,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:09,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:09,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:09,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:09,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:09,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:09,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:09,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:09,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:09,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:09,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:09,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:09,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:09,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:09,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:09,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:09,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:09,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:09,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:09,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:09,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:09,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:09,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:09,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:09,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:09,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:09,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:09,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:09,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:09,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:09,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:09,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:09,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:09,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:09,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:09,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:10,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:10,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:10,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:10,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:10,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:10,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:10,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:10,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:10,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:10,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:10,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:10,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:10,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:10,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:10,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:10,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:10,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:10,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:10,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:10,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:10,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:10,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:10,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:10,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:10,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:10,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:10,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:10,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:10,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:10,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:10,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:10,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:10,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:10,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:10,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:10,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:10,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:10,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:10,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:10,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:10,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:10,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:10,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:10,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:10,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:10,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:10,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:10,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:10,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:10,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:11,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:11,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:11,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:11,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:11,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:11,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:11,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:11,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:11,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:11,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:11,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:11,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:11,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:11,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:11,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:11,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:11,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:11,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:11,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:11,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:11,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:11,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:11,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:11,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:11,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:11,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:11,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:11,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:11,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:11,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:11,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:11,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:11,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:11,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:11,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:11,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:11,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:11,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:11,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:11,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:11,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:11,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:11,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:12,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:12,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:12,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:12,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:12,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:12,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:12,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:12,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:12,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:12,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:12,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:12,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:12,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:12,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:12,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:12,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:12,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:12,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:12,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:12,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:12,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:12,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:12,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:12,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:12,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:12,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:12,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:12,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:12,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:12,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:12,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:12,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:12,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:12,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:12,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:12,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:12,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:12,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:12,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:12,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:12,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:12,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:13,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:13,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:13,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:14,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:14,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:14,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:14,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:14,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:14,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:14,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:14,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:14,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:14,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:14,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:14,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:14,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:14,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:14,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:14,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:14,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:14,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:14,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:14,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:14,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:14,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:14,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:14,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:14,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:14,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:14,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:14,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:14,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:14,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:14,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:14,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:14,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:14,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:14,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:14,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:14,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:14,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:14,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:14,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:14,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:14,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:14,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:14,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:14,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:14,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:14,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:14,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:14,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:14,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:14,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:14,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:14,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:15,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:15,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:15,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:15,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:15,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:15,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:15,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:16,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:16,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:16,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:16,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:16,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:16,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:16,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:16,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:16,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:16,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:16,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:16,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:16,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:16,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:16,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:16,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:16,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:16,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:16,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:16,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:16,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:16,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:16,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:16,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:16,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:16,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:16,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:16,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:16,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:16,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:16,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:16,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:16,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:16,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:16,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:17,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:17,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:17,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:17,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:17,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:17,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:17,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:17,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:17,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:17,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:17,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:17,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:17,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:17,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:17,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:17,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:17,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:17,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:17,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:17,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:17,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:17,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:17,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:17,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:17,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:17,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:17,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:17,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:17,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:17,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:17,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:17,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:17,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:17,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:17,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:17,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:17,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:17,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:17,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:17,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:17,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:17,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:18,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:18,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:18,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:18,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:18,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:18,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:18,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:18,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:18,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:18,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:18,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:18,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:18,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:18,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:18,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:18,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:18,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:18,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:18,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:18,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:18,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:18,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:18,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:18,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:18,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:18,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:18,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:18,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:18,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:18,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:18,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:18,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:18,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:18,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:18,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:18,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:19,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:19,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:19,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:19,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:19,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:19,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:19,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:19,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:19,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:19,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:19,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:19,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:19,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:19,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:19,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:19,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:19,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:19,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:19,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:19,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:19,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:19,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:19,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:19,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:19,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:19,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:19,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:19,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:19,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:19,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:19,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:19,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:19,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:19,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:19,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:19,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:19,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:19,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:19,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:19,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:19,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:19,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:20,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:20,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:20,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:20,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:20,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:20,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:20,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:20,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:20,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:20,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:20,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:20,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:20,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:20,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:20,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:20,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:20,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:20,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:20,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:20,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:20,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:20,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:20,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:20,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:20,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:20,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:20,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:20,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:20,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:20,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:20,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:20,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:20,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:20,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:20,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:20,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:20,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:20,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:20,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:20,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:20,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:20,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:21,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:21,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:21,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:21,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:21,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:21,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:21,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:21,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:21,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:21,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:21,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:21,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:21,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:21,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:21,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:21,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:21,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:21,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:21,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:21,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:21,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:21,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:21,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:21,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:21,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:21,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:21,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:21,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:21,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:21,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:21,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:21,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:21,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:21,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:21,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:21,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:21,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:21,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:21,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:21,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:21,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:21,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:21,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:21,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:21,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:21,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:21,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:21,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:21,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:21,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:21,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:22,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:22,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:22,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:22,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:22,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:22,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:22,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:22,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:22,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:22,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:22,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:22,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:22,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:22,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:22,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:22,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:22,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:22,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:22,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:22,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:22,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:22,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:22,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:22,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:22,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:22,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:22,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:22,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:22,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:22,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:22,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:22,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:22,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:22,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:22,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:22,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:22,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:22,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:22,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:22,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:22,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:22,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:23,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:23,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:23,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:23,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:23,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:23,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:23,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:23,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:23,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:23,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:23,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:23,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:23,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:23,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:23,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:23,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:23,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:23,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:23,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:23,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:23,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:23,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:23,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:23,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:23,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:23,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:23,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:23,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:23,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:23,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:23,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:23,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:23,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:23,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:23,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:23,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:23,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:23,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:23,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:23,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:23,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:23,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:24,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:24,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:24,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:24,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:24,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:24,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:24,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:24,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:24,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:24,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:24,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:24,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:24,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:24,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:24,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:24,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:24,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:24,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:24,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:24,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:24,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:24,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:24,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:24,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:24,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:24,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:24,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:24,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:24,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:24,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:24,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:24,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:24,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:24,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:24,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:24,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:24,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:24,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:24,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:24,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:24,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:24,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:24,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:24,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:24,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:24,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:24,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:24,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:24,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:24,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:24,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:25,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:25,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:25,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:25,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:25,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:25,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:25,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:25,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:25,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:25,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:25,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:25,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:25,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:25,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:25,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:25,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:25,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:25,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:25,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:25,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:25,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:25,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:25,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:25,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:25,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:25,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:25,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:25,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:25,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:25,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:25,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:25,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:25,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:25,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:25,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:25,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:25,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:25,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:25,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:25,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:25,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:25,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:26,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:26,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:26,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:26,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:26,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:26,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:26,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:26,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:26,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:26,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:26,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:26,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:26,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:26,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:26,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:26,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:26,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:26,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:26,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:26,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:26,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:26,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:27,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:27,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:27,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:27,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:27,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:27,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:27,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:27,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:27,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:27,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:27,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:27,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:27,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:27,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:27,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:27,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:27,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:27,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:27,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:27,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:27,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:27,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:27,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:27,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:27,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:27,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:27,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:27,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:27,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:27,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:27,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:27,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:27,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:27,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:27,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:27,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:27,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:27,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:27,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:27,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:27,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:27,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:27,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:27,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:27,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:27,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:27,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:27,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:27,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:27,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:27,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:28,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:28,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:28,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:28,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:28,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:28,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:28,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:28,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:28,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:28,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:28,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:28,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:28,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:28,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:28,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:28,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:28,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:28,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:28,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:28,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:28,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:28,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:28,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:28,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:28,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:28,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:28,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:28,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:28,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:28,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:28,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:28,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:28,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:28,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:28,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:28,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:28,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:28,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:28,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:28,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:28,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:28,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:29,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:29,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:29,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:29,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:29,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:29,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:29,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:29,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:29,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:29,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:29,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:29,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:29,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:29,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:29,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:29,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:29,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:29,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:29,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:29,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:29,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:29,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:29,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:29,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:29,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:29,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:29,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:29,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:29,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:29,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:29,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:29,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:29,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:29,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:29,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:29,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:29,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:29,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:29,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:29,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:29,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:29,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:30,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:30,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:30,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:30,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:30,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:30,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:30,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:30,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:30,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:30,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:30,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:30,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:30,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:30,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:30,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:30,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:30,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:30,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:30,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:30,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:30,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:30,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:30,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:30,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:30,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:30,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:30,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:30,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:30,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:30,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:30,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:30,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:30,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:30,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:30,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:30,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:30,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:30,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:30,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:30,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:30,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:30,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:30,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:30,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:30,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:30,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:30,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:30,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:30,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:30,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:30,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:31,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:31,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:31,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:31,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:31,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:31,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:31,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:33,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:33,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:33,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:33,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:33,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:33,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:33,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:33,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:33,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:33,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:33,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:33,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:33,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:17:33,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:17:33,316 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:17:33,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:17:36,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:17:36,907 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:17:38,306 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:17:38,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:17:38,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:17:38,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:38,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:38,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:38,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:38,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:38,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:38,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:38,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:38,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:38,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:38,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:38,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:38,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:38,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:38,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:38,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:38,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:38,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:38,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:38,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:38,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:38,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:38,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:39,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:39,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:39,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:39,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:39,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:39,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:39,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:39,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:39,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:39,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:39,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:39,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:39,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:39,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:39,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:39,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:39,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:39,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:39,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:39,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:39,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:39,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:39,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:39,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:39,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:39,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:39,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:39,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:39,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:39,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:39,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:39,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:39,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:39,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:39,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:39,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:39,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:39,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:39,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:39,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:39,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:39,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:40,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:40,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:40,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:40,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:40,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:40,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:40,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:40,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:40,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:40,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:40,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:40,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:40,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:40,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:40,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:40,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:40,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:40,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:40,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:40,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:40,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:40,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:40,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:40,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:40,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:40,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:40,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:40,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:40,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:40,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:40,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:40,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:40,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:40,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:40,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:40,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:40,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:40,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:40,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:40,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:40,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:40,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:40,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:40,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:40,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:40,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:40,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:40,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:40,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:40,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:40,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:41,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:41,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:41,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:41,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:41,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:41,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:41,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:41,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:41,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:41,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:41,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:41,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:41,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:41,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:41,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:41,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:41,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:41,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:41,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:41,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:41,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:41,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:41,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:41,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:41,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:41,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:41,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:41,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:41,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:41,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:41,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:41,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:41,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:41,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:41,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:41,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:41,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:41,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:41,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:41,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:41,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:41,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:42,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:42,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:42,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:42,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:42,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:42,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:42,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:42,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:42,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:42,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:42,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:42,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:42,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:42,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:42,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:42,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:42,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:42,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:42,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:42,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:42,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:42,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:42,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:42,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:42,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:42,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:42,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:42,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:42,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:42,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:42,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:42,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:42,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:42,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:42,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:42,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:42,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:42,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:42,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:42,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:42,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:42,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:43,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:43,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:43,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:43,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:43,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:43,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:43,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:43,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:43,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:43,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:43,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:43,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:43,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:43,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:43,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:43,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:43,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:43,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:43,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:43,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:43,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:43,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:43,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:43,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:43,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:43,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:43,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:43,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:43,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:43,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:43,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:43,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:43,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:43,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:43,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:43,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:43,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:43,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:43,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:43,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:43,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:43,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:43,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:43,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:43,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:43,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:43,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:43,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:43,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:43,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:43,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:44,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:44,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:44,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:44,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:44,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:44,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:44,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:44,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:44,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:44,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:44,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:44,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:44,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:44,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:44,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:44,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:44,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:44,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:44,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:44,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:44,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:44,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:44,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:44,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:44,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:44,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:44,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:44,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:44,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:44,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:44,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:44,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:44,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:44,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:44,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:44,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:44,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:44,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:44,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:44,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:44,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:44,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:45,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:45,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:45,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:45,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:45,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:45,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:45,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:45,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:45,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:45,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:45,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:45,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:45,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:45,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:45,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:45,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:45,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:45,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:45,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:45,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:45,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:45,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:45,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:45,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:45,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:45,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:45,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:45,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:45,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:45,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:45,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:45,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:45,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:45,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:45,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:45,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:45,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:45,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:45,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:45,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:45,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:45,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:46,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:46,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:46,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:46,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:46,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:46,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:46,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:46,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:46,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:46,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:46,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:46,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:46,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:46,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:46,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:46,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:46,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:46,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:46,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:46,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:46,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:46,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:46,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:46,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:46,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:46,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:46,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:46,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:46,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:46,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:46,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:46,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:46,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:46,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:46,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:46,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:46,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:46,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:46,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:46,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:46,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:46,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:46,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:46,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:46,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:46,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:46,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:46,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:46,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:46,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:46,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:47,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:47,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:47,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:47,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:47,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:47,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:47,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:47,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:47,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:47,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:47,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:47,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:47,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:47,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:47,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:47,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:47,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:47,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:47,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:47,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:47,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:47,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:47,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:47,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:47,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:47,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:47,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:47,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:47,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:47,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:47,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:47,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:47,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:47,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:47,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:47,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:47,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:47,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:47,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:47,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:47,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:47,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:48,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:48,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:48,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:48,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:48,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:48,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:48,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:48,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:48,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:48,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:48,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:48,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:48,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:48,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:48,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:48,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:48,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:48,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:48,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:48,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:48,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:48,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:48,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:48,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:48,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:48,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:48,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:48,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:48,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:48,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:48,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:48,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:48,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:48,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:48,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:48,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:48,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:48,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:48,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:48,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:48,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:48,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:49,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:49,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:49,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:49,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:49,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:49,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:49,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:49,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:49,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:49,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:49,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:49,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:49,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:49,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:49,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:49,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:49,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:49,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:49,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:49,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:49,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:49,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:49,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:49,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:49,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:49,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:49,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:49,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:49,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:49,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:49,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:49,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:49,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:49,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:49,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:49,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:49,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:49,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:49,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:49,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:49,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:49,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:49,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:49,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:49,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:49,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:49,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:49,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:49,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:49,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:49,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:50,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:50,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:50,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:50,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:50,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:50,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:50,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:50,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:50,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:50,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:50,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:50,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:50,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:50,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:50,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:50,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:50,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:50,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:50,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:50,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:50,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:50,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:50,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:50,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:50,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:50,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:50,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:50,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:50,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:50,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:50,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:50,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:50,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:50,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:50,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:50,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:50,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:50,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:50,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:50,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:50,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:50,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:51,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:51,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:51,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:51,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:51,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:51,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:51,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:51,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:51,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:51,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:51,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:51,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:51,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:51,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:51,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:51,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:51,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:51,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:51,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:51,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:51,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:51,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:51,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:51,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:51,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:51,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:51,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:51,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:51,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:51,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:51,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:51,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:51,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:51,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:51,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:51,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:51,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:51,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:51,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:51,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:51,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:51,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:52,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:52,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:52,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:52,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:52,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:52,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:52,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:52,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:52,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:52,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:52,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:52,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:52,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:52,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:52,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:52,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:52,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:52,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:52,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:52,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:52,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:52,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:52,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:52,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:52,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:52,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:52,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:52,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:52,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:52,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:52,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:52,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:52,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:52,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:52,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:52,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:52,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:52,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:52,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:52,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:52,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:52,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:52,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:52,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:52,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:52,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:52,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:52,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:52,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:52,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:52,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:53,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:53,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:53,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:53,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:53,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:53,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:53,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:53,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:53,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:53,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:53,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:53,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:53,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:53,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:53,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:53,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:53,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:53,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:53,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:53,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:53,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:53,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:53,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:53,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:53,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:53,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:53,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:53,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:53,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:53,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:53,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:53,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:53,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:53,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:53,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:53,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:53,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:53,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:53,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:53,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:53,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:53,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:54,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:54,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:54,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:54,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:54,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:54,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:54,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:54,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:54,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:54,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:54,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:54,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:54,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:54,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:54,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:54,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:54,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:54,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:54,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:54,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:54,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:54,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:54,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:54,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:54,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:54,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:54,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:54,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:54,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:54,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:54,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:54,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:54,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:54,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:54,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:54,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:54,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:54,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:54,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:54,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:54,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:54,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:55,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:55,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:55,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:55,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:55,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:55,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:55,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:55,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:55,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:55,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:55,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:55,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:55,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:55,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:55,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:55,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:55,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:55,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:55,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:55,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:55,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:55,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:55,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:55,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:55,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:55,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:55,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:55,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:55,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:55,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:55,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:55,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:55,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:55,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:55,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:55,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:55,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:55,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:55,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:55,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:55,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:55,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:55,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:55,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:55,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:55,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:55,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:55,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:55,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:55,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:55,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:56,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:56,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:56,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:56,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:56,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:56,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:56,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:56,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:56,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:56,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:56,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:56,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:56,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:56,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:56,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:56,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:56,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:56,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:56,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:56,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:56,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:56,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:56,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:56,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:56,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:56,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:56,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:56,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:56,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:56,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:56,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:56,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:56,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:56,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:56,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:56,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:56,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:56,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:56,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:56,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:56,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:56,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:57,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:57,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:57,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:57,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:57,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:57,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:57,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:57,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:57,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:57,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:57,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:57,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:57,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:57,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:57,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:57,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:57,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:57,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:57,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:57,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:57,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:57,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:57,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:57,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:57,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:57,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:57,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:57,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:57,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:57,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:57,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:57,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:57,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:57,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:57,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:57,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:57,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:57,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:57,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:57,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:57,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:57,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:58,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:58,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:58,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:58,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:58,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:58,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:58,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:58,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:58,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:58,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:58,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:58,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:58,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:58,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:58,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:58,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:58,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:58,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:58,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:58,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:58,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:58,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:58,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:58,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:58,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:58,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:58,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:58,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:58,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:58,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:58,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:58,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:58,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:58,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:58,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:58,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:58,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:58,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:58,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:58,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:58,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:58,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:58,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:58,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:58,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:58,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:58,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:58,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:58,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:58,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:58,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:59,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:59,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:59,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:59,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:59,291 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:59,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:59,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:59,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:59,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:59,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:59,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:59,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:59,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:59,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:59,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:59,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:59,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:59,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:59,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:59,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:59,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:59,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:17:59,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:17:59,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:17:59,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:17:59,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:17:59,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:17:59,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:17:59,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:17:59,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:17:59,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:17:59,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:17:59,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:17:59,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:17:59,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:17:59,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:17:59,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:17:59,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:17:59,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:17:59,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:17:59,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:17:59,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:00,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:00,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:00,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:00,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:00,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:00,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:00,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:00,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:00,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:00,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:00,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:00,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:00,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:00,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:00,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:00,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:00,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:00,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:00,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:00,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:00,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:00,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:00,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:00,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:00,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:00,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:00,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:00,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:00,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:00,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:00,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:00,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:00,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:00,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:00,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:00,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:00,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:00,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:00,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:00,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:00,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:00,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:01,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:01,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:01,011 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:01,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:01,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:01,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:01,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:01,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:01,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:01,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:01,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:01,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:01,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:01,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:01,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:01,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:01,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:01,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:01,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:01,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:01,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:01,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:01,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:01,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:01,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:01,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:01,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:01,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:01,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:01,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:01,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:01,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:01,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:01,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:01,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:01,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:02,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:02,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:02,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:02,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:02,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:02,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:02,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:02,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:02,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:02,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:02,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:02,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:02,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:02,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:02,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:02,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:02,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:02,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:02,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:02,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:02,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:02,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:02,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:02,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:02,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:02,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:02,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:03,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:03,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:03,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:03,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:03,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:03,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:03,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:03,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:03,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:03,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:03,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:03,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:03,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:03,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:03,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:03,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:03,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:03,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:03,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:03,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:03,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:03,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:03,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:03,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:03,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:03,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:03,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:03,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:03,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:03,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:03,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:03,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:03,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:03,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:03,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:03,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:03,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:04,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:04,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:04,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:04,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:04,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:04,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:04,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:04,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:04,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:04,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:04,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:04,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:04,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:04,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:04,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:04,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:04,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:04,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:04,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:04,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:04,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:04,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:04,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:04,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:04,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:04,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:04,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:04,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:04,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:04,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:04,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:04,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:04,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:04,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:04,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:04,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:04,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:04,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:04,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:04,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:04,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:04,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:04,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:04,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:04,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:04,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:04,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:04,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:04,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:04,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:04,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:05,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:05,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:05,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:05,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:05,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:05,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:05,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:05,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:05,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:05,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:05,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:05,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:05,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:05,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:05,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:05,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:05,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:05,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:05,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:05,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:05,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:05,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:06,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:06,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:06,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:06,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:06,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:06,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:06,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:06,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:06,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:06,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:06,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:06,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:06,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:06,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:06,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:06,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:06,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:06,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:06,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:06,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:06,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:06,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:06,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:06,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:06,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:06,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:06,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:06,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:06,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:06,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:06,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:06,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:06,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:06,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:06,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:06,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:06,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:06,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:06,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:06,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:06,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:06,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:07,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:07,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:07,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:07,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:07,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:07,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:07,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:07,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:07,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:07,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:07,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:07,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:07,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:07,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:07,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:07,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:07,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:07,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:07,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:07,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:07,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:07,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:07,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:07,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:07,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:07,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:07,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:07,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:07,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:07,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:07,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:07,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:07,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:07,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:07,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:07,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:07,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:07,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:07,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:07,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:07,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:07,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:07,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:07,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:07,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:07,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:07,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:07,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:08,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:08,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:08,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:08,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:08,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:08,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:08,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:08,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:08,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:08,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:08,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:08,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:08,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:08,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:08,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:08,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:08,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:08,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:08,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:08,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:08,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:08,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:08,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:08,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:08,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:08,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:08,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:08,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:08,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:08,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:08,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:08,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:08,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:08,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:08,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:08,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:08,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:08,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:08,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:08,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:08,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:08,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:08,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:08,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:08,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:09,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:09,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:09,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:09,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:09,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:09,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:09,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:09,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:09,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:09,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:09,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:09,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:09,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:09,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:09,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:09,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:09,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:09,288 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:09,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:09,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:09,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:09,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:09,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:09,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:09,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:10,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:10,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:10,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:10,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:10,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:10,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:10,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:10,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:10,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:10,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:10,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:10,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:10,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:10,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:10,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:10,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:10,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:10,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:10,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:10,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:10,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:10,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:10,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:10,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:10,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:10,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:10,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:10,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:10,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:10,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:10,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:10,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:10,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:10,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:10,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:10,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:10,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:11,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:11,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:11,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:11,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:11,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:11,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:11,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:11,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:11,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:11,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:11,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:11,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:11,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:11,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:11,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:11,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:11,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:11,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:11,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:11,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:11,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:11,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:11,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:11,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:11,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:11,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:11,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:11,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:11,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:11,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:11,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:11,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:11,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:11,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:11,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:11,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:11,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:11,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:11,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:11,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:11,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:11,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:11,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:11,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:11,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:11,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:11,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:11,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:11,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:11,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:11,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:12,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:12,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:12,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:12,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:12,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:12,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:12,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:12,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:12,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:12,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:12,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:12,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:12,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:12,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:12,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:12,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:12,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:12,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:12,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:12,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:12,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:12,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:12,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:12,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:12,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:12,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:12,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:12,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:12,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:12,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:12,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:12,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:12,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:12,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:12,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:12,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:12,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:12,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:12,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:12,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:12,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:12,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:13,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:13,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:13,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:13,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:13,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:13,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:13,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:13,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:13,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:13,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:13,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:13,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:13,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:13,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:13,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:13,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:13,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:13,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:13,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:13,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:13,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:13,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:14,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:14,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:14,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:14,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:14,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:14,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:14,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:14,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:14,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:14,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:14,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:14,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:14,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:14,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:14,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:14,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:14,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:14,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:14,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:14,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:14,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:14,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:14,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:14,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:14,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:14,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:14,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:14,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:14,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:14,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:14,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:14,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:14,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:14,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:14,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:14,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:14,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:14,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:14,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:14,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:14,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:14,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:14,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:14,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:14,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:14,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:14,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:14,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:14,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:14,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:14,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:15,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:15,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:15,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:15,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:15,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:15,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:15,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:15,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:15,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:15,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:15,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:15,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:15,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:15,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:15,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:15,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:15,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:15,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:15,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:15,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:15,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:15,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:15,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:15,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:15,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:15,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:15,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:15,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:15,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:15,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:15,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:15,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:15,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:15,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:15,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:15,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:15,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:15,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:15,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:15,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:15,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:15,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:16,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:16,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:16,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:16,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:16,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:16,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:16,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:16,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:16,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:16,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:16,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:16,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:16,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:16,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:16,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:16,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:16,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:16,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:16,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:16,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:16,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:16,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:16,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:16,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:16,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:16,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:16,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:16,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:16,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:16,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:16,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:16,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:16,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:16,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:16,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:16,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:16,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:16,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:16,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:16,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:16,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:16,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:17,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:17,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:17,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:17,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:17,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:17,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:17,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:17,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:17,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:17,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:17,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:17,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:17,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:17,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:17,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:17,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:17,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:17,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:17,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:17,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:17,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:17,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:17,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:17,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:17,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:17,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:17,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:17,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:17,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:17,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:17,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:17,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:17,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:17,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:17,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:17,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:17,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:17,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:17,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:17,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:17,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:17,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:17,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:17,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:17,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:17,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:17,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:17,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:17,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:17,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:17,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:18,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:18,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:18,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:18,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:18,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:18,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:18,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:18,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:18,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:18,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:18,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:18,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:18,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:18,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:18,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:18,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:18,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:18,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:18,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:18,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:18,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:18,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:18,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:18,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:18,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:18,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:18,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:18,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:18,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:18,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:18,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:18,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:18,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:18,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:18,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:18,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:18,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:18,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:18,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:18,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:18,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:18,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:19,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:19,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:19,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:19,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:19,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:19,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:19,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:19,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:19,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:19,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:19,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:19,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:19,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:19,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:19,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:19,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:19,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:19,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:19,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:19,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:19,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:19,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:19,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:19,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:19,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:19,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:19,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:19,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:19,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:19,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:19,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:19,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:19,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:19,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:19,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:19,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:19,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:19,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:19,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:19,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:19,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:19,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:20,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:20,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:20,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:20,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:20,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:20,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:20,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:20,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:20,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:20,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:20,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:20,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:20,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:20,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:20,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:20,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:20,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:20,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:20,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:20,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:20,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:20,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:20,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:20,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:20,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:20,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:20,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:20,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:20,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:20,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:20,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:20,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:20,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:20,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:20,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:20,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:21,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:21,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:21,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:21,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:21,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:21,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:21,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:21,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:21,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:21,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:21,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:21,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:21,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:21,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:21,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:21,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:21,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:21,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:21,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:21,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:21,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:21,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:21,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:21,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:21,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:21,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:21,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:21,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:21,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:21,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:21,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:21,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:21,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:21,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:21,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:21,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:21,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:21,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:21,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:21,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:21,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:21,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:22,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:22,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:22,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:22,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:22,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:22,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:22,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:22,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:22,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:22,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:22,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:22,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:22,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:22,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:22,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:22,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:22,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:22,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:22,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:22,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:22,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:22,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:22,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:22,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:22,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:23,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:23,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:23,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:23,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:23,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:23,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:23,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:23,155 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:23,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:23,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:23,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:23,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:23,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:23,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:23,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:23,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:23,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:23,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:23,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:23,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:24,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:24,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:24,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:24,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:24,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:24,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:24,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:24,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:24,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:24,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:24,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:24,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:24,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:24,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:24,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:24,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:24,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:24,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:24,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:24,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:24,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:24,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:24,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:24,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:24,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:24,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:24,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:24,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:24,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:24,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:24,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:24,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:24,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:25,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:25,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:25,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:25,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:25,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:25,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:25,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:25,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:25,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:25,861 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:25,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:25,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:25,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:25,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:25,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:25,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:25,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:25,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:25,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:25,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:18:25,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:18:25,926 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:18:25,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:18:29,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:18:29,660 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:18:31,048 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:18:31,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:18:31,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:18:31,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:31,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:31,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:31,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:31,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:31,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:31,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:31,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:31,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:31,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:31,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:31,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:31,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:31,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:31,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:31,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:31,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:31,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:31,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:31,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:31,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:31,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:31,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:31,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:31,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:31,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:31,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:31,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:31,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:31,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:31,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:31,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:31,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:31,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:31,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:31,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:31,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:31,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:31,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:31,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:31,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:32,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:32,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:32,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:32,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:32,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:32,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:32,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:32,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:32,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:32,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:32,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:32,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:32,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:32,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:32,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:32,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:32,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:32,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:32,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:32,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:32,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:32,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:32,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:32,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:32,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:32,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:32,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:32,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:32,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:32,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:32,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:32,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:32,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:32,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:32,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:32,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:32,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:32,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:32,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:32,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:32,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:32,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:33,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:33,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:33,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:33,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:33,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:33,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:33,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:33,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:33,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:33,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:33,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:33,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:33,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:33,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:33,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:33,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:33,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:33,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:33,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:33,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:33,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:33,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:33,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:33,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:33,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:33,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:33,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:33,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:33,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:33,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:33,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:33,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:33,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:33,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:33,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:33,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:33,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:33,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:33,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:33,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:33,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:33,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:34,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:34,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:34,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:34,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:34,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:34,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:34,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:34,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:34,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:34,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:34,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:34,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:34,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:34,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:34,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:34,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:34,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:34,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:34,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:34,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:34,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:34,436 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:34,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:34,439 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:34,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:34,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:34,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:34,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:34,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:34,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:34,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:34,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:34,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:34,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:34,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:34,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:34,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:34,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:34,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:34,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:34,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:34,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:34,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:34,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:34,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:34,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:34,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:34,863 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:34,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:34,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:34,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:34,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:35,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:35,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:35,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:35,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:35,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:35,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:35,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:35,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:35,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:35,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:35,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:35,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:35,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:35,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:35,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:35,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:35,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:35,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:35,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:35,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:35,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:35,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:35,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:35,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:35,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:35,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:35,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:35,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:35,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:35,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:35,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:35,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:35,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:35,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:35,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:35,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:35,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:35,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:35,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:35,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:35,858 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:35,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:35,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:36,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:36,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:36,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:36,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:36,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:36,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:36,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:36,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:36,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:36,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:36,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:36,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:36,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:36,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:36,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:36,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:36,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:36,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:36,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:36,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:36,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:36,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:36,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:36,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:36,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:36,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:36,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:36,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:36,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:36,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:36,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:36,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:36,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:36,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:36,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:36,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:36,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:36,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:36,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:36,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:36,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:36,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:36,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:36,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:36,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:36,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:36,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:36,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:37,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:37,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:37,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:37,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:37,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:37,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:37,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:37,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:37,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:37,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:37,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:37,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:37,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:37,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:37,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:37,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:37,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:37,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:37,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:37,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:37,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:37,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:37,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:37,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:37,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:37,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:37,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:37,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:37,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:37,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:37,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:37,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:37,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:37,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:37,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:37,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:37,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:37,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:37,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:37,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:37,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:37,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:37,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:37,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:37,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:38,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:38,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:38,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:38,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:38,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:38,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:38,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:38,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:38,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:38,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:38,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:38,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:38,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:38,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:38,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:38,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:38,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:38,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:38,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:38,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:38,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:38,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:38,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:38,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:38,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:38,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:38,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:38,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:38,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:38,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:38,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:38,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:38,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:38,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:38,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:38,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:38,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:38,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:38,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:38,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:38,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:38,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:39,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:39,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:39,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:39,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:39,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:39,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:39,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:39,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:39,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:39,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:39,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:39,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:39,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:39,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:39,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:39,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:39,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:39,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:39,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:39,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:39,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:39,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:39,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:39,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:39,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:39,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:39,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:39,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:39,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:39,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:39,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:39,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:39,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:39,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:39,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:39,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:39,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:39,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:39,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:39,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:39,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:39,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:39,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:39,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:39,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:39,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:39,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:39,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:39,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:39,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:39,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:40,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:40,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:40,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:40,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:40,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:40,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:40,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:40,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:40,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:40,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:40,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:40,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:40,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:40,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:40,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:40,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:40,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:40,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:40,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:40,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:40,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:40,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:40,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:40,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:40,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:40,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:40,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:40,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:40,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:40,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:40,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:40,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:40,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:40,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:40,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:40,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:40,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:40,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:40,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:40,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:40,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:40,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:41,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:41,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:41,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:41,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:41,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:41,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:41,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:41,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:41,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:41,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:41,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:41,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:41,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:41,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:41,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:41,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:41,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:41,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:41,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:41,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:41,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:41,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:41,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:41,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:41,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:41,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:41,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:41,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:41,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:41,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:41,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:41,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:41,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:41,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:41,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:41,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:41,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:41,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:41,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:41,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:41,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:41,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:42,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:42,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:42,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:42,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:42,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:42,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:42,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:42,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:42,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:42,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:42,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:42,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:42,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:42,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:42,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:42,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:42,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:42,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:42,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:42,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:42,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:42,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:42,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:42,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:42,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:42,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:42,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:42,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:42,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:42,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:42,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:42,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:42,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:42,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:42,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:42,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:42,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:42,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:42,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:42,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:42,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:42,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:42,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:42,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:42,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:42,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:42,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:42,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:42,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:42,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:42,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:43,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:43,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:43,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:43,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:43,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:43,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:43,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:43,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:43,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:43,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:43,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:43,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:43,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:43,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:43,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:43,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:43,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:43,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:43,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:43,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:43,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:43,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:43,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:43,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:43,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:43,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:43,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:43,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:43,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:43,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:43,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:43,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:43,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:43,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:43,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:43,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:43,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:43,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:43,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:43,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:43,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:43,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:44,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:44,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:44,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:44,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:44,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:44,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:44,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:44,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:44,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:44,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:44,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:44,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:44,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:44,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:44,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:44,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:44,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:44,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:44,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:44,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:44,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:44,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:44,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:44,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:44,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:44,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:44,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:44,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:44,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:44,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:44,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:44,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:44,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:44,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:44,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:44,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:44,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:44,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:44,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:44,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:44,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:44,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:45,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:45,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:45,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:45,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:45,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:45,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:45,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:45,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:45,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:45,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:45,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:45,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:45,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:45,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:45,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:45,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:45,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:45,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:45,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:45,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:45,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:45,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:45,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:45,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:45,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:45,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:45,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:45,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:45,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:45,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:45,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:45,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:45,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:45,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:45,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:45,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:45,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:45,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:45,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:45,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:45,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:45,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:45,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:45,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:45,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:45,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:45,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:45,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:45,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:45,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:45,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:46,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:46,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:46,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:46,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:46,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:46,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:46,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:46,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:46,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:46,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:46,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:46,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:46,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:46,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:46,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:46,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:46,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:46,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:46,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:46,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:46,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:46,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:46,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:46,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:46,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:46,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:46,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:46,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:46,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:46,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:46,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:46,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:46,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:46,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:46,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:46,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:46,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:46,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:46,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:46,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:46,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:46,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:47,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:47,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:47,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:47,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:47,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:47,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:47,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:47,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:47,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:47,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:47,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:47,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:47,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:47,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:47,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:47,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:47,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:47,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:47,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:47,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:47,452 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:47,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:47,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:47,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:47,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:47,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:47,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:47,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:47,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:47,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:47,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:47,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:47,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:47,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:47,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:47,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:47,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:47,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:47,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:47,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:47,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:47,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:48,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:48,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:48,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:48,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:48,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:48,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:48,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:48,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:48,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:48,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:48,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:48,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:48,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:48,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:48,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:48,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:48,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:48,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:48,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:48,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:48,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:48,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:48,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:48,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:48,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:48,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:48,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:48,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:48,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:48,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:48,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:48,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:48,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:48,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:48,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:48,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:48,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:48,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:48,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:48,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:48,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:48,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:48,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:48,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:48,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:48,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:48,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:48,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:48,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:48,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:48,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:49,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:49,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:49,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:49,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:49,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:49,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:49,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:49,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:49,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:49,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:49,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:49,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:49,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:49,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:49,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:49,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:49,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:49,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:49,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:49,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:49,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:49,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:49,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:49,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:49,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:49,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:49,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:49,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:49,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:49,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:49,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:49,728 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:49,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:49,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:49,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:49,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:49,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:49,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:49,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:49,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:49,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:49,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:50,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:50,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:50,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:50,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:50,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:50,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:50,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:50,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:50,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:50,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:50,157 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:50,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:50,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:50,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:50,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:50,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:50,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:50,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:50,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:50,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:50,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:50,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:50,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:50,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:50,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:50,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:50,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:50,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:50,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:50,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:50,582 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:50,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:50,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:50,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:50,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:50,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:50,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:50,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:50,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:50,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:50,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:50,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:50,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:50,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:51,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:51,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:51,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:51,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:51,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:51,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:51,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:51,011 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:51,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:51,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:51,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:51,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:51,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:51,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:51,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:51,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:51,420 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:51,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:51,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:51,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:51,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:51,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:51,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:51,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:51,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:51,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:51,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:51,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:51,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:51,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:51,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:51,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:51,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:51,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:51,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:51,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:51,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:51,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:51,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:51,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:51,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:51,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:51,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:51,859 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:51,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:51,862 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:51,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:51,866 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:51,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:52,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:52,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:52,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:52,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:52,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:52,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:52,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:52,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:52,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:52,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:52,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:52,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:52,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:52,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:52,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:52,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:52,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:52,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:52,293 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:52,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:52,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:52,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:52,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:52,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:52,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:52,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:52,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:52,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:52,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:52,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:52,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:52,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:52,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:52,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:52,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:52,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:52,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:52,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:52,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:52,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:52,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:52,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:52,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:52,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:53,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:53,130 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:53,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:53,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:53,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:53,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:53,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:53,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:53,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:53,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:53,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:53,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:53,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:53,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:53,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:53,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:53,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:53,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:53,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:53,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:53,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:53,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:53,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:53,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:53,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:53,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:53,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:53,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:53,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:53,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:53,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:53,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:53,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:53,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:53,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:53,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:53,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:53,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:53,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:53,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:53,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:53,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:53,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:53,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:53,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:53,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:53,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:54,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:54,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:54,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:54,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:54,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:54,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:54,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:54,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:54,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:54,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:54,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:54,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:54,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:54,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:54,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:54,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:54,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:54,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:54,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:54,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:54,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:54,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:54,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:54,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:54,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:54,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:54,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:54,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:54,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:54,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:54,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:54,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:54,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:54,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:54,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:54,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:54,844 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:54,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:54,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:54,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:54,850 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:54,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:54,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:54,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:54,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:54,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:55,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:55,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:55,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:55,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:55,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:55,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:55,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:55,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:55,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:55,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:55,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:55,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:55,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:55,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:55,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:55,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:55,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:55,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:55,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:55,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:55,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:55,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:55,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:55,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:55,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:56,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:56,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:56,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:56,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:56,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:56,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:56,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:56,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:56,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:56,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:56,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:56,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:56,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:56,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:56,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:56,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:56,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:56,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:56,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:56,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:56,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:56,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:56,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:56,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:56,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:56,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:56,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:56,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:56,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:56,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:56,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:56,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:56,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:56,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:56,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:56,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:56,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:57,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:57,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:57,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:57,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:57,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:57,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:57,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:57,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:57,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:57,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:57,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:57,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:57,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:57,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:57,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:57,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:57,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:57,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:57,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:57,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:57,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:57,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:57,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:57,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:57,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:57,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:57,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:57,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:57,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:57,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:57,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:57,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:57,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:57,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:57,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:57,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:57,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:57,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:58,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:58,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:58,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:58,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:58,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:58,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:58,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:58,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:58,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:58,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:58,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:58,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:58,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:58,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:58,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:58,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:58,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:58,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:58,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:58,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:59,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:59,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:59,274 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:59,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:59,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:59,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:59,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:59,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:59,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:59,285 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:59,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:59,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:59,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:59,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:59,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:59,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:59,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:18:59,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:18:59,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:18:59,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:18:59,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:18:59,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:18:59,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:18:59,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:18:59,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:18:59,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:18:59,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:18:59,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:18:59,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:18:59,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:18:59,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:18:59,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:18:59,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:18:59,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:18:59,853 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:18:59,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:18:59,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:00,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:00,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:00,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:00,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:00,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:00,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:00,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:00,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:00,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:00,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:00,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:00,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:00,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:00,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:00,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:00,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:00,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:00,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:00,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:00,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:00,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:00,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:00,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:00,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:00,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:00,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:00,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:00,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:00,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:00,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:00,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:00,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:00,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:00,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:00,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:00,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:00,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:00,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:00,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:00,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:00,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:00,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:00,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:00,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:00,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:00,994 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:00,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:00,997 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:00,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:01,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:01,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:01,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:01,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:01,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:01,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:01,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:01,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:01,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:01,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:01,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:01,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:01,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:01,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:01,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:01,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:01,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:01,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:01,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:01,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:01,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:01,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:01,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:01,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:01,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:01,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:01,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:01,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:01,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:02,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:02,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:02,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:02,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:02,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:02,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:02,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:02,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:02,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:02,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:02,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:02,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:02,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:02,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:02,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:02,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:02,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:02,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:02,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:02,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:02,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:02,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:02,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:02,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:02,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:02,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:02,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:02,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:02,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:02,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:02,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:02,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:02,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:02,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:02,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:03,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:03,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:03,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:03,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:03,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:03,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:03,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:03,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:03,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:03,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:03,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:03,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:03,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:03,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:03,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:03,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:03,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:03,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:03,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:03,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:03,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:03,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:03,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:03,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:03,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:03,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:03,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:03,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:03,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:03,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:03,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:03,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:03,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:03,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:03,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:03,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:03,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:03,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:03,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:03,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:03,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:03,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:04,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:04,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:04,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:04,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:04,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:04,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:04,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:04,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:04,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:04,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:04,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:04,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:04,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:04,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:04,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:04,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:04,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:04,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:04,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:04,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:04,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:04,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:04,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:04,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:04,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:04,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:04,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:04,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:04,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:04,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:04,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:04,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:04,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:04,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:04,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:04,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:04,875 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:04,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:05,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:05,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:05,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:05,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:05,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:05,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:05,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:05,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:05,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:05,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:05,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:05,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:05,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:05,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:05,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:05,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:05,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:05,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:05,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:05,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:05,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:05,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:05,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:05,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:05,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:05,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:05,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:05,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:05,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:05,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:05,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:05,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:05,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:05,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:05,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:06,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:06,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:06,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:06,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:06,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:06,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:06,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:06,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:06,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:06,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:06,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:06,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:06,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:06,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:06,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:06,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:06,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:06,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:06,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:06,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:06,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:06,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:06,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:06,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:06,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:06,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:06,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:06,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:06,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:06,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:06,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:06,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:06,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:06,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:06,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:06,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:06,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:06,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:06,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:06,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:06,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:06,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:07,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:07,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:07,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:07,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:07,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:07,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:07,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:07,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:07,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:07,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:07,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:07,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:07,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:07,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:07,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:07,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:07,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:07,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:07,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:07,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:07,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:07,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:07,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:07,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:07,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:07,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:07,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:07,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:07,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:07,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:07,980 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:07,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:07,983 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:07,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:07,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:07,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:08,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:08,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:08,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:08,256 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:08,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:08,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:08,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:08,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:08,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:08,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:08,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:08,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:08,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:08,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:08,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:08,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:08,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:08,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:08,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:08,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:09,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:09,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:09,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:09,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:09,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:09,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:09,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:09,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:09,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:09,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:09,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:09,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:09,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:09,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:09,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:09,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:09,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:09,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:09,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:09,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:09,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:09,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:09,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:09,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:09,722 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:09,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:09,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:09,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:09,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:09,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:09,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:09,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:09,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:09,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:09,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:09,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:09,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:09,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:09,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:09,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:09,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:09,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:10,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:10,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:10,150 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:10,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:10,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:10,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:10,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:10,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:10,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:10,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:10,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:10,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:10,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:10,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:10,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:10,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:10,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:10,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:10,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:10,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:10,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:10,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:10,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:10,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:10,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:10,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:10,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:10,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:10,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:10,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:10,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:10,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:10,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:10,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:10,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:10,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:10,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:10,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:10,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:10,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:10,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:10,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:11,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:11,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:11,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:11,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:11,016 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:11,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:11,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:11,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:11,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:11,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:11,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:11,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:11,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:11,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:11,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:11,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:11,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:11,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:11,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:11,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:11,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:11,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:11,433 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:11,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:11,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:11,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:11,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:11,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:11,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:11,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:11,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:11,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:11,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:11,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:11,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:11,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:12,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:12,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:12,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:12,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:12,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:12,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:12,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:12,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:12,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:12,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:12,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:12,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:12,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:12,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:12,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:12,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:12,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:12,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:12,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:12,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:12,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:12,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:12,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:12,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:12,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:12,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:12,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:12,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:12,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:12,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:12,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:12,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:12,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:12,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:12,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:12,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:12,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:12,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:12,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:12,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:12,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:12,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:13,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:13,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:13,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:13,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:13,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:13,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:13,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:13,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:13,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:13,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:13,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:13,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:13,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:13,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:13,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:13,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:13,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:13,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:13,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:13,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:13,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:13,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:13,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:13,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:13,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:13,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:13,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:13,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:13,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:13,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:13,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:13,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:13,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:13,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:13,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:13,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:13,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:13,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:13,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:13,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:13,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:13,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:14,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:14,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:14,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:14,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:14,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:14,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:14,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:14,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:14,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:14,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:14,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:14,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:14,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:14,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:14,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:14,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:14,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:14,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:14,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:14,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:14,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:14,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:14,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:14,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:14,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:14,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:14,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:14,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:14,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:14,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:14,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:14,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:14,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:14,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:14,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:14,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:14,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:14,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:14,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:14,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:14,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:14,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:14,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:14,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:14,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:14,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:14,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:14,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:14,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:14,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:14,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:15,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:15,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:15,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:15,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:15,298 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:15,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:15,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:15,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:15,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:15,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:15,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:15,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:15,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:15,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:15,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:15,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:15,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:15,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:15,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:15,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:15,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:15,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:15,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:15,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:15,724 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:15,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:15,727 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:15,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:15,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:15,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:15,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:15,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:15,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:15,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:15,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:15,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:15,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:15,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:15,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:15,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:15,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:15,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:16,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:16,019 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:16,151 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:16,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:16,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:16,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:16,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:16,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:16,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:16,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:16,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:16,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:16,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:16,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:16,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:16,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:16,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:16,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:16,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:16,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:16,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:16,446 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:16,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:16,579 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:16,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:17,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:17,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:17,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:17,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:17,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:17,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:17,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:17,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:17,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:17,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:17,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:17,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:17,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:17,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:17,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:17,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:17,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:17,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:17,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:17,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:17,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:17,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:17,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:17,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:17,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:17,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:17,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:17,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:17,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:17,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:17,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:17,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:17,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:17,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:17,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:17,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:17,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:17,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:17,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:17,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:18,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:18,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:18,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:18,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:18,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:18,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:18,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:18,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:18,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:18,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:18,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:18,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:18,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:19:18,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:19:18,459 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:19:18,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:19:22,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:19:22,032 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:19:23,434 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:19:23,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:19:23,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:19:23,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:23,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:23,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:23,739 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:23,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:23,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:23,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:23,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:23,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:23,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:23,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:23,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:23,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:23,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:23,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:23,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:23,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:23,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:23,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:23,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:23,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:24,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:24,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:24,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:24,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:24,300 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:24,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:24,303 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:24,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:24,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:24,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:24,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:24,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:24,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:24,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:24,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:24,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:24,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:24,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:24,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:24,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:24,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:24,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:24,595 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:24,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:24,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:24,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:24,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:24,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:24,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:24,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:24,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:24,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:24,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:24,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:24,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:24,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:24,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:24,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:24,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:24,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:24,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:24,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:25,022 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:25,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:25,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:25,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:25,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:25,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:25,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:25,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:25,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:25,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:25,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:25,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:25,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:25,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:25,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:25,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:25,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:25,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:25,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:25,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:25,449 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:25,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:25,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:25,585 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:25,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:25,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:25,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:25,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:25,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:25,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:25,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:25,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:25,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:25,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:25,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:25,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:25,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:25,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:25,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:25,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:25,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:25,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:26,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:26,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:26,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:26,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:26,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:26,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:26,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:26,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:26,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:26,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:26,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:26,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:26,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:26,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:26,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:26,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:26,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:26,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:26,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:26,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:26,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:26,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:26,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:26,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:26,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:26,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:26,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:26,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:26,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:26,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:26,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:26,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:26,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:26,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:26,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:26,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:26,872 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:26,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:26,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:26,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:26,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:26,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:26,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:26,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:26,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:26,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:26,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:26,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:26,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:26,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:26,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:27,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:27,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:27,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:27,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:27,302 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:27,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:27,305 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:27,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:27,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:27,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:27,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:27,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:27,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:27,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:27,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:27,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:27,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:27,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:27,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:27,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:27,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:27,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:27,598 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:27,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:27,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:27,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:27,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:27,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:27,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:27,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:27,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:27,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:27,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:27,751 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:27,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:27,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:27,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:27,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:27,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:27,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:27,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:27,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:28,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:28,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:28,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:28,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:28,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:28,169 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:28,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:28,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:28,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:28,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:28,178 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:28,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:28,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:28,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:28,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:28,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:28,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:28,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:28,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:28,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:28,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:28,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:28,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:28,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:28,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:28,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:28,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:28,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:28,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:28,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:28,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:28,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:28,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:28,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:28,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:28,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:28,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:28,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:28,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:28,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:28,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:28,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,017 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:29,018 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:29,024 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:29,026 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:29,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:29,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:29,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:29,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:29,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:29,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:29,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:29,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:29,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:29,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:29,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:29,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:29,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:29,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:29,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,442 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,444 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:29,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:29,450 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:29,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:29,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:29,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:29,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:29,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:29,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:29,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:29,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:29,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:29,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:29,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:29,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:29,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:29,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:29,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:29,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:29,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:29,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:29,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:29,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:29,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:29,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:29,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:29,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:29,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:29,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:29,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:29,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:29,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:29,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:29,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:30,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:30,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:30,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:30,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:30,295 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:30,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:30,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:30,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:30,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:30,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:30,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:30,311 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:30,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:30,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:30,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:30,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:30,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:30,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:30,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:30,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:30,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:30,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:30,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:30,588 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:30,718 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:30,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:30,721 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:30,726 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:30,729 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:30,731 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:30,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:30,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:30,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:30,737 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:30,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:30,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:30,741 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:30,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:30,744 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:30,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:30,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:30,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:31,008 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:31,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:31,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:31,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:31,152 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:31,153 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:31,154 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:31,156 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:31,158 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:31,159 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:31,160 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:31,162 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:31,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:31,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:31,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:31,168 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:31,299 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:31,301 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:31,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:31,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:31,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:31,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:31,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:31,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:31,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:31,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:31,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:31,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:31,584 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:31,586 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:31,587 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:31,589 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:31,590 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:31,592 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:31,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:31,725 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:31,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:31,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:31,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:31,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:31,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:31,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:32,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:32,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:32,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:32,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:32,006 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:32,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:32,009 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:32,010 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:32,012 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:32,013 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:32,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:32,148 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:32,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:32,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:32,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:32,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:32,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:32,418 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:32,423 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:32,426 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:32,428 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:32,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:32,431 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:32,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:32,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:32,435 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:32,437 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:32,438 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:32,440 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:32,441 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:32,443 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:32,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:32,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:32,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:33,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:33,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:33,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:33,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:33,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:33,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:33,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:33,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:33,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:33,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:33,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:33,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:33,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:33,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:33,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:33,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:33,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:33,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:33,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:34,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:34,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:34,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:34,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:34,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:34,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:34,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:34,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:34,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:34,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:34,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:34,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:34,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:34,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:34,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:34,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:34,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:34,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:34,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:34,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:34,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:34,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:34,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:34,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:34,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:34,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:34,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:34,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:34,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:34,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:34,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:34,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:34,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:34,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:34,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:34,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:34,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:34,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:34,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:34,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:34,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:34,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:35,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:35,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:35,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:35,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:35,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:35,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:35,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:35,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:35,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:35,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:35,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:35,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:35,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:35,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:35,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:35,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:35,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:35,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:35,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:35,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:35,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:35,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:35,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:35,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:35,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:35,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:35,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:35,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:35,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:35,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:35,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:35,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:35,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:35,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:35,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:35,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:35,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:35,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:35,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:35,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:35,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:35,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:35,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:35,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:35,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:35,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:35,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:35,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:35,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:35,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:35,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:36,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:36,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:36,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:36,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:36,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:36,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:36,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:36,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:36,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:36,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:36,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:36,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:36,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:36,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:36,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:36,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:36,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:36,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:36,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:36,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:36,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:36,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:36,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:36,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:36,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:36,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:36,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:36,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:36,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:36,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:36,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:36,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:36,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:36,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:36,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:36,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:36,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:36,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:36,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:36,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:36,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:36,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:37,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:37,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:37,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:37,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:37,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:37,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:37,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:37,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:37,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:37,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:37,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:37,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:37,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:37,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:37,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:37,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:37,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:37,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:37,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:37,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:37,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:37,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:37,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:37,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:37,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:37,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:37,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:37,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:37,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:37,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:37,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:37,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:37,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:37,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:37,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:37,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:37,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:37,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:37,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:37,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:37,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:37,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:38,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:38,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:38,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:38,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:38,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:38,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:38,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:38,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:38,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:38,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:38,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:38,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:38,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:38,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:38,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:38,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:38,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:38,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:38,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:38,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:38,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:38,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:38,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:38,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:38,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:38,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:38,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:38,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:38,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:38,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:38,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:38,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:38,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:38,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:38,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:38,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:38,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:38,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:38,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:38,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:38,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:38,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:38,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:38,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:38,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:38,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:38,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:38,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:38,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:38,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:38,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:39,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:39,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:39,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:39,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:39,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:39,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:39,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:39,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:39,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:39,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:39,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:39,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:39,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:39,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:39,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:39,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:39,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:39,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:39,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:39,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:39,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:39,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:39,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:39,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:39,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:39,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:39,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:39,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:39,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:39,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:39,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:39,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:39,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:39,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:39,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:39,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:39,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:39,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:39,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:39,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:39,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:39,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:40,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:40,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:40,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:40,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:40,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:40,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:40,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:40,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:40,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:40,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:40,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:40,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:40,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:40,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:40,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:40,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:40,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:40,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:40,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:40,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:40,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:40,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:40,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:40,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:40,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:40,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:40,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:40,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:40,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:40,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:40,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:40,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:40,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:40,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:40,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:40,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:40,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:40,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:40,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:40,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:40,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:40,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:41,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:41,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:41,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:41,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:41,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:41,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:41,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:41,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:41,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:41,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:41,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:41,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:41,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:41,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:41,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:41,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:41,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:41,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:41,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:41,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:41,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:41,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:41,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:41,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:41,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:41,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:41,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:41,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:41,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:41,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:41,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:41,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:41,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:41,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:41,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:41,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:41,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:41,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:41,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:41,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:41,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:41,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:41,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:41,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:41,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:41,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:41,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:41,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:41,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:41,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:41,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:42,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:42,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:42,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:42,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:42,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:42,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:42,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:42,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:42,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:42,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:42,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:42,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:42,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:42,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:42,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:42,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:42,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:42,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:42,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:42,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:42,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:42,524 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:42,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:42,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:42,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:42,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:42,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:42,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:42,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:42,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:42,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:42,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:42,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:42,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:42,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:42,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:42,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:42,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:42,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:42,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:42,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:42,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:43,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:43,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:43,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:43,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:43,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:43,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:43,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:43,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:43,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:43,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:43,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:43,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:43,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:43,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:43,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:43,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:43,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:43,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:43,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:43,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:43,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:43,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:43,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:43,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:43,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:43,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:43,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:43,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:43,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:43,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:43,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:43,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:43,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:43,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:43,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:43,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:43,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:43,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:43,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:43,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:43,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:43,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:44,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:44,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:44,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:44,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:44,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:44,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:44,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:44,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:44,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:44,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:44,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:44,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:44,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:44,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:44,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:44,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:44,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:44,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:44,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:44,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:44,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:44,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:44,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:44,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:44,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:44,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:44,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:44,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:44,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:44,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:44,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:44,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:44,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:44,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:44,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:44,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:44,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:44,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:44,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:44,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:44,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:44,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:44,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:44,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:44,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:44,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:44,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:44,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:44,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:44,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:44,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:45,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:45,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:45,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:45,217 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:45,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:45,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:45,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:45,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:45,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:45,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:45,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:45,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:45,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:45,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:45,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:45,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:45,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:45,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:45,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:45,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:45,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:45,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:45,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:45,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:45,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:45,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:45,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:45,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:45,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:45,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:45,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:45,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:45,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:45,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:45,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:45,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:45,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:45,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:45,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:45,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:45,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:45,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:46,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:46,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:46,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:46,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:46,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:46,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:46,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:46,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:46,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:46,710 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:46,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:46,713 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:46,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:46,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:46,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:46,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:46,720 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:46,723 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:46,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:46,856 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:46,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:46,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:47,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:47,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:47,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:47,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:47,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:47,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:47,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:47,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:47,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:47,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:47,144 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:47,146 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:47,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:47,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:47,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:47,282 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:47,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:47,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:47,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:47,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:47,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:47,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:47,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:47,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:47,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:47,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:47,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:47,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:47,570 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:47,572 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:47,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:47,575 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:47,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:47,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:47,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:47,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:47,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:47,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:47,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:47,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:47,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:47,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:47,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:47,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:47,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:47,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:47,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:48,000 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:48,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:48,003 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:48,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:48,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:48,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:48,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:48,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:48,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:48,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:48,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:48,413 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:48,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:48,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:48,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:48,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:48,422 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:48,424 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:48,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:48,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:48,429 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:48,430 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:48,432 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:48,434 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:48,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:48,566 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:48,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:48,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:48,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:48,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:48,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:48,837 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:48,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:48,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:48,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:48,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:48,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:48,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:48,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:48,851 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:48,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:48,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:48,855 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:48,857 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:48,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:48,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:49,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:49,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:49,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:49,253 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:49,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:49,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:49,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:49,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:49,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:49,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:49,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:49,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:49,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:49,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:49,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:49,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:49,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:49,279 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:49,410 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:49,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:49,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:49,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:49,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:49,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:49,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:49,683 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:49,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:49,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:49,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:49,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:49,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:49,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:49,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:49,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:49,698 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:49,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:49,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:49,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:49,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:49,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:49,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:49,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:50,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:50,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:50,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:50,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:50,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:50,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:50,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:50,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:50,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:50,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:50,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:50,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:50,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:50,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:50,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:50,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:50,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:50,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:50,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:50,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:50,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:50,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:50,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:50,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:50,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:50,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:50,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:50,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:50,545 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:50,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:50,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:50,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:50,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:50,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:50,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:50,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:50,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:50,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:50,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:50,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:50,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:50,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:50,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:50,966 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:50,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:50,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:50,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:50,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:50,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:50,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:50,977 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:51,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:51,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:51,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:51,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:51,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:51,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:51,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:51,860 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:51,864 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:51,865 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:51,867 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:51,868 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:51,870 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:51,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:51,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:51,874 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:51,876 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:51,877 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:51,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:51,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:52,014 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:52,015 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:52,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:52,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:52,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:52,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:52,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:52,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:52,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:52,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:52,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:52,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:52,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:52,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:52,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:52,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:52,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:52,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:52,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:52,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:52,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:52,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:53,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:53,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:53,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:53,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:53,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:53,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:53,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:53,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:53,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:53,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:53,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:53,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:53,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:53,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:53,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:53,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:53,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:53,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:53,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:53,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:53,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:53,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:53,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:53,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:53,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:53,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:53,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:53,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:53,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:53,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:53,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:53,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:53,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:53,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:53,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:53,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:53,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:53,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:53,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:53,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:53,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:53,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:54,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:54,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:54,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:54,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:54,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:54,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:54,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:54,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:54,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:54,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:54,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:54,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:54,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:54,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:54,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:54,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:54,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:54,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:54,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:54,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:54,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:54,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:54,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:54,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:54,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:54,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:54,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:54,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:54,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:54,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:54,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:54,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:54,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:54,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:54,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:54,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:54,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:54,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:54,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:54,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:54,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:54,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:54,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:54,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:54,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:54,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:54,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:54,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:54,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:54,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:54,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:55,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:55,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:55,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:55,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:55,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:55,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:55,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:55,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:55,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:55,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:55,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:55,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:55,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:55,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:55,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:55,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:55,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:55,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:55,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:55,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:55,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:55,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:55,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:55,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:55,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:55,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:55,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:55,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:55,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:55,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:55,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:55,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:55,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:55,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:55,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:55,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:55,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:55,776 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:55,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:55,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:55,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:55,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:56,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:56,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:56,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:56,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:56,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:56,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:56,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:56,190 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:56,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:56,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:56,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:56,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:56,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:56,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:56,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:56,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:56,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:56,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:56,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:56,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:56,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:56,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:56,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:56,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:56,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:56,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:56,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:56,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:56,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:56,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:56,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:56,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:56,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:56,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:56,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:56,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:56,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:56,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:56,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:56,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:56,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:56,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:57,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:57,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:57,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:57,045 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:57,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:57,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:57,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:57,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:57,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:57,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:57,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:57,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:57,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:57,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:57,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:57,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:57,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:57,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:57,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:57,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:57,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:57,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:57,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:57,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:57,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:57,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:57,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:57,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:57,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:57,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:57,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:57,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:57,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:57,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:57,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:57,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:57,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:57,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:57,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:57,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:57,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:57,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:57,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:57,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:57,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:57,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:57,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:57,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:57,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:57,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:57,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:58,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:58,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:58,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:58,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:58,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:58,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:58,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:58,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:58,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:58,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:58,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:58,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:58,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:58,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:58,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:58,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:58,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:58,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:58,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:58,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:58,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:58,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:58,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:58,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:58,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:58,747 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:58,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:58,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:58,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:58,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:58,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:58,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:58,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:58,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:58,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:58,768 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:58,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:58,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:58,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:58,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:58,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:58,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:59,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:59,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:59,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:59,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:59,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:59,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:59,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:59,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:59,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:59,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:59,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:59,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:59,194 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:59,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:59,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:59,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:59,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:59,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:59,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:59,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:59,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:59,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:19:59,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:19:59,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:19:59,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:19:59,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:19:59,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:19:59,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:19:59,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:19:59,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:19:59,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:19:59,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:19:59,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:19:59,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:19:59,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:19:59,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:19:59,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:19:59,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:19:59,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:19:59,763 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:19:59,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:19:59,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:00,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:00,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:00,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:00,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:00,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:00,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:00,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:00,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:00,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:00,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:00,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:00,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:00,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:00,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:00,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:00,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:00,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:00,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:00,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:00,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:00,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:00,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:00,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:00,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:00,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:00,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:00,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:00,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:00,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:00,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:00,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:00,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:00,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:00,620 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:00,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:00,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:00,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:00,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:00,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:00,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:00,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:00,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:00,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:00,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:00,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:00,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:00,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:00,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:00,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:00,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:00,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:01,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:01,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:01,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:01,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:01,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:01,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:01,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:01,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:01,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:01,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:01,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:01,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:01,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:01,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:01,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:01,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:01,818 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:01,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:01,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:01,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:01,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:01,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:02,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:02,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:02,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:02,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:02,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:02,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:02,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:02,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:02,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:02,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:02,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:02,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:02,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:02,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:02,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:02,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:02,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:02,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:02,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:02,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:02,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:02,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:02,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:02,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:02,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:02,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:02,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:02,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:02,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:02,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:02,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:02,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:02,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:02,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:02,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:02,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:02,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:02,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:02,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:02,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:02,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:02,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:03,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:03,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:03,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:03,563 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:03,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:03,568 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:03,569 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:03,571 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:03,573 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:03,574 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:03,576 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:03,577 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:03,578 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:03,580 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:03,581 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:03,583 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:03,715 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:03,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:03,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:03,848 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:03,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:03,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:03,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:03,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:03,991 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:03,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:03,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:03,995 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:03,996 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:03,998 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:03,999 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:04,001 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:04,002 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:04,004 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:04,005 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:04,007 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:04,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:04,140 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:04,270 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:04,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:04,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:04,404 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:04,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:04,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:04,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:04,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:04,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:04,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:04,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:04,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:04,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:04,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:04,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:04,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:04,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:04,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:05,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:05,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:05,170 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:05,171 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:05,304 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:05,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:05,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:05,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:05,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:05,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:05,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:05,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:05,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:05,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:05,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:05,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:05,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:05,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:05,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:05,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:05,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:05,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:05,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:05,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:05,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:05,734 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:05,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:06,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:06,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:06,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:06,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:06,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:06,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:06,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:06,231 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:06,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:06,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:06,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:06,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:06,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:06,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:06,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:06,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:06,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:06,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:06,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:06,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:07,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:07,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:07,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:07,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:07,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:07,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:07,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:07,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:07,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:07,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:07,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:07,137 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:07,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:07,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:07,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:07,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:07,407 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:07,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:07,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:07,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:07,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:07,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:07,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:07,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:07,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:07,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:07,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:07,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:07,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:07,562 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:07,564 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:07,565 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:07,567 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:07,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:07,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:07,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:07,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:07,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:07,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:07,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:07,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:07,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:07,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:07,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:07,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:07,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:07,985 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:07,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:07,988 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:07,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:07,990 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:07,992 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:07,993 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:08,126 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:08,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:08,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:08,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:08,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:08,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:08,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:08,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:08,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:08,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:08,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:08,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:08,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:08,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:08,414 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:08,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:08,416 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:08,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:08,419 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:08,421 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:08,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:08,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:08,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:08,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:08,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:08,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:08,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:08,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:08,834 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:08,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:08,836 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:08,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:08,839 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:08,841 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:08,842 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:08,843 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:08,845 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:08,846 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:08,847 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:08,849 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:08,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:08,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:09,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:09,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:09,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:09,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:09,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:09,259 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:09,262 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:09,264 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:09,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:09,267 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:09,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:09,269 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:09,271 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:09,272 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:09,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:09,275 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:09,276 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:09,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:09,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:09,412 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:09,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:09,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:09,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:09,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:09,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:09,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:09,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:09,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:09,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:09,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:09,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:09,697 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:09,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:09,700 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:09,701 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:09,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:09,704 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:09,706 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:09,838 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:09,840 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:09,972 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:09,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:10,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:10,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:10,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:10,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:10,121 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:10,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:10,124 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:10,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:10,127 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:10,128 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:10,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:10,131 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:10,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:10,134 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:10,266 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:10,268 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:10,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:10,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:10,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:10,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:10,546 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:10,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:10,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:10,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:10,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:10,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:10,554 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:10,556 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:10,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:10,558 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:10,560 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:10,561 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:10,694 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:10,696 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:10,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:10,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:10,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:10,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:11,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:11,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:11,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:11,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:11,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:11,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:11,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:11,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:11,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:11,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:11,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:11,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:11,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:20:11,980 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:20:11,987 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] generate_batch
2023-01-03 14:20:11,989 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] start
2023-01-03 14:20:15,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] POLICY.GENERATE. generation_inputs.inputs.shape = torch.Size([10, 512]) generation_inputs.attention_masks.shape = torch.Size([10, 512])
2023-01-03 14:20:15,535 [INFO] [bold blue]base_policy:[bold white] lowest level of generate.
	- unwrapped_policy_model.config._name_or_path  = 't5-base'
	- input_ids.shape                       = torch.Size([10, 512])
	- attention_mask.shape                  = torch.Size([10, 512])
	- type(unwrapped_policy_model).__name__ = 'T5ForConditionalGeneration'
	- type(self._policy_model).__name__     = 'T5ForConditionalGeneration'
	- self.get_policy_first_device()        = 'cuda:0'

2023-01-03 14:20:16,936 [DEBUG] [bold blue]base_policy:[bold white] DONE: lowest level of generate
2023-01-03 14:20:16,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] DONE WITH POLICY.GENERATE
2023-01-03 14:20:16,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] Starting the post generate loop
2023-01-03 14:20:16,975 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:17,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:17,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:17,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:17,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:17,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:17,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:17,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:17,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:17,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:17,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:17,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:17,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:17,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:17,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:17,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:17,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:17,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:17,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:17,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:17,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:17,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:17,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:17,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:17,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:17,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:17,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:17,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:17,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:17,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:17,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:17,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:17,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:17,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:17,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:17,827 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:17,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:17,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:17,832 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:17,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:17,835 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:17,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:17,969 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:18,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:18,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:18,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:18,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:18,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:18,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:18,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:18,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:18,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:18,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:18,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:18,255 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:18,257 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:18,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:18,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:18,261 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:18,263 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:18,265 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:18,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:18,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:18,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:18,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:18,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:18,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:18,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:18,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:18,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:18,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:18,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:18,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:18,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:18,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:18,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:18,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:18,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:18,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:18,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:18,695 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:18,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:18,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:18,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:18,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:19,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:19,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:19,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:19,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:19,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:19,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:19,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:19,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:19,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:19,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:19,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:19,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:19,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:19,125 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:19,258 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:19,260 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:19,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:19,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:19,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:19,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:19,538 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:19,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:19,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:19,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:19,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:19,545 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:19,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:19,548 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:19,550 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:19,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:19,553 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:19,555 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:19,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:19,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:19,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:19,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:19,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:19,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:19,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:19,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:19,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:19,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:19,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:19,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:19,974 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:19,976 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:19,978 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:19,979 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:19,981 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:19,982 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:19,984 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:20,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:20,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:20,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:20,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:20,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:20,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:20,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:20,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:20,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:20,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:20,397 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:20,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:20,400 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:20,402 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:20,403 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:20,405 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:20,406 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:20,408 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:20,409 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:20,411 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:20,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:20,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:20,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:20,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:20,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:20,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:20,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:20,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:20,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:20,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:20,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:20,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:20,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:20,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:20,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:20,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:20,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:20,829 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:20,831 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:20,833 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:20,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:20,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:21,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:21,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:21,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:21,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:21,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:21,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:21,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:21,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:21,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:21,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:21,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:21,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:21,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:21,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:21,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:21,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:21,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:21,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:21,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:21,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:21,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:21,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:21,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:21,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:21,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:21,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:21,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:21,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:21,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:21,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:21,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:21,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:21,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:21,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:21,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:21,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:21,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:21,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:21,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:21,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:21,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:21,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:22,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:22,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:22,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:22,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:22,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:22,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:22,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:22,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:22,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:22,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:22,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:22,114 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:22,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:22,117 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:22,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:22,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:22,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:22,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:22,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:22,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:22,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:22,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:22,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:22,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:22,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:22,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:22,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:22,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:22,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:22,542 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:22,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:22,545 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:22,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:22,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:22,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:22,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:22,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:22,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:22,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:22,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:22,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:22,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:22,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:22,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:22,964 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:22,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:22,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:22,968 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:22,970 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:22,971 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:22,973 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:23,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:23,107 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:23,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:23,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:23,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:23,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:23,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:23,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:23,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:23,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:23,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:23,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:23,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:23,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:23,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:23,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:23,396 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:23,398 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:23,399 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:23,401 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:23,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:23,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:23,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:23,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:23,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:23,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:23,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:23,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:23,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:23,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:23,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:23,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:23,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:23,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:23,822 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:23,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:23,825 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:23,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:23,828 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:23,830 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:23,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:23,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:24,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:24,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:24,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:24,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:24,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:24,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:24,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:24,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:24,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:24,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:24,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:24,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:24,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:24,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:24,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:24,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:24,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:24,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:24,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:24,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:24,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:24,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:24,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:24,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:24,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:24,655 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:24,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:24,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:24,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:24,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:24,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:24,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:24,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:24,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:24,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:24,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:24,674 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:24,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:24,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:24,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:24,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:24,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:25,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:25,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:25,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:25,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:25,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:25,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:25,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:25,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:25,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:25,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:25,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:25,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:25,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:25,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:25,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:25,231 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:25,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:25,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:25,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:25,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:25,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:25,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:25,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:25,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:25,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:25,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:25,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:25,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:25,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:25,518 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:25,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:25,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:25,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:25,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:25,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:25,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:25,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:25,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:25,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:25,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:25,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:25,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:25,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:25,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:25,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:25,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:25,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:25,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:25,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:25,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:25,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:26,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:26,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:26,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:26,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:26,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:26,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:26,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:26,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:26,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:26,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:26,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:26,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:26,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:26,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:26,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:26,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:26,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:26,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:26,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:26,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:26,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:26,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:26,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:26,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:26,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:26,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:26,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:26,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:26,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:26,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:26,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:26,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:26,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:26,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:26,798 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:26,800 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:26,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:26,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:26,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:26,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:26,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:26,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:27,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:27,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:27,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:27,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:27,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:27,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:27,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:27,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:27,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:27,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:27,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:27,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:27,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:27,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:27,231 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:27,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:27,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:27,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:27,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:27,370 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:27,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:27,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:27,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:27,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:27,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:27,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:27,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:27,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:27,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:27,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:27,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:27,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:27,656 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:27,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:27,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:27,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:27,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:27,664 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:27,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:27,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:27,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:27,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:28,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:28,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:28,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:28,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:28,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:28,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:28,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:28,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:28,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:28,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:28,085 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:28,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:28,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:28,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:28,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:28,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:28,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:28,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:28,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:28,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:28,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:28,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:28,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:28,504 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:28,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:28,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:28,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:28,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:28,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:28,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:28,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:28,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:28,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:28,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:28,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:28,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:28,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:28,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:28,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:28,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:28,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:28,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:28,930 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:28,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:28,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:28,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:28,936 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:28,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:28,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:28,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:28,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:29,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:29,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:29,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:29,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:29,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:29,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:29,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:29,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:29,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:29,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:29,356 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:29,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:29,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:29,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:29,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:29,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:29,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:29,366 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:29,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:29,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:29,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:29,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:29,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:29,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:29,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:29,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:29,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:29,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:29,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:29,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:29,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:29,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:29,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:29,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:29,789 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:29,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:29,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:29,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:29,795 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:29,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:29,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:29,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:30,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:30,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:30,197 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:30,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:30,200 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:30,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:30,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:30,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:30,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:30,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:30,214 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:30,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:30,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:30,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:30,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:30,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:30,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:30,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:30,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:30,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:30,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:30,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:30,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:30,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:30,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:30,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:30,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:30,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:30,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:30,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:30,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:30,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:30,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:30,647 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:30,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:30,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:30,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:30,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:30,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:30,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:30,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:30,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:31,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:31,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:31,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:31,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:31,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:31,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:31,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:31,072 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:31,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:31,075 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:31,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:31,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:31,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:31,082 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:31,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:31,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:31,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:31,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:31,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:31,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:31,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:31,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:31,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:31,496 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:31,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:31,499 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:31,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:31,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:31,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:31,505 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:31,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:31,508 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:31,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:31,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:31,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:31,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:31,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:31,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:31,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:31,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:31,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:31,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:31,922 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:31,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:31,925 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:31,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:31,928 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:31,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:31,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:31,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:31,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:32,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:32,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:32,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:32,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:32,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:32,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:32,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:32,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:32,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:32,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:32,346 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:32,348 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:32,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:32,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:32,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:32,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:32,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:32,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:32,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:32,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:32,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:32,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:32,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:32,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:32,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:32,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:32,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:32,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:32,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:32,771 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:32,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:32,774 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:32,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:32,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:32,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:32,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:32,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:32,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:32,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:32,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:32,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:32,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:33,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:33,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:33,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:33,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:33,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:33,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:33,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:33,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:33,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:33,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:33,204 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:33,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:33,207 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:33,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:33,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:33,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:33,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:33,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:33,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:33,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:33,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:33,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:33,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:33,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:33,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:33,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:33,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:33,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:33,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:33,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:33,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:33,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:33,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:33,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:33,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:33,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:33,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:33,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:33,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:33,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:33,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:33,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,042 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:34,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:34,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:34,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:34,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:34,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:34,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:34,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:34,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:34,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:34,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:34,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:34,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:34,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:34,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:34,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:34,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:34,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:34,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:34,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:34,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:34,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:34,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:34,484 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:34,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:34,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:34,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:34,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:34,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:34,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:34,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:34,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:34,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:34,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:34,630 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:34,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:34,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:34,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:34,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:34,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:34,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:34,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:34,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:34,908 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:34,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:34,911 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:34,913 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:34,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:34,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:34,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:34,919 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:34,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:35,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:35,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:35,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:35,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:35,316 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:35,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:35,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:35,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:35,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:35,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:35,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:35,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:35,333 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:35,336 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:35,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:35,339 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:35,340 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:35,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:35,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:35,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:35,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:35,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:35,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:35,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:35,740 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:35,742 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:35,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:35,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:35,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:35,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:35,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:35,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:35,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:35,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:35,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:35,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:35,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:35,765 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:35,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:35,769 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:35,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:35,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:36,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:36,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:36,164 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:36,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:36,167 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:36,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:36,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:36,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:36,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:36,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:36,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:36,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:36,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:36,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:36,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:36,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:36,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:36,193 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:36,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:36,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:36,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:36,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:36,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:36,596 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:36,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:36,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:36,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:36,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:36,609 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:36,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:36,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:36,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:36,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:36,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:36,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:36,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:36,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:36,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:36,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:36,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:36,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:36,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,025 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:37,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:37,032 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:37,035 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:37,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:37,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:37,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:37,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:37,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:37,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:37,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:37,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:37,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:37,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:37,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:37,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:37,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:37,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:37,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:37,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:37,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:37,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:37,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:37,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:37,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:37,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:37,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:37,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:37,475 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:37,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:37,478 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:37,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:37,481 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:37,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:37,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:37,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:37,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:37,883 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:37,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:37,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:37,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:37,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:37,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:37,898 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:37,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:37,901 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:37,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:37,904 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:37,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:37,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:37,909 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:37,910 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:38,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:38,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:38,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:38,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:38,306 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:38,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:38,309 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:38,314 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:38,317 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:38,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:38,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:38,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:38,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:38,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:38,326 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:38,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:38,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:38,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:38,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:38,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:38,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:38,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:38,597 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:38,599 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:38,730 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:38,732 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:38,733 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:39,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:39,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:39,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:39,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:39,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:39,221 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:39,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:39,224 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:39,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:39,227 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:39,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:39,230 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:39,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:39,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:39,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:39,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:39,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:39,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:39,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:39,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:39,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:39,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:39,637 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:39,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:39,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:39,641 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:39,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:39,644 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:39,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:39,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:39,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:39,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:39,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:39,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:39,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:39,916 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:39,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,049 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:40,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:40,058 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:40,061 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:40,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:40,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:40,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:40,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:40,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:40,070 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:40,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:40,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:40,074 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:40,076 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:40,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:40,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:40,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:40,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:40,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:40,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:40,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:40,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:40,487 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:40,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:40,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:40,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:40,493 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:40,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:40,497 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:40,498 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:40,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:40,501 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:40,503 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:40,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:40,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:40,770 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:40,772 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:40,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:40,906 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:40,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:40,915 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:40,917 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:40,918 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:40,920 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:40,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:40,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:40,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:40,926 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:40,927 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:40,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:40,931 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:40,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:41,064 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:41,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:41,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:41,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:41,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:41,330 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:41,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:41,338 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:41,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:41,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:41,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:41,345 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:41,347 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:41,349 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:41,351 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:41,352 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:41,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:41,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:41,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:41,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:41,490 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:41,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:41,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:41,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:41,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:41,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:41,757 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:42,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:42,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:42,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:42,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:42,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:42,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:42,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:42,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:42,248 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:42,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:42,251 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:42,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:42,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:42,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:42,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:42,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:42,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:42,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:42,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:42,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:42,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:42,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:42,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:42,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:42,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:42,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:42,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:42,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:42,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:42,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:42,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:42,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:42,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:42,812 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:42,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:42,946 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:42,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,081 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,083 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:43,084 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:43,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:43,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:43,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:43,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:43,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:43,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:43,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:43,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:43,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:43,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:43,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:43,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:43,110 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:43,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:43,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:43,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:43,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,512 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:43,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:43,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:43,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:43,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:43,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:43,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:43,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:43,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:43,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:43,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:43,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:43,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:43,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:43,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:43,671 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:43,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:43,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:43,806 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:43,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:43,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:43,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:43,950 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:43,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:43,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:43,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:43,956 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:43,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:43,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:43,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:43,962 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:43,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:43,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:43,967 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:44,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:44,100 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:44,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:44,234 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:44,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:44,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:44,368 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:44,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:44,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:44,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:44,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:44,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:44,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:44,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:44,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:44,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:44,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:44,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:44,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:44,394 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:44,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:44,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:44,659 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:44,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:44,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:44,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:44,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:44,801 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:44,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:44,805 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:44,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:44,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:44,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:44,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:44,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:44,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:44,816 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:44,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:44,819 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:44,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:44,953 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:44,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:45,087 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:45,088 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:45,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:45,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:45,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:45,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:45,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:45,233 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:45,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:45,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:45,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:45,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:45,241 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:45,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:45,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:45,245 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:45,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:45,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:45,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:45,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:45,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:45,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:45,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:45,650 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:45,652 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:45,657 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:45,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:45,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:45,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:45,665 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:45,666 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:45,667 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:45,669 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:45,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:45,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:45,673 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:45,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:45,677 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:45,809 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:45,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:45,943 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:45,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,077 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,079 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:46,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:46,086 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:46,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:46,090 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:46,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:46,093 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:46,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:46,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:46,098 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:46,099 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:46,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:46,102 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:46,104 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:46,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:46,238 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:46,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:46,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:46,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,507 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,509 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:46,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:46,516 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:46,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:46,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:46,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:46,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:46,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:46,526 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:46,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:46,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:46,530 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:46,532 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:46,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:46,535 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:46,668 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:46,670 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:46,802 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:46,803 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:46,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:46,939 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:46,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:46,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:46,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:46,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:46,952 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:46,954 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:46,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:46,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:46,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:46,960 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:46,961 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:46,963 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:46,965 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:47,096 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:47,097 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:47,228 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:47,229 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:47,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:47,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:47,363 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:47,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:47,372 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:47,373 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:47,374 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:47,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:47,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:47,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:47,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:47,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:47,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:47,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:47,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:47,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:47,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:47,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:47,651 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:47,653 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:47,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:47,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:47,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:48,273 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:48,277 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:48,278 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:48,280 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:48,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:48,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:48,284 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:48,286 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:48,287 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:48,289 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:48,290 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:48,292 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:48,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:48,425 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:48,427 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:48,557 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:48,559 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:48,690 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:48,692 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:48,693 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:48,699 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:48,702 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:48,703 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:48,705 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:48,707 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:48,708 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:48,709 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:48,711 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:48,712 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:48,714 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:48,716 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:48,717 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:48,719 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:48,852 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:48,854 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:48,986 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:48,987 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:49,120 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:49,122 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:49,123 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:49,129 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:49,132 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:49,133 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:49,135 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:49,136 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:49,138 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:49,139 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:49,141 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:49,142 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:49,143 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:49,145 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:49,147 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:49,149 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:49,281 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:49,283 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:49,415 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:49,417 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:49,549 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:49,551 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:49,552 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:50,506 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:50,510 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:50,511 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:50,513 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:50,514 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:50,515 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:50,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:50,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:50,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:50,521 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:50,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:50,525 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:50,527 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:50,658 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:50,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:50,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:50,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:50,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:50,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:50,924 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:50,929 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:50,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:50,934 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:50,935 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:50,937 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:50,938 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:50,940 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:50,941 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:50,942 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:50,944 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:50,945 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:50,947 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:50,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:51,078 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:51,080 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:51,210 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:51,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:51,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:51,343 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:51,344 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:51,350 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:51,353 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:51,354 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:51,355 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:51,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:51,358 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:51,360 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:51,361 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:51,362 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:51,364 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:51,365 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:51,367 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:51,369 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:51,500 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:51,502 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:51,632 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:51,634 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:51,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:51,766 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:51,767 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:51,773 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:51,775 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:51,777 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:51,778 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:51,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:51,781 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:51,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:51,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:51,785 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:51,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:51,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:51,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:51,792 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:51,921 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:51,923 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:52,052 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:52,054 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:52,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:52,185 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:52,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:52,192 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:52,195 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:52,196 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:52,198 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:52,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:52,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:52,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:52,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:52,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:52,206 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:52,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:52,209 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:52,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:52,341 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:52,342 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:52,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:52,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:52,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:52,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:52,606 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:52,612 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:52,615 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:52,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:52,618 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:52,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:52,621 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:52,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:52,624 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:52,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:52,626 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:52,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:52,629 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:52,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:52,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:52,764 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:52,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:52,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,027 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:53,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:53,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:53,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:53,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:53,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:53,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:53,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:53,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:53,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:53,048 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:53,050 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:53,051 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:53,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:53,055 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:53,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:53,188 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:53,319 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:53,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,451 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,453 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:53,455 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:53,460 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:53,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:53,464 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:53,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:53,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:53,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:53,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:53,471 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:53,473 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:53,474 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:53,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:53,477 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:53,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:53,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:53,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:53,745 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:53,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,879 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:53,880 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:53,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:53,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:53,890 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:53,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:53,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:53,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:53,896 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:53,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:53,899 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:53,900 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:53,902 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:53,903 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:53,905 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:53,907 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:54,039 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:54,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:54,173 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:54,174 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:54,307 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:54,308 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:54,310 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:54,315 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:54,318 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:54,320 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:54,321 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:54,322 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:54,324 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:54,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:54,327 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:54,328 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:54,329 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:54,331 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:54,332 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:54,334 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:54,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:54,468 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:54,601 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:54,602 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:54,735 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:54,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:54,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:54,743 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:54,746 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:54,748 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:54,749 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:54,750 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:54,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:54,753 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:54,755 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:54,756 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:54,758 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:54,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:54,761 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:54,762 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:54,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:54,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:55,029 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:55,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:55,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:55,165 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:55,166 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:55,172 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:55,175 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:55,176 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:55,177 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:55,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:55,180 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:55,182 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:55,183 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:55,184 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:55,186 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:55,187 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:55,189 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:55,191 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:55,323 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:55,325 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:55,457 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:55,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:55,591 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:55,593 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:55,594 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:55,600 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:55,603 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:55,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:55,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:55,607 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:55,608 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:55,610 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:55,611 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:55,613 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:55,614 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:55,616 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:55,617 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:55,619 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:55,752 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:55,754 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:55,886 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:55,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,020 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,021 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:56,023 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:56,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:56,031 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:56,033 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:56,034 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:56,036 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:56,037 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:56,038 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:56,040 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:56,041 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:56,043 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:56,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:56,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:56,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:56,179 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:56,181 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:56,312 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:56,313 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,445 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,447 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:56,448 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:56,454 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:56,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:56,458 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:56,459 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:56,461 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:56,462 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:56,463 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:56,465 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:56,466 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:56,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:56,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:56,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:56,472 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:56,604 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:56,605 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:56,736 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:56,738 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,869 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:56,871 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:56,873 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:56,878 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:56,881 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:56,882 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:56,884 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:56,885 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:56,887 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:56,888 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:56,889 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:56,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:56,892 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:56,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:56,895 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:56,897 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:57,028 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:57,030 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:57,161 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:57,163 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:57,294 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:57,296 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:57,297 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:57,779 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:57,783 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:57,784 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:57,786 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:57,787 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:57,788 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:57,790 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:57,791 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:57,793 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:57,794 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:57,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:57,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:57,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:57,932 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:57,933 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:58,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:58,067 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:58,199 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:58,201 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:58,202 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:58,208 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:58,211 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:58,212 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:58,213 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:58,215 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:58,216 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:58,218 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:58,219 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:58,220 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:58,222 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:58,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:58,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:58,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:58,357 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:58,359 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:58,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:58,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:58,622 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:58,623 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:58,625 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:58,631 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:58,633 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:58,635 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:58,636 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:58,638 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:58,639 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:58,640 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:58,642 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:58,643 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:58,645 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:58,646 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:58,648 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:58,649 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:58,780 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:58,782 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:58,912 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:58,914 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,044 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,046 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:59,047 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:59,053 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:59,056 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:59,057 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:59,059 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:59,060 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:59,062 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:59,063 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:59,065 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:59,066 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:59,068 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:59,069 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:59,071 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:59,073 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:59,203 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:59,205 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:59,335 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:59,337 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,467 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,469 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:59,470 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:20:59,476 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:20:59,479 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:20:59,480 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:20:59,482 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:20:59,483 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:20:59,485 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:20:59,486 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:20:59,488 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:20:59,489 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:20:59,491 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:20:59,492 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:20:59,494 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:20:59,495 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:20:59,627 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:20:59,628 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:20:59,759 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:20:59,760 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,891 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:20:59,893 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:20:59,894 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:00,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:00,378 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:00,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:00,381 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:00,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:00,384 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:00,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:00,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:00,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:00,390 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:00,392 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:00,393 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:00,395 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:00,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:00,529 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:00,661 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:00,663 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:00,796 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:00,797 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:00,799 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:00,804 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:00,807 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:00,808 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:00,810 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:00,811 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:00,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:00,814 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:00,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:00,817 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:00,818 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:00,820 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:00,821 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:00,823 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:00,955 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:00,957 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:01,089 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:01,091 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:01,223 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:01,225 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:01,226 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:01,232 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:01,235 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:01,236 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:01,237 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:01,239 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:01,240 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:01,242 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:01,243 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:01,244 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:01,246 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:01,247 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:01,249 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:01,250 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:01,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:01,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:01,517 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:01,519 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:01,654 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:01,660 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:01,662 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:01,672 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:01,675 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:01,676 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:01,678 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:01,679 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:01,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:01,682 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:01,684 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:01,685 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:01,687 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:01,688 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:01,689 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:01,691 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:01,824 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:01,826 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:01,958 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:01,959 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,092 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,094 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:02,095 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:02,101 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:02,103 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:02,105 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:02,106 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:02,108 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:02,109 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:02,111 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:02,112 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:02,113 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:02,115 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:02,116 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:02,118 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:02,119 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:02,252 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:02,254 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:02,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:02,387 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,520 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,522 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:02,523 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:02,528 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:02,531 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:02,533 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:02,534 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:02,536 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:02,537 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:02,539 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:02,540 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:02,541 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:02,543 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:02,544 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:02,545 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:02,547 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy
2023-01-03 14:21:02,680 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward policy DONE
2023-01-03 14:21:02,681 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value
2023-01-03 14:21:02,813 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: forward value DONE
2023-01-03 14:21:02,815 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,948 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop: DONE: GET LOG PROBS REF MODEL
2023-01-03 14:21:02,949 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] post gen loop - Done
2023-01-03 14:21:02,951 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP actions.shape = (10,)
2023-01-03 14:21:04,371 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] ENV STEP DONE
2023-01-03 14:21:04,375 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately
2023-01-03 14:21:04,376 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 0 / 10
2023-01-03 14:21:04,377 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 1 / 10
2023-01-03 14:21:04,379 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 2 / 10
2023-01-03 14:21:04,380 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 3 / 10
2023-01-03 14:21:04,382 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 4 / 10
2023-01-03 14:21:04,383 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 5 / 10
2023-01-03 14:21:04,385 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 6 / 10
2023-01-03 14:21:04,386 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 7 / 10
2023-01-03 14:21:04,388 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 8 / 10
2023-01-03 14:21:04,389 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] store episode wise transitions separately 9 / 10
2023-01-03 14:21:04,391 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer len(episode_wise_transitions) = 10
2023-01-03 14:21:04,456 [DEBUG] [bold blue]OnPolicyAlgText.generate_batch:[bold white] self.add_to_buffer Done
2023-01-03 14:21:04,463 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Got Out of Generate_batch
2023-01-03 14:21:04,522 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Logging rollouts to tracker
2023-01-03 14:21:04,523 [INFO] Rollout Info: {'rollout_info/ep_rew': 0.35066912355167523, 'rollout_info/ep_rew_std': 0.13164587452620463, 'rollout_info/kl_div_mean': 0.0, 'rollout_info/kl_div_mean_std': 0.0, 'rollout_info/ep_lens': 79.6, 'rollout_info/ep_lens_std': 15.50520649883221, 'rollout_info/ep_kl_rew': 0.0, 'rollout_info/ep_kl_rew_std': 0.0, 'rollout_info/log_prob': -1.183419108390808, 'rollout_info/log_prob_std': 1.6384001970291138, 'rollout_info/ref_log_prob': -1.183419108390808, 'rollout_info/ref_log_prob_std': 1.6384001970291138, 'rollout_info/values': 0.01457538828253746, 'rollout_info/values_std': 0.10988656431436539, 'rollout_info/kl_coeff': 0.001}
2023-01-03 14:21:04,528 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Stepping KL Controller
2023-01-03 14:21:04,532 [DEBUG] [blue bold]OnPolicyAlgText.collect_rollouts:[white bold] Stepped KL Controller. Returning
2023-01-03 14:21:04,545 [INFO] [bold blue]on_policy_algorithm.learn: [bold white]Got out of self.collect_rollouts
2023-01-03 14:21:04,547 [INFO] [bold blue]on_policy_algorithm.learn: [bold white]iteration = 1
